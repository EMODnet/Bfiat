[{"path":"https://EMODnet.github.io/Bfiat/articles/Bfiat.html","id":"aim-","dir":"Articles","previous_headings":"","what":"Aim.","title":"Bfiat: Modelling trawling effects on ecosystem functioning","text":"document describes estimate impact bottom fisheries sediment ecosystem functioning, using R-package Bfiat (Bottom Fisheries Impact Assessment Tool). R-package contains data-driven mechanistic model describes species density reduced bottom trawling, recovers till next fishing event. outcome biological module trajectories species (taxon) densities time. species densities change, also ecosystem functions delivered community change.","code":""},{"path":"https://EMODnet.github.io/Bfiat/articles/Bfiat.html","id":"two-logistic-growth-models-including-fisheries","dir":"Articles","previous_headings":"","what":"Two logistic growth models including fisheries","title":"Bfiat: Modelling trawling effects on ecosystem functioning","text":"Logistic growth describes species density biomass evolves sediment undisturbed (.e. fishing events). logistic model reads: dDidt=ri⋅Di⋅(1−DiKi),\\frac{dD_i}{dt}=r_i \\cdot D_i \\cdot (1-\\frac{D_i}{K_i}), tt time, DiD_i density species ii particular time, KiK_i carrying capacity species ii, rir_i logistic growth parameter (units [/time]). term left hand side, dDidt\\frac{dD_i}{dt} expresses DiD_i changes time (derivative). parameters rir_i KiK_i specific species ii; carrying capacity KiK_i also depends site species found.","code":""},{"path":"https://EMODnet.github.io/Bfiat/articles/Bfiat.html","id":"fisheries-events","dir":"Articles","previous_headings":"Two logistic growth models including fisheries","what":"Fisheries events","title":"Bfiat: Modelling trawling effects on ecosystem functioning","text":"include impact fisheries logistic growth model, can assume trawling occurs series events, instantaneously decimate populations. events populations recover. fishing models consist two parts: sediment trawled, times tjt_j, density species ii, instantaneously depleted fraction did_i, fraction 1−di1-d_i remains: Ditj+=Ditj−×(1−di),D_i^{t_j^+} = D_i^{t_j^-} \\times (1-d_i), Ditj+D_i^{t_j^+} Ditj−D_i^{t_j^-} density trawling occurs time tjt_j respectively, did_i depletion fraction. higher depletion factor did_i, density species trawling reduced. fishing, population restores according logistic growth equation dDidt=ri⋅Di⋅(1−DiKi).\\frac{dD_i}{dt}=r_i \\cdot D_i \\cdot (1-\\frac{D_i}{K_i}). , proportion grid cell swept fishing gear per year, used estimate mean time fishing events : ΔT=1S\\Delta T = \\frac{1}{S}, years. , times fishing events can estimated, e.g. Tj=Tj−1+ΔTT_j = T_{j-1} + \\Delta T, assume equally spaced fishing events.","code":""},{"path":"https://EMODnet.github.io/Bfiat/articles/Bfiat.html","id":"continuous-fishing","dir":"Articles","previous_headings":"Two logistic growth models including fisheries","what":"Continuous fishing","title":"Bfiat: Modelling trawling effects on ecosystem functioning","text":"Another approoach model fishing pressure populations assume fishing induces constant mortality benthos large area rather caused set localised events. case, (continuous) dynamic model reads (e.g. Pitcher et al., 2017): dDidt=ri⋅Di⋅(1−DiKi)−mi⋅Di,\\frac{dD_i}{dt}=r_i \\cdot D_i \\cdot (1-\\frac{D_i}{K_i}) - m_i  \\cdot D_i, mim_i constant mortality induced upon species ii.","code":""},{"path":"https://EMODnet.github.io/Bfiat/articles/Bfiat.html","id":"r-package-bfiat","dir":"Articles","previous_headings":"","what":"R-package Bfiat","title":"Bfiat: Modelling trawling effects on ecosystem functioning","text":"R-package Bfiat (Soetaert Beauchard, 2024) contains: Functions estimate bottom trawling impacts density Functions estimate bottom trawling impacts ecosystem functions. Functions calculate fishing parameters. Datasets apply Bfiat functions.","code":"##  [1] \"critical_d\"        \"critical_gpd\"      \"critical_r\"        ##  [4] \"critical_sar\"      \"density_logistic\"  \"density_metier\"    ##  [7] \"density_perturb\"   \"run_logistic\"      \"run_perturb\"       ## [10] \"sensitivity_area\"  \"sensitivity_taxon\" \"steady_logistic\"   ## [13] \"steady_metier\"     \"steady_perturb\"    \"trawl_metier\"      ## [16] \"trawl_perturb\" ## [1] \"get_Db_model\"    \"get_irr_model\"   \"get_trait_model\" ## [1] \"par_d\" \"par_K\" \"par_m\" \"par_r\" ## [1] \"NIOZdata\" \"SAR\""},{"path":[]},{"path":"https://EMODnet.github.io/Bfiat/articles/Bfiat.html","id":"trawling-events","dir":"Articles","previous_headings":"Two functions for the assessment of bottom trawling on benthic density.","what":"Trawling events","title":"Bfiat: Modelling trawling effects on ecosystem functioning","text":"Functions density_perturb run_perturb estimate impact bottom disturbances benthic taxa. functions implement model, require slightly different inputs. instance, function run_perturb accepts randomly spaced trawling times (via argument events), density_perturb . Function density_metier allows input several metiers, sar depletion fraction. defined : example, estimate trawling impact one species, trawling occurring either twice per year (S1=1,S2=2S1=1, S2=2). trawling lasts 10 years, sediment remains untrawled another 10 years. Two trawling impact runs, species [r=0.5/yr, K=10 ind, d=0.1]; trawling lasts 10 years, followed recovery 10 years","code":"density_perturb (K = 1, r = 1, d = 0.1, parms = data.frame(K = K, r = r,    d = d), sar = 1, taxon_names = parms[[\"taxon\"]], D0 = parms[[\"K\"]],    times = 1, tstart_perturb = min(times) + 0.5/sar, tend_perturb = max(times),    as.deSolve = TRUE) density_metier (K = 1, r = 1, parms = data.frame(K = K, r = r), d = data.frame(0.1,    0.1), sar = data.frame(1, 2), taxon_names = parms[[\"taxon\"]],    D0 = parms[[\"K\"]], times = 1, tstart_perturb = min(times) +    0.5/sar, tend_perturb = max(times), as.deSolve = TRUE) run_perturb (parms, times, sar = 1, tstart_perturb = min(times) +    0.5/sar, tend_perturb = max(times), events = NULL, taxon_names = parms[[\"taxon\"]],    D0 = parms[[\"K\"]], addsum = FALSE, verbose = FALSE) times <- seq(0, 20, length.out=1000)   # output times, years  # species-specific parameters parms <- list(r = 0.5,   # [/yr], rate of increase               K = 10,    # [ind], carrying capacity               d = 0.1)   # [-]  , depletion fraction  # run the model - one trawling event per year out1 <- density_perturb(parms          = parms,                         times          = times,                          tstart_perturb = 2,                         tend_perturb   = 10,                         sar            = 1.)                   # run the model - two trawling events per year out2 <- density_perturb(parms          = parms,                         times          = times,                          tstart_perturb = 2,                         tend_perturb   = 10,                         sar            = 2.)   # show the results plot(out1, out2,       xlab = \"years\",       ylab = \"density\",       main = \"Trawling with events\",       lty = 1, lwd = 2, las=1)  legend(\"bottomright\",         title = \"sar\",legend = c(\"1/yr\", \"2/yr\"),         lty = 1, col = 1:2)"},{"path":"https://EMODnet.github.io/Bfiat/articles/Bfiat.html","id":"constant-trawling","dir":"Articles","previous_headings":"Two functions for the assessment of bottom trawling on benthic density.","what":"Constant trawling","title":"Bfiat: Modelling trawling effects on ecosystem functioning","text":"Functions density_logistic run_logistic implement fishing model constant mortality, defined : run model mortality = 0.1 0.2 /year. assume fishing stops 10 years. can simply set argument tend_perturb. Two trawling impact runs, species [r=0.5/yr, K=10 ind, d=0.1, m=0.1 m=0.2/yr]; trawling lasts 10 years, followed recovery 10 years","code":"density_logistic (K = 1, r = 1, m = 0.1, parms = data.frame(K = K, r = r,    m = m), taxon_names = parms[[\"taxon\"]], D0 = parms[[\"K\"]],    times = 1, tstart_perturb = min(times), tend_perturb = max(times),    as.deSolve = TRUE) run_logistic (parms, times, tstart_perturb = min(times), tend_perturb = max(times),    taxon_names = parms[[\"taxon\"]], D0 = parms[[\"K\"]], addsum = FALSE,    verbose = FALSE) times <- seq(0, 20, length.out=1000)   # output times, years  parms <- list(r = 0.5,   # [/yr], rate of increase               K = 10,    # [ind], carrying capacity               m = 0.1)   # [/yr], mortality rate  c1 <- density_logistic(times          = times,                         tstart_perturb = 2,                        tend_perturb   = 10,                         parms          = parms)  # increase mortality p2      <- parms p2$m    <- 0.2  c2 <- density_logistic(times          = times,                         tstart_perturb = 2,                        tend_perturb   = 10,                         parms          = p2)  # Show results plot(c1, c2,       xlab = \"years\", ylab = \"density\",       main = \"Constant trawling\",       lty = 1, lwd = 2, las = 1)  legend(\"bottomright\",         legend = c(\"0.2/yr\", \"0.4/yr\"), title = \"m\",        lty = 1, col = 1:2)"},{"path":"https://EMODnet.github.io/Bfiat/articles/Bfiat.html","id":"effect-of-trawling-on-several-species","dir":"Articles","previous_headings":"Two functions for the assessment of bottom trawling on benthic density.","what":"Effect of trawling on several species","title":"Bfiat: Modelling trawling effects on ecosystem functioning","text":"models can run several species : Trawling impacts three species (s1, s2 s3) two trawling intensities","code":"times <- seq(0, 20, length.out=1000)  # output times      [year]  # Species names and parameters parms <- data.frame(   taxon = c(\"s1\", \"s2\", \"s3\"),   K     = c(   2,   10,    4),  # carrying capacity [g/m2]   r     = c(   2,    5,  0.4),  # rate of increase  [/year]   d     = c( 0.5,  0.3,  0.1)   # depletion rate )  # run the model run1 <- density_perturb(parms          = parms,                          times          = times,                          tstart_perturb = 2,                         tend_perturb   = 10,                         sar            = 0   )  run2 <- density_perturb(parms          = parms,                          times          = times,                          tstart_perturb = 2,                         tend_perturb   = 10,                         sar            = 1   )  run3 <- density_perturb(parms          = parms,                          times          = times,                          tstart_perturb = 2,                         tend_perturb   = 10,                         sar            = 2   ) # show the results plot(run1, run2, run3,       lty=1, lwd=2, mfrow=c(3,1), las=1) legend(x=\"bottomright\",         legend=c(\"0\", \"1\", \"2\"), title=\"trawls/year\",         col=1:3, lty=1, lwd=2)"},{"path":"https://EMODnet.github.io/Bfiat/articles/Bfiat.html","id":"multiple-metiers","dir":"Articles","previous_headings":"Two functions for the assessment of bottom trawling on benthic density.","what":"Multiple metiers","title":"Bfiat: Modelling trawling effects on ecosystem functioning","text":"can also simulate several metiers (fishing activities), depletion induced species: Trawling impacts four species (s1, s2, s3 s4) three metiers","code":"times <- seq(0, 20, length.out=1000)  # output times      [year]  # Species names and parameters parms <- data.frame(   taxon = c(\"s1\", \"s2\", \"s3\", \"s4\"),   K     = c(   2,  10,    4,     1),  # carrying capacity [/m2]   r     = c(   5,   2,  0.4,     1)   # rate of increase  [/year] )  # 4 metiers  sar  <- data.frame(m1 = 1, m2 = 0.7, m3 = 1.5)  # depletion rate is species (rows) and metier- specific (columns) #                          sp1   sp2    sp3    sp4 d    <- data.frame(m1 = c( 0.5,  0.3,   0.1,   0.3),  # metier 1                    m2 = c( 0.3,  0.6,   0.2,   0.2),  # metier 2                    m3 = c( 0.2,  0.1,  0.02,  0.05)) # run the model runm <- density_metier(parms          = parms,                         d              = d,                        times          = times,                         tstart_perturb = c(0.5, 1, 1.5),                        tend_perturb   = 10,                        sar            = sar   ) # show the results plot(runm, lty = 1, las = 1) #, main = \"3 metiers\")"},{"path":[]},{"path":"https://EMODnet.github.io/Bfiat/articles/Bfiat.html","id":"trawling-impacts-on-traits","dir":"Articles","previous_headings":"Trawling impacts on traits and ecosystem functions","what":"Trawling impacts on traits","title":"Bfiat: Modelling trawling effects on ecosystem functioning","text":"Function get_trait_model combines modeled species responses traits; defined : Using previous model runs, estimate impact trawling feeding type species, assume either suspension deposit feeders. first define extent , species, types feeding contributes diet, sum proportions = 1. calculate feeding types affected trawling. first estimate total numbers types, also estimate relative contribution (using argument scalewithvalue). Change absolute (top) relative (bottom) contribution feeding types due trawling Similarly, can merge model output instance mean weight taxon, scalewithvalue=FALSE, obtain summed weights individuals, whereas scalewithvalue=TRUE, obtain mean weight entire community. Change mean total weight due trawling","code":"get_trait_model (model, trait, trait_class = NULL, trait_score = NULL,    taxon_names = colnames(model)[-1], taxonomy = NULL, taxon_column = 1,    scalewithvalue = TRUE, verbose = FALSE) feedingtype <- data.frame(taxon      = c(\"s1\", \"s2\", \"s3\"),                            suspension = c(   0,  0.5,   1),                            deposit    = c(   1,  0.5,   0))  knitr::kable(feedingtype) FT  <- get_trait_model(model          = run2,                         trait          = feedingtype,                         scalewithvalue = FALSE)  FT2 <- get_trait_model(model          = run2,                         trait          = feedingtype)  plot(FT, ylab = \"/m2\",        mfrow = c(2, 2), las = 1) plot(FT2, ylab = \"-\",      main = c(\"fraction suspension feeding\", \"fraction deposit feeding\"),       mfrow = NULL, las = 1) # Biomass as a trait WW   <- data.frame(taxon   = c(\"s1\", \"s2\", \"s3\"),                     biomass = c(0.1,   0.5,   1)) Lrun  <- get_trait_model(model = run2,                           trait = WW,                           scalewithvalue=TRUE) Lrun2 <- get_trait_model(model = run2,                           trait = WW,                           scalewithvalue=FALSE) plot(Lrun,  main = \"mean weight\", xlab = \"g/ind\",        mfrow = c(1, 2), las = 1) plot(Lrun2, main = \"summed weight\", xlab = \"g/m2\",      mfrow = NULL, las = 1)"},{"path":"https://EMODnet.github.io/Bfiat/articles/Bfiat.html","id":"trawling-impacts-on-ecosystem-functions","dir":"Articles","previous_headings":"Trawling impacts on traits and ecosystem functions","what":"Trawling impacts on ecosystem functions","title":"Bfiat: Modelling trawling effects on ecosystem functioning","text":"Functions get_Db_model, get_irr_model estimate effect species responses bioturbation bioirrigation rates, described Querios et al., 2013 Wrede et al., 2018 respectively. defined : calculate bioturbation index, need input relevant trait information. data.frame, first column name taxon, followed columns denoting mobility reworking modes (values 1-4 1-5 respectively). columns named “Mi” “Ri”. bioirrigation index, next taxon name columns named “BT” (burrowtype, value 1-3), “FT” (feeding type, 1-3), “ID” (injection depth, 1-4) present. calculate indices, also require mean weight taxa; passed data.frame taxonname first column, weight second. formula estimating bioturbation Index taxon (Querios et al., 2013) : BPci=(Wi)⋅densityi⋅Ri⋅MiBPc_i = \\sqrt(W_i)  \\cdot  density_i  \\cdot  R_i  \\cdot  M_i formula estimating bioirrigation Index taxon (Wrede et al., 2018) : IPci=Wi0.75⋅densityi⋅BTi⋅FTi⋅IDiIPc_i = W_i^{0.75}  \\cdot  density_i  \\cdot  BT_i  \\cdot FT_i \\cdot ID_i, example, first input weights traits required, estimate bioturbation bioirrigation potential associated previous runs. bioturbation bioirrigation function estimate contribution species indices, well total index. Change absolute (top) relative (bottom) contribution feeding types due trawling Change absolute (top) relative (bottom) contribution feeding types due trawling","code":"get_Db_model (model, trait = Btrait::Traits_Db, taxon_names = colnames(model)[-1],    taxonomy = NULL, weight, verbose = FALSE, na.rm = FALSE) get_irr_model (model, trait = Btrait::Traits_irr, taxon_names = colnames(model)[-1],    taxonomy = NULL, weight, verbose = FALSE, na.rm = FALSE) weight   <- data.frame(taxon  = c(\"s1\", \"s2\", \"s3\"),                         weight = c( 0.5,  1.0,   3))  Dbtrait  <- data.frame(taxon = c(\"s1\", \"s2\", \"s3\"),                         Ri    = c(   4,    3,    1),                         Mi    = c(   3,    3,   2))  irrtrait <- data.frame(taxon = c(\"s1\", \"s2\", \"s3\"),                         BT    = rep(1, times=3),                         FT    = c(   3,  2.5,   2),                         ID    = c(   3,    3,   1))  Db  <- get_Db_model(model  = run2,                      trait  = Dbtrait,                      weight = weight) plot(Db, las=1) Irr <- get_irr_model(model  = run2,                       trait  = irrtrait,                       weight = weight) plot(Irr, las=1)"},{"path":"https://EMODnet.github.io/Bfiat/articles/Bfiat.html","id":"functions-to-estimate-fishing-parameters-","dir":"Articles","previous_headings":"","what":"Functions to estimate fishing parameters.","title":"Bfiat: Modelling trawling effects on ecosystem functioning","text":"package Bfiat also contains functions estimate fishing parameters.","code":""},{"path":"https://EMODnet.github.io/Bfiat/articles/Bfiat.html","id":"depletion-rate","dir":"Articles","previous_headings":"Functions to estimate fishing parameters.","what":"Depletion rate","title":"Bfiat: Modelling trawling effects on ecosystem functioning","text":"Function par_d estimates depletion rate function depth occurrence species gear penetration depth. depletion fraction (did_i) certain species ii implemented : di=min[mmax,∑z=[zu,zl]md⋅max(0,pG−zu)⋅fi[zu,zl]]d_i = min \\left[m_{max}, \\sum_{z=[z_u, z_l]}  m_d \\cdot max\\left( 0, p_G-z_u\\right) \\cdot fi_{[z_u, z_l]}\\right] zuz_u zlz_l upper lower depth species’ living space, mm coefficient scales depletion depth gear penetrated species’s living space (sediment depth inbetween zu,zlz_u, z_l), fi[zu,zl]fi_{[z_u, z_l]} fractional occurrence species ii zone. maximal depletion fraction limited value mmaxm_{max}. Good values parameters md=0.055m_d = 0.055cm−1cm^{-1} mmax=0.42m_{max} = 0.42. function defined : , depletion rate estimated three species, living depth species divided 2 sediment layers (0-10 10-20 cm), fuzzy coded. first species lives upper sediment layer (D0_10) ; second equally distributed layers third found 10 cm: depletion, using default parameter settings, gear penetration depth 1 cm : Note deep-living species affected gears.","code":"par_d (gpd = 1, m_d = 0.055, m_max = 0.42, fDepth, uDepth) fDepth <- data.frame(D0_10  = c(1, 0.5, 0),   #upper depth=0                       D10_20 = c(0, 0.5, 1))   #upper depth=10  uDepth <- c(0, 10)  # upper depth par_d (gpd    = 1,          fDepth = fDepth,          uDepth = uDepth) ## [1] 0.0550 0.0275 0.0000 par_d (gpd    = 10,          fDepth = fDepth,          uDepth = uDepth) ## [1] 0.420 0.275 0.000"},{"path":"https://EMODnet.github.io/Bfiat/articles/Bfiat.html","id":"rate-of-increase","dir":"Articles","previous_headings":"Functions to estimate fishing parameters.","what":"Rate of increase","title":"Bfiat: Modelling trawling effects on ecosystem functioning","text":"Function par_r estimates rate increase (units time−1time^{-1}), function species age maturity (a_i) follows: ri=4.165ai.r_i=\\frac{4.165}{a_i}. defined : relationship longevity rate increase","code":"par_r (age_at_maturity = NULL, longevity = NULL) Age_mat <- seq(from = 0, to = 5, length.out=100)  plot(x    = Age_mat,        y    = par_r(Age_mat),        xlab = \"age at maturity, year\",        ylab = \"r, /year\",        main = \"relationship between age at maturity and r\",       las  = 1)"},{"path":"https://EMODnet.github.io/Bfiat/articles/Bfiat.html","id":"carrying-capacity","dir":"Articles","previous_headings":"Functions to estimate fishing parameters.","what":"Carrying capacity","title":"Bfiat: Modelling trawling effects on ecosystem functioning","text":"Function par_K estimates species carrying capacity, based fishing parameters, species density. inverse modelling, assuming measured density density fauna, fishing pressure (sar). combinations parameters lead viable carrying capacities, notably mortality induced fisheries larger species intrinsic rate increase (r), species become extinct due fishing. Carrying capacity K can estimated sequence fishing intensities relationship carrying capaicty swept area ratio Note higher trawling intensity (swept area ratio), current density deviate actual carrying capacity, K/sar ratio significantly increases sar. sar=2.25, mortality becomes larger rate increase, species likely extinct.","code":"par_K (density, sar, r, d, t_density = NULL) par_K (density =   1,          sar     =   1,          r       = 0.1,          d       = c(0.05, 0.3)) ## [1] 2.053105       NA # sequence of fishing intensities  sar.seq <- seq(from=0.05, to=3, by=0.05)  # estimate carrying capacity for all these fishing intensities  K.seq   <- par_K(density = 1,                   sar     = sar.seq,                   r       = 0.5,                   d       = 0.2)    plot(sar.seq, K.seq,             xlab = \"Swept area ratio, /yr\",        ylab = \"K/D\",       main = \"relationship between sar and K\",       las = 1, ylim = c(0, 10))"},{"path":"https://EMODnet.github.io/Bfiat/articles/Bfiat.html","id":"continuous-mortality-coefficient","dir":"Articles","previous_headings":"Functions to estimate fishing parameters.","what":"Continuous mortality coefficient","title":"Bfiat: Modelling trawling effects on ecosystem functioning","text":"Function par_m estimates constant mortality parameter species growth rate r, continuous fishing model consistent discrete model parameters d fishing intensity sar.","code":"par_m (sar, r, K, d, refD = K) par_m(sar = 2,        r   = 0.5,        d   = 0.2, K = 1) ## [1] 0.4447989"},{"path":[]},{"path":"https://EMODnet.github.io/Bfiat/articles/Bfiat.html","id":"density-at-pertubation-and-steady-state-density","dir":"Articles","previous_headings":"Accessory functions","what":"Density at pertubation, and steady-state density","title":"Bfiat: Modelling trawling effects on ecosystem functioning","text":"Function density_perturb estimates densities selected times, trawl_perturb estimates density n-th trawling event. Function steady_perturb steady_logistic estimate density steady state.","code":"density_perturb (K = 1, r = 1, d = 0.1, parms = data.frame(K = K, r = r,    d = d), sar = 1, taxon_names = parms[[\"taxon\"]], D0 = parms[[\"K\"]],    times = 1, tstart_perturb = min(times) + 0.5/sar, tend_perturb = max(times),    as.deSolve = TRUE) trawl_perturb (K = 1, r = 1, d = 0.1, parms = data.frame(K = K, r = r,    d = d), sar = 1, D0 = parms[[\"K\"]], n = 1) density_perturb(sar = 1,                  r   = 0.5,                  d   = 0.2,                  times  = seq(0, 2, by = 0.5)) ##   times         1 ## 1   0.0 1.0000000 ## 2   0.5 1.0000000 ## 3   1.0 0.8370301 ## 4   1.5 0.8683324 ## 5   2.0 0.7449818 trawl_perturb(sar = 2,                r   = 0.5,                d   = 0.2,                n   = 10:12) ##   K   r   d sar D0 times times_end ntrawl_from ntrawl_to   density ## 1 1 0.5 0.2   2  1   4.5       5.0          10        11 0.3379225 ## 2 1 0.5 0.2   2  1   5.0       5.5          11        12 0.3197363 ## 3 1 0.5 0.2   2  1   5.5       6.0          12        13 0.3038197 ##   density_start density_end ## 1     0.3103657   0.3662333 ## 2     0.2929867   0.3473014 ## 3     0.2778411   0.3306613 trawl_perturb(sar = 2:10,                r   = 0.5,                d   = 0.2,                n   = 1) ##   K   r   d sar D0 times times_end ntrawl_from ntrawl_to   density ## 1 1 0.5 0.2   2  1     0       0.5           1         2 0.8190069 ## 2 1 0.5 0.2   3  1     0       0.5           1         2 0.8128907 ## 3 1 0.5 0.2   4  1     0       0.5           1         2 0.8097507 ## 4 1 0.5 0.2   5  1     0       0.5           1         2 0.8078403 ## 5 1 0.5 0.2   6  1     0       0.5           1         2 0.8065557 ## 6 1 0.5 0.2   7  1     0       0.5           1         2 0.8056328 ## 7 1 0.5 0.2   8  1     0       0.5           1         2 0.8049376 ## 8 1 0.5 0.2   9  1     0       0.5           1         2 0.8043951 ## 9 1 0.5 0.2  10  1     0       0.5           1         2 0.8039600 ##   density_start density_end ## 1           0.8   0.8370301 ## 2           0.8   0.8253410 ## 3           0.8   0.8192530 ## 4           0.8   0.8155214 ## 5           0.8   0.8130008 ## 6           0.8   0.8111842 ## 7           0.8   0.8098128 ## 8           0.8   0.8087410 ## 9           0.8   0.8078802 steady_perturb (K = 1, r = 1, d = 0.1, parms = data.frame(K = K, r = r,    d = d), sar = 1, D0 = parms[[\"K\"]], tol = 1e-06) steady_logistic (K = 1, r = 1, m = 0.1, parms = data.frame(K = K, r = r,    m = m), D0 = parms[[\"K\"]], tol = 1e-06) (sD <- steady_perturb(K   = 1,                       sar = c(1, 2, 3),                       r   = 0.5,                        d   = 0.2)) ##   K   r   d sar D0 density_before density_after      density ntrawl time ## 1 1 0.5 0.2   1  1   6.146287e-01  4.917030e-01 5.537146e-01     40   40 ## 2 1 0.5 0.2   2  1   1.198015e-01  9.584121e-02 1.074297e-01    374  187 ## 3 1 0.5 0.2   3  1   1.746276e-09  1.397021e-09 1.520186e-09    333  111 # this is the inverse and should return K=1 par_K(density = sD$density,       sar     = c(1, 2, 3),       r       = 0.5,        d       = 0.2) ## [1] 1.000003 1.000036       NA"},{"path":"https://EMODnet.github.io/Bfiat/articles/Bfiat.html","id":"datasets","dir":"Articles","previous_headings":"","what":"Datasets","title":"Bfiat: Modelling trawling effects on ecosystem functioning","text":"2 data sets Bfiat package:","code":""},{"path":"https://EMODnet.github.io/Bfiat/articles/Bfiat.html","id":"density-and-biomass-data","dir":"Articles","previous_headings":"Datasets","what":"Density and biomass data","title":"Bfiat: Modelling trawling effects on ecosystem functioning","text":"Dataset NIOZdata provides macrofauna density biomass data 4 sites NorthSea. Stations NIOZdata dataset characteristics NIOZdata, terms density biomass : Characteristics NIOZdata: density (ind/m2), biomass (gWW/m2), number taxa, depth (m), % silt, sar (/yr), subsar (/yr) gear penetration depth (cm)","code":"map_key(x        = NIOZdata$stations$x,         y        = NIOZdata$stations$y,          contours = NIOZdata$contours, colkey = FALSE,         col.levels = \"grey\", by.levels = 5, draw.levels = TRUE,          pch = 16)  text(x      = NIOZdata$stations$x,       y      = NIOZdata$stations$y+0.5,       labels = NIOZdata$stations$station)"},{"path":"https://EMODnet.github.io/Bfiat/articles/Bfiat.html","id":"swept-area-ratio","dir":"Articles","previous_headings":"Datasets","what":"Swept Area Ratio","title":"Bfiat: Modelling trawling effects on ecosystem functioning","text":"Fishing intensity Northsea area annual swept area ratios dataset called SAR, resolution 0.05 dg longitudinal, 0.05 dg latitudinal direction. data originate ICES, compiled request OSPAR. comprise: sar: swept area ratio surface 0-2 cm subsar: swept area ratio subsurface (> 2cm), gpd, mean gear penetration depth, estimated based different metiers, .e. 4.45, 1.55, 1.55, 2.55 cm dredge, otter trawl, seine, beam trawl respectively (mean gear penetration mud sand). lon, lat, coordinates points  Note: R-package, Btrait (Soetaert Beauchard, 2022) also contains density trait data can used fishery assessment.","code":""},{"path":[]},{"path":"https://EMODnet.github.io/Bfiat/articles/Bfiat.html","id":"taxon-sensitivity","dir":"Articles","previous_headings":"Sensitivity and critical values","what":"Taxon sensitivity","title":"Bfiat: Modelling trawling effects on ecosystem functioning","text":"Function sensitivity_taxon estimates one taxon density decrease combinations sar (swept area ratio) gpd (gear penetration depth); also estimates (sar x gpd) values taxon reaches critical level. Function critical_sar critical_gpd estimate critical fishing intensity gear penetration depth taxon become extinct (crit_DK = 0) attain predefined fraction carrying capacity (crit_DK > 0). figure , first sensitivity species Arctica islandica Dutch North sea area (MWTL data) estimated plotted. sensitivity fishing intensity (sar) gear penetration depth (gpd) shows rather large area species survive (white region). add stations Dutch part North sea, characterised sar gpd. shows species stations. end estimating critical sar gears (gpd) used Dutch Northsea, Artica islandica dissappear.","code":"Def_fun(sensitivity_taxon) ## sensitivity_taxon (fDepth = 1, uDepth = 0, r = 0.1, sar.seq = seq(0, 10,   ##  length.out = 200), gpd.seq = seq(0, 5, length.out = 200),   ##  ...)   ## Def_fun(critical_sar) ## critical_sar (gpd = 1, fDepth = 1, uDepth = 0, d = NULL, r = 0.1,   ##  crit_DK = 0, ...)   ## Def_fun(critical_gpd) ## critical_gpd (sar = 1, fDepth = 1, uDepth = 0, d = NULL, r = 0.1,   ##  crit_DK = 0, ...)   ## par(mfrow = c(1,1), las = 1)  # parameters for Arctica islandica subset(MWTL$fishing,         subset = (taxon == \"Arctica islandica\")) ##                taxon p0 p0_5cm p5_15cm p15_30cm p30cm Age.at.maturity    r ## 38 Arctica islandica  0    0.6     0.4        0     0               4 0.64 S_af <- sensitivity_taxon(r      = 0.64,                            fDepth = c(0.75, 0.25),                           uDepth = c(0,      5))  # image, white = extinct image2D(x = S_af$sar, y = S_af$gpd, z = S_af$DK,          xlab = \"sar, /yr\", ylab = \"gpd, cm\",          main = c(\"Species sensitivity\", \"Arctica islandica\"),         col = jet2.col(100), clab = \"D/K\") lines(S_af$sar, S_af$critical_gpd, lwd = 2)          # add the stations in the MWTL data (from Btrait) points(MWTL$abiotics$sar, MWTL$abiotics$gpd,         pch = 18, col = \"black\") legend(\"topright\", pch = 18, legend = \" MWTL stations\") c_s_MWTL <- critical_sar(gpd = MWTL$abiotics$gpd,                           fDepth = c(0.75, 0.25),                          uDepth = c(0,      5)) summary(c_s_MWTL) ##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  ##  0.7282  1.2278  1.2863  1.3744  1.5133  2.1144"},{"path":"https://EMODnet.github.io/Bfiat/articles/Bfiat.html","id":"area-sensitivity-and-critical-values","dir":"Articles","previous_headings":"Sensitivity and critical values","what":"area sensitivity and critical values","title":"Bfiat: Modelling trawling effects on ecosystem functioning","text":"Function sensitivity_area estimates one set sar gpd values density decrease combinations r (rate natural increase) d (depletion) taxon; also estimates critical (r x d) combinations area. Functions critical_r critical_d estimate critical intrinsic rate natural increase (r) depletion fraction (d) beyond taxon, experiences fishing intensity gear penetration depth area, become extinct (crit_DK = 0) attain predefined fraction carrying capacity (crit_DK > 0). plot sensitivity one station Dutch part Northsea, add species MWTL area plot.","code":"Def_fun(sensitivity_area) ## sensitivity_area (sar = 1, gpd = 1, r.seq = seq(0.1, 5, length.out = 200),   ##  d.seq = seq(0, 0.5, length.out = 200))   ## Def_fun(critical_r) ## critical_r (sar = 1, gpd = 1, fDepth = 1, uDepth = 0, d = NULL,   ##  crit_DK = 0, ...)   ## Def_fun(critical_d) ## critical_d (sar = 1, r = 0.1, crit_DK = 0, ...)   ## par(mfrow = c(1,1), las = 1)  # parameters for station WADDKT04 subset(MWTL$abiotics,         subset = (station== \"WADDKT04\"),        select = c(station, sar, gpd)) ##     station      sar      gpd ## 97 WADDKT04 11.81742 1.898136 S_W <- sensitivity_area(sar      = 11.817,                          gpd      = 1.90,                         r.seq    = seq(0,  11, length.out = 200),                         d.seq    = seq(0, 0.2, length.out = 200))   # image of station sensitivity, white = extinct (D/K = NA) image2D(x = S_W$r, y = S_W$d, z=S_W$DK,          xlab = \"r, /yr\", ylab = \"d, -\",          main = c(\"Area sensitivity\",                   \"WADDKT04\"),         col = jet2.col(100), clab = \"D/K\") lines(S_W$r, S_W$critical_d, lwd = 2)  # Species characteristics relating to fishgin for species in the MWTL data  # (from package Btrait) SP_Fish    <- MWTL$fishing  # depletion for all MWTL species in station WADDKT04 SP_Fish$dW <- par_d(           gpd    = 1.90,            fDepth = SP_Fish[, c(\"p0\", \"p0_5cm\", \"p5_15cm\", \"p15_30cm\", \"p30cm\")],           uDepth =           c(  0,    0,        5,         15,         30)) points(SP_Fish$r, SP_Fish$dW,         pch = 18, col = \"black\") legend(\"topright\", pch = 18, legend = \" MWTL species\")"},{"path":"https://EMODnet.github.io/Bfiat/articles/Bfiat.html","id":"fishing-impact-in-a-station-in-the-north-sea-friesefront","dir":"Articles","previous_headings":"","what":"Fishing impact in a station in the North sea: FrieseFront","title":"Bfiat: Modelling trawling effects on ecosystem functioning","text":"now calculate impact bottom trawling one station Norths Sea, located FrieseFront, part NIOZdata dataset. station located 4.447 dgE 53.667 dgN. 34 m deep, fine-sandy sediment median grain size = 86 μm\\mu m.","code":""},{"path":"https://EMODnet.github.io/Bfiat/articles/Bfiat.html","id":"density-and-biomass","dir":"Articles","previous_headings":"Fishing impact in a station in the North sea: FrieseFront","what":"Density and biomass","title":"Bfiat: Modelling trawling effects on ecosystem functioning","text":"apply fisheries model station, first select density biomass macrofauna. biomasses wet weight called “biomass_ww”.","code":"FF <-    get_density(data       = NIOZdata$density,               descriptor = station,               subset     = station == \"FrieseFront\",               taxon      = taxon,               value      = data.frame(density, biomass_ww)     )"},{"path":"https://EMODnet.github.io/Bfiat/articles/Bfiat.html","id":"fishing-parameters","dir":"Articles","previous_headings":"Fishing impact in a station in the North sea: FrieseFront","what":"Fishing parameters","title":"Bfiat: Modelling trawling effects on ecosystem functioning","text":"estimate fishing effects, need, taxon, living depth (substratum depth distribution), age maturity. first find names, meaning traits NIOZ trait database (Traits_nioz, package Btrait), select traits relating living depth age maturity: extract traits species data, passing also taxonomic relationships. allows traits estimated also species documented trait database. taxonomy obtained worms database, stored NIOZdata$taxonomy. trait database records traits fuzzy format. depth distribution, keep data fuzzy, species may found different depth levels. need mean age maturity, also pass trait class value (argument trait_class, trait_score). age maturity can now used estimate intrinsic rate natural increase: information merged data.frame contains station-species information, common columns “taxon”: station data set, Swept Area Ratio (sar) estimated gear penetration depth (gpd), averaged years 2009-2017 stored NIOZdata$abiotics table; sar gpd station FrieseFront extracted added parameter file: depletion trawling estimated based depth occurrence. depletion rate can now estimated, based sar (1.2392633) gear penetration depth (2.1715897). use function par_d estimate depletion rate. can now estimate species carrying capacity, using function par_K. parameter file now thinned, removing columns need :","code":"traits.lab      <- metadata(Traits_nioz)  # metadata of traits in database (name, value, ...) meta.depth     <- subset(traits.lab,                           subset = trait == \"Substratum depth distribution\")  meta.maturity  <- subset(traits.lab,                           subset = trait == \"Age at maturity\")  # select actual traits traits.depth    <- subset(Traits_nioz,                            select = c(\"taxon\", meta.depth$colname))  traits.maturity <- subset(Traits_nioz,                            select = c(\"taxon\", meta.maturity$colname)) taxa <- unique(NIOZdata$density$taxon)  Depth    <- get_trait(taxon       = taxa,                        trait       = traits.depth,                        taxonomy    = NIOZdata$taxonomy)  colnames(Depth)[-1] <- meta.depth$modality  Maturity <- get_trait(taxon       = taxa,                        trait       = traits.maturity,                        taxonomy    = NIOZdata$taxonomy,                        trait_class = meta.maturity$trait,                       trait_score = meta.maturity$value)  Traits_combined <- merge(Depth, Maturity) Traits_combined$r <- par_r(age_at_maturity = Traits_combined$Age.at.maturity) FF <- merge(FF, Traits_combined,              by = \"taxon\") FF$sar <- subset(NIOZdata$abiotics,                   subset = station==\"FrieseFront\")$sar FF$gpd <- subset(NIOZdata$abiotics,                   subset = station==\"FrieseFront\")$gpd   FF <- FF[order(FF$density, decreasing=TRUE),] row.names(FF) <- NULL fDepth  <- FF[,c(\"0\", \"0-5\", \"5-15\", \"15-30\", \">30\")] uDepth  <-     c( 0,   0,     5,      15,      30)  FF$d <- par_d(gpd    = FF$gpd, # gear penetration depth               fDepth = fDepth, # fractional occurrence in depth layers               uDepth = uDepth) # upper depth of layers FF$K <- par_K(density = FF$density,                sar     = FF$sar,                r       = FF$r,                d       = FF$d) pnames <- c(\"taxon\", \"density\", \"biomass_ww\", \"K\", \"r\", \"d\", \"sar\") FF     <- FF[order(FF$taxon),pnames] knitr::kable(head(FF, n=6), digits=1, row.names = FALSE)"},{"path":"https://EMODnet.github.io/Bfiat/articles/Bfiat.html","id":"model-run","dir":"Articles","previous_headings":"Fishing impact in a station in the North sea: FrieseFront","what":"Model run","title":"Bfiat: Modelling trawling effects on ecosystem functioning","text":"model run 40 years, trawling occurs first 20 years. specify times fishing event occurs pass model function (run_perturb). argument addsum, set equal TRUE calculates summed densities. parameter file ordered respect species density, easy plot density trajectory 8 abundant species (=1:8); followed total density. Fishing impact density 8 abundant species, total density station FrieseFront; 20 years fishing followed 20 years without fishing. Using previous model run, estimate impact trawling suspension feeders. first extract modality “Suspension feeder” nioz trait database: nioz trait database stores trait modalities fuzzy format, data record fractional contribution suspension feeding diet species: now calculate degree suspension feeding changes community, using function get_trait_model. species model whose suspension feeding known, use taxonomic closeness find good values; simply done passing data.frame Taxonomy.  bioturbation potential can easily estimated passing correct database function get_Db_model. function, also need mean weight species calculated first (WW). Fishing impact contribution bioturbation potential main species, total bioturbation potential station FrieseFront; 20 years fishing followed 20 years without fishing.","code":"# timings of the fishing events, based on sar events <- seq(from = 1/FF$sar[1],                by   = 1/FF$sar[1],                to   = 20)  times  = seq(0, 40, length.out = 10000)  # run the model fish.FF <- run_perturb(parms        = FF,                         times        = times,                         sar          = FF$sar[1],                        tend_perturb = 20,                        addsum       = TRUE) Abundant <- FF$taxon[order(FF$K, decreasing = TRUE)]  plot(fish.FF,       which = Abundant[1:8],       ylab  = \"ind/m2\",       xlab  = \"year\", las=1)  plot(fish.FF,       which = \"sum\",       ylab  = \"ind/m2\",       xlab  = \"year\",       las=1, mfrow=NULL)  # mforw=NULL to prevent it from starting a new figure meta.susp   <- subset(                     metadata(Traits_nioz),                      subset= (modality == \"Suspension feeder\"))  traits.susp <- subset(Traits_nioz,                        select = c(\"taxon\", meta.susp$colname)) colnames(traits.susp)[2] <- \"SuspensionFeeder\" head(traits.susp, n=3) ##                   taxon SuspensionFeeder ## 1          Abludomelita              0.0 ## 2 Abludomelita obtusata              0.0 ## 3             Abra alba              0.5 susp1 <- get_trait_model(model    = fish.FF,                           trait    = traits.susp,                           taxonomy = NIOZdata$taxonomy) plot(susp1,       main = \"Relative abundance suspension feeders\", ylab = \"-\", las = 1) WW <- data.frame(taxon = FF$taxon,                   W     = FF$biomass_ww/FF$density)  Db.FF <- get_Db_model(model    = fish.FF,                        trait    = Traits_Db,                        taxonomy = NIOZdata$taxonomy,                        weight   = WW,                        na.rm    = TRUE)  # removes those species where W is NA plot(Db.FF,       which = paste(\"BPc\" , Abundant[1:8], sep=\"_\"),      ylab  = \"BPc, -\", las = 1)  plot(Db.FF,       which = \"BPc\",       ylab  = \"-\",       las = 1, mfrow = NULL)"},{"path":"https://EMODnet.github.io/Bfiat/articles/Bfiat.html","id":"acknowledgements","dir":"Articles","previous_headings":"","what":"Acknowledgements","title":"Bfiat: Modelling trawling effects on ecosystem functioning","text":"product created European Marine Observation Data Network (EMODnet) Biology Phase V. Additional support came NWO-funded project BFIAT (NWO 18523).","code":""},{"path":"https://EMODnet.github.io/Bfiat/articles/Bfiat.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Bfiat: Modelling trawling effects on ecosystem functioning","text":"Beauchard O, Brind’Amour , Schratzberger M, Laffargue P, Hintzen NT, Somerfield PJ, Piet G (2021) generic approach develop trait-based indicator trawling-induced disturbance. Mar Ecol Prog Ser 675:35-52. https://doi.org/10.3354/meps13840 Beauchard, O., Murray S.. Thompson, Kari Elsa Ellingsen, Gerjan Piet, Pascal Laffargue, Karline Soetaert, 2023. Assessing sea floor functional diversity vulnerability. Marine Ecology Progress Serie v708, p21-43, https://www.int-res.com/abstracts/meps/v708/p21-43/ Chamberlain S, Vanhoorne. B (2023). worrms: World Register Marine Species (WoRMS) Client. R package version 0.4.3, https://CRAN.R-project.org/package=worrms. Hiddink, JG, Jennings, S, Sciberras, M, et al. Assessing bottom trawling impacts based longevity benthic invertebrates. J Appl Ecol. 2019; 56: 1075– 1084. https://doi.org/10.1111/1365-2664.13278 Hiddink, Jan Geert, Simon Jennings, Marija Sciberras, Claire L. Szostek, Kathryn M. Hughes, Nick Ellis, Adriaan D. Rijnsdorp, Robert . McConnaughey, Tessa Mazor, Ray Hilborn, Jeremy S. Collie, C. Roland Pitcher, Ricardo O. Amoroso, Ana M. Parma, Petri Suuronen, Michel J. Kaiser, 2017. Global analysis depletion recovery seabed biota bottom trawling disturbance. Proc. Nat. Aca. Sci, 114 (31) 8301-8306. https://doi.org/10.1073/pnas.161885811. Queiros, . M., S. N. R. Birchenough, J Bremner, J.. Godbold, R.E. Parker, . Romero-Ramirez, H. Reiss, M. Solan, P. J. Somerfield, C. Van Colen, G. Van Hoey, S. Widdicombe, 2013. bioturbation classification European marine infaunal invertebrates. Ecology Evolution 3 (11), 3958-3985 Wrede, ., J.Beermann, J.Dannheim, L.Gutow, T.Brey, 2018. Organism functional traits ecosystem supporting services - novel approach predict bioirrigation. Ecological indicators, 91, 737-743. Soetaert K, Beauchard O (2024). R-package Btrait: Working Biological density, taxonomy, trait composition data. Netherlands Institute Sea Research. Data product created European Marine Observation Data Network (EMODnet) Biology Phase IV. Karline Soetaert, Olivier Beauchard (2024). Bfiat: Bottom Fishing Impact Assessment Tool. Data product created European Marine Observation Data Network (EMODnet) Biology Phase V. R Core Team (2021). R: language environment statistical computing. R Foundation Statistical Computing, Vienna, Austria. URL https://www.R-project.org/. C.R. Pitcher, J.G. Hiddink, S. Jennings, J. Collie, .M. Parma, R. Amoroso, T. Mazor, M. Sciberras, R.. McConnaughey, .D. Rijnsdorp, M.J. Kaiser, P. Suuronen, R. Hilborn, 2022. Trawl impacts relative status biotic communities seabed sedimentary habitats 24 regions worldwide. PNAS. https://doi.org/10.1073/pnas.2109449119 C.R. Pitcher, N. Ellis, S. Jennings, J.G. Hiddink, T. Mazor, M.J.Kaiser, M.. Kangas, R.. McConnaughey, .M. Parma, .D. Rijnsdorp, P. Suuronen, J.S. Collie, R. Amoroso, K.M. Hughes R. Hilborn, 2017. Estimating sustainability towed fishing-gearimpacts seabed habitats: simple quantitative riskassessment method applicable data-limited fisheries. Methods Ecology Evolution2017,8,472–480doi: 10.1111/2041-210X.12705 J. Depestele, K. Degrendele, M. Esmaeili, . Ivanovic, S. Kroger, F.G. O’Neill, R. Parker, H. Polet, M. Roche, L.R. Teal, B. Vanelslander, .D. Rijnsdorp. (2018). Comparison mechanical disturbance soft sediments due tickler-chain SumWing trawl versus electro-fitted PulseWing trawl. ICES J. Mar. Sci. 76, 312–329.","code":""},{"path":[]},{"path":"https://EMODnet.github.io/Bfiat/articles/Bfiat.html","id":"list-of-all-functions-and-data-sets-in-bfiat","dir":"Articles","previous_headings":"Appendices","what":"List of all functions and data sets in Bfiat:","title":"Bfiat: Modelling trawling effects on ecosystem functioning","text":"","code":"critical_d (sar = 1, r = 0.1, crit_DK = 0, ...)     critical_gpd (sar = 1, fDepth = 1, uDepth = 0, d = NULL, r = 0.1,    crit_DK = 0, ...)     critical_r (sar = 1, gpd = 1, fDepth = 1, uDepth = 0, d = NULL,    crit_DK = 0, ...)     critical_sar (gpd = 1, fDepth = 1, uDepth = 0, d = NULL, r = 0.1,    crit_DK = 0, ...)     density_logistic (K = 1, r = 1, m = 0.1, parms = data.frame(K = K, r = r,    m = m), taxon_names = parms[[\"taxon\"]], D0 = parms[[\"K\"]],    times = 1, tstart_perturb = min(times), tend_perturb = max(times),    as.deSolve = TRUE)     density_metier (K = 1, r = 1, parms = data.frame(K = K, r = r), d = data.frame(0.1,    0.1), sar = data.frame(1, 2), taxon_names = parms[[\"taxon\"]],    D0 = parms[[\"K\"]], times = 1, tstart_perturb = min(times) +    0.5/sar, tend_perturb = max(times), as.deSolve = TRUE)     density_perturb (K = 1, r = 1, d = 0.1, parms = data.frame(K = K, r = r,    d = d), sar = 1, taxon_names = parms[[\"taxon\"]], D0 = parms[[\"K\"]],    times = 1, tstart_perturb = min(times) + 0.5/sar, tend_perturb = max(times),    as.deSolve = TRUE)     get_Db_model (model, trait = Btrait::Traits_Db, taxon_names = colnames(model)[-1],    taxonomy = NULL, weight, verbose = FALSE, na.rm = FALSE)     get_irr_model (model, trait = Btrait::Traits_irr, taxon_names = colnames(model)[-1],    taxonomy = NULL, weight, verbose = FALSE, na.rm = FALSE)     get_trait_model (model, trait, trait_class = NULL, trait_score = NULL,    taxon_names = colnames(model)[-1], taxonomy = NULL, taxon_column = 1,    scalewithvalue = TRUE, verbose = FALSE)     NIOZdata : dataset  par_d (gpd = 1, m_d = 0.055, m_max = 0.42, fDepth, uDepth)     par_K (density, sar, r, d, t_density = NULL)     par_m (sar, r, K, d, refD = K)     par_r (age_at_maturity = NULL, longevity = NULL)     run_logistic (parms, times, tstart_perturb = min(times), tend_perturb = max(times),    taxon_names = parms[[\"taxon\"]], D0 = parms[[\"K\"]], addsum = FALSE,    verbose = FALSE)     run_perturb (parms, times, sar = 1, tstart_perturb = min(times) +    0.5/sar, tend_perturb = max(times), events = NULL, taxon_names = parms[[\"taxon\"]],    D0 = parms[[\"K\"]], addsum = FALSE, verbose = FALSE)     SAR : dataset  sensitivity_area (sar = 1, gpd = 1, r.seq = seq(0.1, 5, length.out = 200),    d.seq = seq(0, 0.5, length.out = 200))     sensitivity_taxon (fDepth = 1, uDepth = 0, r = 0.1, sar.seq = seq(0, 10,    length.out = 200), gpd.seq = seq(0, 5, length.out = 200),    ...)     steady_logistic (K = 1, r = 1, m = 0.1, parms = data.frame(K = K, r = r,    m = m), D0 = parms[[\"K\"]], tol = 1e-06)     steady_metier (K = 1, r = 1, parms = data.frame(K = K, r = r), d = data.frame(0.1,    0.1), sar = data.frame(1, 2), D0 = parms[[\"K\"]], tol = 1e-06)     steady_perturb (K = 1, r = 1, d = 0.1, parms = data.frame(K = K, r = r,    d = d), sar = 1, D0 = parms[[\"K\"]], tol = 1e-06)     trawl_metier (K = 1, r = 1, parms = data.frame(K = K, r = r), d = data.frame(0.1,    0.1), sar = data.frame(1, 2), D0 = parms[[\"K\"]], n = 1)     trawl_perturb (K = 1, r = 1, d = 0.1, parms = data.frame(K = K, r = r,    d = d), sar = 1, D0 = parms[[\"K\"]], n = 1)"},{"path":"https://EMODnet.github.io/Bfiat/articles/Bfiat.html","id":"estimating-mean-life-span-from-fuzzy-coded-values","dir":"Articles","previous_headings":"Appendices","what":"Estimating mean Life-span from fuzzy coded values","title":"Bfiat: Modelling trawling effects on ecosystem functioning","text":"calculate rate increase, need average life span organism. many trait databases characteristic fuzzy coded, .e. taxon may belong multiple modalities. case nioz trait database (Traits_nioz). convert data crisp format, first need find name trait captures life span. column names lifespan traits nioz database LS$colname. , together taxon name extracted database: now calculate average life span using function get_trait. passing “trait_class” “trait_score”, averages estimated. also pass taxonomic tree data, lifespan taxa unknown estimated based taxonomic closeness.","code":"NIOZ_att <- metadata(Traits_nioz) unique(NIOZ_att$trait) ##  [1] \"Substratum depth distribution\"    \"Biodiffusion\"                     ##  [3] \"Downward conveying\"               \"Upward conveying\"                 ##  [5] \"Regeneration\"                     \"Biodeposition\"                    ##  [7] \"Bioerosion\"                       \"Biostabilisation\"                 ##  [9] \"Ventilation/Pumping\"              \"Burrow width\"                     ## [11] \"Endo-3D structure type\"           \"Endo-3D structure depth\"          ## [13] \"Epi-3D structure type\"            \"Epi-3D structure extension\"       ## [15] \"Epi-3D structure size\"            \"Body mass\"                        ## [17] \"Body length\"                      \"Body resistance\"                  ## [19] \"Motility\"                         \"Burrowing/Sheltering depth\"       ## [21] \"Feeding type\"                     \"Life span\"                        ## [23] \"Age at maturity\"                  \"Reproductive frequency\"           ## [25] \"Fertilisation\"                    \"Annual fecundity\"                 ## [27] \"Offspring type\"                   \"Offspring size\"                   ## [29] \"Offspring protection\"             \"Offspring development\"            ## [31] \"Offspring benthic stage duration\" \"Offspring pelagic stage duration\" LSatt <- subset(NIOZ_att, subset=trait==\"Life span\") LSatt ##    colname     trait modality indic value score units ## 92  RT7.M1 Life span       <1     7   0.5  0.00  year ## 93  RT7.M2 Life span      1-3     7   2.0  0.25  year ## 94  RT7.M3 Life span     3-10     7   6.5  0.50  year ## 95  RT7.M4 Life span    10-20     7  15.0  0.75  year ## 96  RT7.M5 Life span      >20     7  30.0  1.00  year LS <- Traits_nioz[, c(\"taxon\", LSatt$colname)] head(LS) ##                   taxon RT7.M1 RT7.M2 RT7.M3 RT7.M4 RT7.M5 ## 1          Abludomelita      1      0      0      0      0 ## 2 Abludomelita obtusata      1      0      0      0      0 ## 3             Abra alba      0      1      0      0      0 ## 4           Abra nitida      0      1      0      0      0 ## 5       Abra prismatica      0      1      0      0      0 ## 6           Abra tenuis      0      1      0      0      0 MeanLS <- get_trait(taxon       = FF$taxon,                     trait       = LS,                     trait_class = LSatt$trait,                     trait_score = LSatt$value,                     taxonomy    = NIOZdata$taxonomy) head(MeanLS) ##                   taxon Life.span ## 1                  Abra     2.000 ## 2             Abra alba     2.000 ## 3           Abra nitida     2.000 ## 4 Abyssoninoe hibernica     9.625 ## 5 Ampelisca brevicornis     2.000 ## 6   Amphiura filiformis    15.000"},{"path":"https://EMODnet.github.io/Bfiat/articles/MWTL.html","id":"aim-","dir":"Articles","previous_headings":"","what":"Aim.","title":"The Bfiat package: modelling trawling effects in the Dutch part of the Northsea","text":"use functions Btrait Bfiat R-packages estimate impact bottom fisheries sediment ecosystem functioning Dutch part Northsea. use three sets data: situ density data particular site. age maturity species, depth occurrence sediment. fishing intensity gear penetration depths sites use MWTL macrofauna density data compiled frame EMODnet biology project, (https://www.emodnet-biology.eu). data available R-package Btrait (Soetaert Beauchard, 2024a). NIOZ trait database used species traits (Beauchard et al., 2021, 2023). trait dataset also R-package Btrait.","code":""},{"path":"https://EMODnet.github.io/Bfiat/articles/MWTL.html","id":"software-","dir":"Articles","previous_headings":"","what":"Software.","title":"The Bfiat package: modelling trawling effects in the Dutch part of the Northsea","text":"fishing impact models run open source framework R (R core team, 2025) implemented Bfiat R-package (Soetaert Beauchard, 2024b). R-package Btrait (Soetaert Beauchard, 2022) contains functions work density trait datasets. packages Btrait Bfiat available github (https://github.com/EMODnet/Btrait https://github.com/EMODnet/Bfiat).","code":""},{"path":"https://EMODnet.github.io/Bfiat/articles/MWTL.html","id":"the-fisheries-impact-model","dir":"Articles","previous_headings":"","what":"The fisheries impact model","title":"The Bfiat package: modelling trawling effects in the Dutch part of the Northsea","text":"fisheries impact model based logistic growth equation (Verhulst 1845) describes species density biomass evolves time. effect fishing population included series events, instantaneously decimate population sizes, events populations recover. model thus consists two parts: (continuous) logistic growth fishing events instantaneous depletion fishing.","code":""},{"path":"https://EMODnet.github.io/Bfiat/articles/MWTL.html","id":"logistic-growth","dir":"Articles","previous_headings":"The fisheries impact model","what":"Logistic growth","title":"The Bfiat package: modelling trawling effects in the Dutch part of the Northsea","text":"differential equation , t tj+t_j^+ tj+1−t_{j+1}^-: dDitdt=ri⋅Dit⋅(1−DitKi),\\frac{dD_i^t}{dt}=r_i \\cdot D_i^t \\cdot (1-\\frac{D_i^t}{K_i}), tt time, DitD_i^t density species ii particular time, KiK_i (units density) carrying capacity species ii, rir_i logistic growth parameter (units [/time]).","code":""},{"path":"https://EMODnet.github.io/Bfiat/articles/MWTL.html","id":"instantaneous-trawling","dir":"Articles","previous_headings":"The fisheries impact model","what":"Instantaneous trawling","title":"The Bfiat package: modelling trawling effects in the Dutch part of the Northsea","text":"trawling times tjt_j, density changes instantaneously: Ditj+=Ditj−⋅(1−di),D_i^{t_j^+} = D_i^{t_j^-} \\cdot (1-d_i), Ditj+D_i^{t_j^+} Ditj−D_i^{t_j^-} density immediately trawling occurs time tjt_j respectively, did_i species-specific trawl-specific depletion fraction.","code":""},{"path":"https://EMODnet.github.io/Bfiat/articles/MWTL.html","id":"trawling-intensity","dir":"Articles","previous_headings":"The fisheries impact model","what":"Trawling intensity","title":"The Bfiat package: modelling trawling effects in the Dutch part of the Northsea","text":"time trawling can inferred fishing intensity, expressed annual swept area ratio (SAR). SAR cumulative area contacted fishing gear one year per surface area. units m2m−2yr−1m^2~m^{-2}~yr^{-1}, yr−1yr^{-1}. swept area ratio (hereafter denoted SS), calculate average time fishing events (yryr) : Δt=tj+1−tj=1S.\\Delta t = t_{j+1} - t_j = \\frac{1}{S}.","code":""},{"path":"https://EMODnet.github.io/Bfiat/articles/MWTL.html","id":"data-requirements","dir":"Articles","previous_headings":"","what":"Data requirements","title":"The Bfiat package: modelling trawling effects in the Dutch part of the Northsea","text":"Central impact analysis use combination data sets:","code":""},{"path":"https://EMODnet.github.io/Bfiat/articles/MWTL.html","id":"community-composition","dir":"Articles","previous_headings":"Data requirements","what":"Community composition","title":"The Bfiat package: modelling trawling effects in the Dutch part of the Northsea","text":"Benthic biological data used fishing assessment comprise least density data, preferentially also biomass individual species. densities biomasses used estimate “carrying capacity” species particular site; abundance species attains steady-state, undisturbed (.e. absence fishing).","code":""},{"path":"https://EMODnet.github.io/Bfiat/articles/MWTL.html","id":"taxonomy","dir":"Articles","previous_headings":"Data requirements","what":"Taxonomy","title":"The Bfiat package: modelling trawling effects in the Dutch part of the Northsea","text":"assign biological traits taxa community, convenient know taxonomic position. Thus possible derive trait characteristics taxa documented trait database, based taxonomic relationships.","code":""},{"path":"https://EMODnet.github.io/Bfiat/articles/MWTL.html","id":"trait-characteristics","dir":"Articles","previous_headings":"Data requirements","what":"Trait characteristics","title":"The Bfiat package: modelling trawling effects in the Dutch part of the Northsea","text":"following species traits used estimate fishing impact species density: age maturity species used estimate “intrinsic rate natural increase” (rir_i). depth species live determines vulnerability bottom trawling: used derive model’s “depletion parameter” (did_i).","code":""},{"path":"https://EMODnet.github.io/Bfiat/articles/MWTL.html","id":"fishing-intensity","dir":"Articles","previous_headings":"Data requirements","what":"Fishing intensity","title":"The Bfiat package: modelling trawling effects in the Dutch part of the Northsea","text":"model also needs fishing intensity certain area, instance expressed annual swept area ratio (SAR); cumulative area contacted fishing gear one year per surface area. swept area ratio (hereafter denoted SS, units yr−1yr^{-1}), calculate time fishing events (yryr) 1S\\frac{1}{S}.","code":""},{"path":[]},{"path":"https://EMODnet.github.io/Bfiat/articles/MWTL.html","id":"community-composition-1","dir":"Articles","previous_headings":"Data availability","what":"Community composition","title":"The Bfiat package: modelling trawling effects in the Dutch part of the Northsea","text":"subsequent analyses, use macrofauna density data compiled frame EMODnet biology project, (https://www.emodnet-biology.eu). monitoring data Dutch part North sea (called MWTL monitoring data) comprise species densities biomass 103 stations, sampled 19 years, extending 1995 till 2018. Sampling performed yearly first, less frequently. Calculations document based yearly averages. MWTL data available R-package Btrait, list called MWTL (within R, type: ?MWTL open help file data). composition MWTL data Appendix 1. TABLE: Metadata MWTL dataset TABLE: MWTL$density (first 3 rows)","code":""},{"path":"https://EMODnet.github.io/Bfiat/articles/MWTL.html","id":"taxonomic-data","dir":"Articles","previous_headings":"Data availability","what":"Taxonomic data","title":"The Bfiat package: modelling trawling effects in the Dutch part of the Northsea","text":"400 different taxa MWTL data. taxonomic information taxa, derived WoRMS database available package Btrait, dataset Taxonomy: TABLE: Dataset Taxonomy (first 3 rows)","code":""},{"path":"https://EMODnet.github.io/Bfiat/articles/MWTL.html","id":"trait-data","dir":"Articles","previous_headings":"Data availability","what":"Trait data","title":"The Bfiat package: modelling trawling effects in the Dutch part of the Northsea","text":"use traits compiled NIOZ (called Traits_nioz) age maturity, living depth. trait data (mainly species level) compiled Beauchard et al. (2021) Beauchard et al. (2023). database records 32 different traits 281 taxa. traits fuzzy-coded. data structure appendix 2. TABLE: First part dataset Traits_nioz figure shows position area MWTL stations, swept area ratios (sar) derived OSPAR (ICES 2018). FIG: MWTL sampling stations indication main areas, fishing intensity gear penetration depth. ‘+’ denote two stations showcased.","code":""},{"path":"https://EMODnet.github.io/Bfiat/articles/MWTL.html","id":"model-steps","dir":"Articles","previous_headings":"","what":"Model steps","title":"The Bfiat package: modelling trawling effects in the Dutch part of the Northsea","text":"model applied several steps: taxon densities per station prepared, list taxa data generated, traits recording age maturity depth distribution taxon extracted, fishing parameters station extracted parameter values estimated based traits, fishing parameters, taxon density model run","code":""},{"path":"https://EMODnet.github.io/Bfiat/articles/MWTL.html","id":"the-mwtl-density","dir":"Articles","previous_headings":"","what":"The MWTL density","title":"The Bfiat package: modelling trawling effects in the Dutch part of the Northsea","text":"MWTL data gathered several years, data.frame MWTL$density. calculate density stations (descriptor) taxa, averaged years, using Btrait function get_density. taxa whose traits need found extracted:","code":"MeanMWTL <-    get_density(data        = MWTL$density,               descriptor  = station,                 taxon       = taxon,               value       = density,               averageOver = year) MWTLtaxa <- sort(unique(MeanMWTL$taxon))"},{"path":"https://EMODnet.github.io/Bfiat/articles/MWTL.html","id":"extracting-taxon-traits","dir":"Articles","previous_headings":"","what":"Extracting taxon traits","title":"The Bfiat package: modelling trawling effects in the Dutch part of the Northsea","text":"Taxon traits need nioz trait database (Traits_nioz), R-package Btrait. database, use: depth distribution (fractional occurrence depth layer), age maturity species","code":""},{"path":"https://EMODnet.github.io/Bfiat/articles/MWTL.html","id":"substrate-depth-distribution","dir":"Articles","previous_headings":"Extracting taxon traits","what":"Substrate depth distribution","title":"The Bfiat package: modelling trawling effects in the Dutch part of the Northsea","text":"Depth distribution fuzzy-coded trait trait database. use model need keep fuzzy coded. meaning nioz traits stored metadata. look trait names relate depth distribution: TABLE: Depth distribution traits NIOZ trait database extract depth traits taxon MWTL density data set. species MWTL dataset traits assigned, use taxonomic information (dataset Taxonomy) estimate traits also unrecorded species. TABLE: Depth distribution species MWTL dataset, (first part) 400 taxa MWTL dataset, 209 taxa documented trait database. traits remaining taxa estimated based taxonomic closedness. taxa, 8 assigned trait. : Ascidiacea, Chaetognatha, Enteropneusta, Entoprocta, Nematoda, Nemertea, Platyhelminthes, Priapulida. taxa true macrofauna, can removed dataset.","code":"meta   <- metadata(Traits_nioz)  # description of trait modalities  meta.D <- subset(meta,           # names of trait modalities for substratum depth                  subset = (trait == \"Substratum depth distribution\")) traits.D <- get_trait(                 taxon    = MWTLtaxa,                  trait    = Traits_nioz[, c(\"taxon\", meta.D$colname)],                  taxonomy = Taxonomy)  colnames(traits.D)[-1] <- meta.D$modality     # suitable column names Notrait  <- attributes(traits.D)$notrait MWTLtaxa <- MWTLtaxa [! MWTLtaxa %in% Notrait] MeanMWTL <- MeanMWTL [! MeanMWTL$taxon %in% Notrait, ]"},{"path":"https://EMODnet.github.io/Bfiat/articles/MWTL.html","id":"age-at-maturity","dir":"Articles","previous_headings":"Extracting taxon traits","what":"Age at maturity","title":"The Bfiat package: modelling trawling effects in the Dutch part of the Northsea","text":"perform similar procedure extract age maturity taxon density data. age maturity estimated average fuzzy values. first find relevant trait names trait database: TABLE: Age maturity traits NIOZ trait database calculate average age maturity. calculate average, pass trait_class trait_score extracting traits. TABLE: Mean age maturity species ([yr]) MWTL dataset (first part)","code":"meta.A <- subset(meta,                       subset = (trait == \"Age at maturity\")) traits.A <- get_trait(                 taxon       = MWTLtaxa,                 trait       = Traits_nioz[, c(\"taxon\", meta.A$colname)],                 trait_class = meta.A$trait,                 trait_score = meta.A$value,                 taxonomy    = Taxonomy)"},{"path":"https://EMODnet.github.io/Bfiat/articles/MWTL.html","id":"merged-trait-density-data-frame","dir":"Articles","previous_headings":"","what":"Merged trait-density data.frame","title":"The Bfiat package: modelling trawling effects in the Dutch part of the Northsea","text":"merge two trait datasets one data.frame, merging taxon. combine species density data","code":"TraitsAll <- merge(x  = traits.A,                     y  = traits.D,                     by = \"taxon\") MWTLtrait <- merge(x  = MeanMWTL,                     y  = TraitsAll,                    by = \"taxon\")"},{"path":"https://EMODnet.github.io/Bfiat/articles/MWTL.html","id":"fishing-parameters","dir":"Articles","previous_headings":"","what":"Fishing parameters","title":"The Bfiat package: modelling trawling effects in the Dutch part of the Northsea","text":"station specific fishing intensity (swept area ratio, sar), mean gear penetration depth (gpd). information kept data.frame MWTL$abiotics (R-package Btrait). MWTL data.frame merged swept area ratio, gear penetration depth, merging column station.","code":"MWTLtrait <- merge(x  = MWTLtrait,                     y  = subset(MWTL$abiotics,                                 select = c(station, sar, gpd)),                    by = \"station\")"},{"path":[]},{"path":"https://EMODnet.github.io/Bfiat/articles/MWTL.html","id":"intrinsic-rate-of-natural-increase","dir":"Articles","previous_headings":"Parameter values","what":"Intrinsic rate of natural increase","title":"The Bfiat package: modelling trawling effects in the Dutch part of the Northsea","text":"intrinsic rate natural increase specific species, can estimated using function par_r. parameter added MWTL data.frame.","code":"MWTLtrait$r <- par_r(age_at_maturity = MWTLtrait$Age.at.maturity)"},{"path":"https://EMODnet.github.io/Bfiat/articles/MWTL.html","id":"depletion-fraction-d","dir":"Articles","previous_headings":"Parameter values","what":"Depletion fraction d","title":"The Bfiat package: modelling trawling effects in the Dutch part of the Northsea","text":"depletion rate depends depth occurrence species (fDepth), gear penetration depth (gpd). latter differs among stations, species depletion fraction vary station. also need input upper position depth layer (uDepth).","code":"MWTLtrait$d <- par_d(   gpd    = MWTLtrait$gpd,      fDepth = MWTLtrait[, c( \"0\", \"0-5\", \"5-15\", \"15-30\", \">30\")],   uDepth =             c(   0,     0,     5,      15,    30) )"},{"path":"https://EMODnet.github.io/Bfiat/articles/MWTL.html","id":"carrying-capacity-k","dir":"Articles","previous_headings":"Parameter values","what":"Carrying capacity K","title":"The Bfiat package: modelling trawling effects in the Dutch part of the Northsea","text":"Te carrying capacity estimated model . pass species density, fishing intensity (sar), rate increase (r), depletion fraction (d): data use fishing impact assessment : TABLE: First part data used fishing assessment","code":"MWTLtrait$K <- par_K(      density = MWTLtrait$density,   sar     = MWTLtrait$sar,      r       = MWTLtrait$r,   d       = MWTLtrait$d )"},{"path":"https://EMODnet.github.io/Bfiat/articles/MWTL.html","id":"species-for-which-the-model-does-not-find-a-solution","dir":"Articles","previous_headings":"Parameter values","what":"Species for which the model does not find a solution","title":"The Bfiat package: modelling trawling effects in the Dutch part of the Northsea","text":"species depletion high /intrinsic rate increase low, persist environment current fishing pressure. causes anomalously high carrying capacity compared observed density. occurrences removed data set. 16 species, highest observed density being17.4415692. taxa removed analysis. Taxa model solved","code":"MWTLtrait$DK <- MWTLtrait$density/MWTLtrait$K ii <- which(is.na(MWTLtrait$DK))  NAS <- subset(MWTLtrait, subset = is.na(DK))  MWTLtrait <- MWTLtrait[-ii,] TT <- data.frame(table(NAS$taxon)) TM <- aggregate(NAS$density, list(NAS$taxon), FUN=max) TT <- merge(TT, TM, by = 1) names(TT) <- c(\"taxon\", \"occurrences\", \"max density\") knitr::kable(TT, caption = \"Taxa for which the model could not be solved\")"},{"path":"https://EMODnet.github.io/Bfiat/articles/MWTL.html","id":"running-the-fishing-model","dir":"Articles","previous_headings":"","what":"Running the fishing model","title":"The Bfiat package: modelling trawling effects in the Dutch part of the Northsea","text":"run model 8255 species-station occurrences. model run 30 years, 20 years fishing (thus 10 years fishing stopped). provide taxon names label output columns result matrix 3000 rows 8256 columns, first contains time, followed density trajectories species, stations. TABLE: First part model output","code":"times <- seq(from = 0, to = 30, length.out = 3000)  system.time( dens  <- density_perturb(parms        = MWTLtrait,                           times        = times,                           taxon_names  = paste(MWTLtrait$station,                                                MWTLtrait$taxon, sep = \"_\"),                          tend_perturb = 20) ) ##    user  system elapsed  ##   0.481   0.070   0.551"},{"path":"https://EMODnet.github.io/Bfiat/articles/MWTL.html","id":"summaries","dir":"Articles","previous_headings":"Running the fishing model","what":"Summaries","title":"The Bfiat package: modelling trawling effects in the Dutch part of the Northsea","text":"total density per station calculated rowSums per station. relative values calculated dividing columns (MARGIN = 2) maximum (STATS).","code":"Dens  <- data.frame(dens[, -1])  # remove first column Total <- sapply(split.default(Dens, MWTLtrait$station), # split in stations                 FUN = rowSums, na.rm = TRUE)            # take row sums Drel <- sweep(x      = Total,                MARGIN = 2,                STATS  = apply(Total,            # max of each column                              MARGIN = 2,                               FUN    = max),                FUN    = \"/\")                    # divide by the max"},{"path":"https://EMODnet.github.io/Bfiat/articles/MWTL.html","id":"some-results","dir":"Articles","previous_headings":"Running the fishing model","what":"Some results","title":"The Bfiat package: modelling trawling effects in the Dutch part of the Northsea","text":"show results 20 abundant species two stations. FIG: Density trajectories 5 abundant species two stations average density reduction due fishing stations estimated: FIG: Average fishing impacts MWTL stations","code":"# fishing reduction for all species DDrel <- apply(X      = dens[, -1],                 MARGIN = 2,                 FUN    = function(x) 1-min(x)/max(x))  # averaged per station DDstat <- aggregate(x   = list(p = DDrel),                      by  = list(station = MWTLtrait$station),                      FUN = mean)  MWTLstat <- merge(MWTL$stations, DDstat,   # add station coordinates                    by = \"station\")  with(MWTLstat,      map_MWTL(x    = x, y = y, colvar = p,               main = \"Fractional reduction \", clab = \"-\",               col  = Colramp, cex = 2, pch = 15, log = \"\",              type = \"legend\")    )"},{"path":[]},{"path":"https://EMODnet.github.io/Bfiat/articles/MWTL.html","id":"structure-of-the-mwtl-data","dir":"Articles","previous_headings":"Appendix","what":"Structure of the MWTL data","title":"The Bfiat package: modelling trawling effects in the Dutch part of the Northsea","text":"MWTL list contains several data.frames. use mainly data.frames called density, stations, abiotics (fishing intensities). structure data : TABLE: MWTL$station TABLE: MWTL$density TABLE: MWTL$abiotics (related fishing)","code":""},{"path":"https://EMODnet.github.io/Bfiat/articles/MWTL.html","id":"structure-of-the-trait-data","dir":"Articles","previous_headings":"Appendix","what":"Structure of the Trait data","title":"The Bfiat package: modelling trawling effects in the Dutch part of the Northsea","text":"TABLE: Metadata Traits_nioz","code":""},{"path":"https://EMODnet.github.io/Bfiat/articles/MWTL.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"The Bfiat package: modelling trawling effects in the Dutch part of the Northsea","text":"Beauchard O, Brind’Amour , Schratzberger M, Laffargue P, Hintzen NT, Somerfield PJ, Piet G (2021) generic approach develop trait-based indicator trawling-induced disturbance. Mar Ecol Prog Ser 675:35-52. https://doi.org/10.3354/meps13840 Beauchard, O., Murray S.. Thompson, Kari Elsa Ellingsen, Gerjan Piet, Pascal Laffargue, Karline Soetaert, 2023. Assessing sea floor functional diversity vulnerability. Marine Ecology Progress Series v708, p21-43, https://www.int-res.com/abstracts/meps/v708/p21-43 ICES Technical Service, Greater North Sea Celtic Seas Ecoregions, 29 August 2018 sr.2018.14 Version 2: 22 January 2019 https://doi.org/10.17895/ices.pub.4508 OSPAR request production spatial data layers fishing intensity/pressure. R Core Team (2024). R: language environment statistical computing. R Foundation Statistical Computing, Vienna, Austria. URL https://www.R-project.org/. Soetaert Karline, Olivier Beauchard (2024). Btrait: Working Biological density, taxonomy, trait composition data. R package version 1.0.1. Soetaert Karline, Olivier Beauchard (2024). Bfiat: Bottom Fishing Impact Assessment Tool. R package version 1.0.1. Verhulst, Pierre-François (1845). “Recherches mathématiques sur la loi d’accroissement de la population” [Mathematical Researches Law Population Growth Increase]. Nouveaux Mémoires de l’Académie Royale des Sciences et Belles-Lettres de Bruxelles. 18: 8.","code":""},{"path":"https://EMODnet.github.io/Bfiat/articles/MWTL_EF.html","id":"software-","dir":"Articles","previous_headings":"","what":"Software.","title":"R-package Bfiat - Modelling trawling effects on ecosystem functioning - MWTL data","text":"fishing impact models run open source framework R (R core team, 2025) implemented Bfiat R-package (Soetaert Beauchard, 2024). R-package Btrait (Soetaert Beauchard, 2022) contains functions work density trait datasets. packages Btrait Bfiat available github (https://github.com/EMODnet/Btrait https://github.com/EMODnet/Bfiat).","code":""},{"path":"https://EMODnet.github.io/Bfiat/articles/MWTL_EF.html","id":"data-requirements","dir":"Articles","previous_headings":"","what":"Data requirements","title":"R-package Bfiat - Modelling trawling effects on ecosystem functioning - MWTL data","text":"Central impact analysis merging model output trait data","code":""},{"path":"https://EMODnet.github.io/Bfiat/articles/MWTL_EF.html","id":"species-specific-density-trajectories","dir":"Articles","previous_headings":"Data requirements","what":"species-specific density trajectories","title":"R-package Bfiat - Modelling trawling effects on ecosystem functioning - MWTL data","text":"impact fishing ecosystem functions uses input density trajectories species, fishing pressure. density trajectories can obtained function density_perturb Bfiat package. vignette MWTL, described can done MWTL dataset.","code":""},{"path":"https://EMODnet.github.io/Bfiat/articles/MWTL_EF.html","id":"trait-characteristics-of-the-benthic-species-","dir":"Articles","previous_headings":"Data requirements","what":"trait characteristics of the benthic species.","title":"R-package Bfiat - Modelling trawling effects on ecosystem functioning - MWTL data","text":"reworking (RiR_i) mobility mode (MiM_i) species, well weight (WiW_i) densitydensity, used estimate “bioturbation potential”, parameter determines sediment mixing. formula estimating bioturbation Index taxon (Querios et al., 2013) : BPci=(Wi)⋅densityi⋅Ri⋅MiBPc_i = \\sqrt(W_i)  \\cdot  density_i  \\cdot  R_i  \\cdot  M_i feeding type, FTiFT_i, burrowing type, BTiBT_i, injection depthIDiID_i, combined species mean weight WiW_i densitydensity, used estimate species’ “bioirrigation potential”, reflects intensity burrows flushed. formula estimating bioirrigation Index taxon (Wrede et al., 2018) : IPci=Wi0.75⋅densityi⋅BTi⋅FTi⋅IDiIPc_i = W_i^{0.75}  \\cdot  density_i  \\cdot  BT_i  \\cdot FT_i \\cdot ID_i, Several trait databases available R-package Btrait. traits required calculating bioturbation potential (Traits_Db) compiled Queiros et al. (2013). Traits estimate bioirrigation potential (Traits_irr) described Wrede et al. (2018); derived Traits_nioz dataset.","code":""},{"path":"https://EMODnet.github.io/Bfiat/articles/MWTL_EF.html","id":"running-the-fishing-impact-model","dir":"Articles","previous_headings":"","what":"Running the fishing impact model","title":"R-package Bfiat - Modelling trawling effects on ecosystem functioning - MWTL data","text":"code run model 102 MWTL stations given . another vignette: MWTL_fishing","code":"#### taxon density #### MeanMWTL <- get_density(data = MWTL$density, descriptor = station, taxon = taxon,                          value = data.frame(density, biomass), averageOver = year) MWTLtaxa <- sort(unique(MeanMWTL$taxon))    #### taxon traits #### meta <- metadata(Traits_nioz)   # description of trait modalities  #  *substratum depth*, fuzzy coded subD <- subset(meta, subset = (trait == \"Substratum depth distribution\"))  TraitsDD <- get_trait(taxon = MWTLtaxa, taxonomy = Taxonomy,                        trait = Traits_nioz[, c(\"taxon\", subD$colname)]) colnames(TraitsDD)[-1] <- subD$modality  # *age at maturity*, averaged subA <- subset(meta, subset = (trait == \"Age at maturity\"))  TraitsAAM <- get_trait(taxon = MWTLtaxa, taxonomy = Taxonomy,                         trait = Traits_nioz[, c(\"taxon\", subA$colname)],                         trait_class = subA$trait, trait_score = subA$value)  #### merge with fisheries data #### TraitsAll <- merge(TraitsAAM, TraitsDD, by = \"taxon\") MWTLtrait <- merge(MeanMWTL, TraitsAll, by = \"taxon\") MWTLtrait <- merge(MWTLtrait, subset(MWTL$abiotics, select = c(station, sar, gpd)),                    by = \"station\") MWTLtrait <- subset(MWTLtrait, subset = ! is.na(Age.at.maturity))  #### model parameters #### # intrinsic rate of natural increase  MWTLtrait$r <- par_r(age_at_maturity = MWTLtrait$Age.at.maturity)  # depletion fraction (d) MWTLtrait$d <- par_d(gpd = MWTLtrait$gpd,                       fDepth = MWTLtrait[, c( \"0\", \"0-5\", \"5-15\", \"15-30\", \">30\")],                       uDepth =             c(   0,     0,     5,      15,    30))  # carrying capacity (K) MWTLtrait$K <- par_K(density = MWTLtrait$density, sar = MWTLtrait$sar,                      r = MWTLtrait$r, d = MWTLtrait$d)  # Remove taxa where the model cannot find a solution (few taxa) ii <- which(is.na(MWTLtrait$K))  cat (\"the number of occurrences removed (not compatible with model) is:\", length(ii),      \"from a total of \", nrow(MWTLtrait)) ## the number of occurrences removed (not compatible with model) is: 16 from a total of  8271 MWTLtrait <- MWTLtrait[-ii,]  #### run the model, 20 years fishing, followed by 10 years without fishing #### taxon_names <- paste(MWTLtrait$station, MWTLtrait$taxon, sep = \"_\")  times       <- seq(from = 0, to = 30, length.out = 10000) densFishing <- density_perturb(parms        = MWTLtrait,                                 times        = times,                                 taxon_names  = taxon_names,                                tend_perturb = 20)"},{"path":"https://EMODnet.github.io/Bfiat/articles/MWTL_EF.html","id":"the-bioturbation-and-bio-irrigation-potential","dir":"Articles","previous_headings":"Running the fishing impact model","what":"The bioturbation and bio-irrigation potential","title":"R-package Bfiat - Modelling trawling effects on ecosystem functioning - MWTL data","text":"functions get_Db_model get_irr_model estimate bioturbation bio-irrigation potential based dynamic model output species. require trait information, individual weight species. taxonomy passed allow retrieving traits undocumented species based taxonomic relationships. Argument taxon_names assigns column model output species can located trait database taxonomy. First mean weight estimated based biomass density: results first column, time, followed BPc IPc contribution species, last column sum indices. strip output first last column sum indices, per station, times, obtain total BPc IPc per station: create relative values dividing columns maximum, plot results.","code":"# estimate the weight MWTLtrait$WW <- MWTLtrait$biomass / MWTLtrait$density system.time(    Db <- get_Db_model(model       = densFishing,                       trait       = Traits_Db,                        taxon_names = MWTLtrait$taxon,                       taxonomy    = Taxonomy,                        weight      = MWTLtrait$WW) ) ##    user  system elapsed  ##   1.408   0.266   1.674 Irr <- get_irr_model(model       = densFishing,                       trait       = Traits_irr,                        taxon_names = MWTLtrait$taxon,                       taxonomy    = Taxonomy,                        weight      = MWTLtrait$WW) DB  <- data.frame(Db[, -c(1, ncol(Db))])  # remove first and last column DBC <- sapply(split.default(DB, MWTLtrait$station), # split in stations               FUN = rowSums, na.rm = TRUE)         # take row sums  IR  <- data.frame(Irr[, -c(1, ncol(Irr))]) IR  <- sapply(split.default(IR, MWTLtrait$station),                FUN = rowSums, na.rm = TRUE) Dbrel <- sweep(DBC,                 MARGIN = 2,                 STATS  = apply(DBC,            # max of each column                               MARGIN = 2,                                FUN    = max),                 FUN    = \"/\")                  # divide by the max Irrrel <- sweep(IR,                 MARGIN = 2,                 STATS  = apply(IR,                                MARGIN = 2,                                FUN    = max),                 FUN    = \"/\") # dB reduction -  the larger the value the more bioturbation is impacted Dbred   <- 1 - apply(Dbrel,                       MARGIN = 2,                       FUN    = min) Irrred  <- 1 - apply(Irrrel,                       MARGIN = 2,                       FUN    = min)  depletion <- data.frame(MWTL$stations,                          Dbred  = Dbred,                          Irrred = Irrred) par(mfrow = c(2, 2), las = 1) matplot(times,  Dbrel,          main = \"Fishing impact on Bioturbation potential\", ylab = \"-\",         col = 2, lty = 1, type = \"l\") matplot(times, Irrrel,          main = \"Fishing impact on Bioirrigation potential\", ylab = \"-\",         col = 4, lty = 1, type = \"l\") with(depletion,          map_MWTL(x, y, colvar = Dbred,                    main = \"Bioturbation reduction\", clab = \"-\",                   clim = c(0.005, 0.55),                   pch = 18, log= \"c\", cex = 2)) with(depletion,       map_MWTL(x, y, colvar = Irrred,                main = \"Bioirrigation reduction\", clab = \"-\",               clim = c(0.005, 0.55),               pch = 18, log= \"c\", cex = 2))"},{"path":"https://EMODnet.github.io/Bfiat/articles/MWTL_EF.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"R-package Bfiat - Modelling trawling effects on ecosystem functioning - MWTL data","text":"Beauchard O, Brind’Amour , Schratzberger M, Laffargue P, Hintzen NT, Somerfield PJ, Piet G (2021) generic approach develop trait-based indicator trawling-induced disturbance. Mar Ecol Prog Ser 675:35-52. https://doi.org/10.3354/meps13840 Beauchard, O., Murray S.. Thompson, Kari Elsa Ellingsen, Gerjan Piet, Pascal Laffargue, Karline Soetaert, 2023. Assessing sea floor functional diversity vulnerability. Marine Ecology Progress Series v708, p21-43, https://www.int-res.com/abstracts/meps/v708/p21-43 J. Depestele, K. Degrendele, M. Esmaeili, . Ivanovic, S. Kroger, F.G. O’Neill, R. Parker, H. Polet, M. Roche, L.R. Teal, B. Vanelslander, .D. Rijnsdorp. (2018). Comparison mechanical disturbance soft sediments due tickler-chain SumWing trawl versus electro-fitted PulseWing trawl. ICES J. Mar. Sci. 76, 312–329. Hiddink, JG, Jennings, S, Sciberras, M, et al. Assessing bottom trawling impacts based longevity benthic invertebrates. J Appl Ecol. 2019; 56: 1075– 1084. https://doi.org/10.1111/1365-2664.13278 Hiddink, Jan Geert, Simon Jennings, Marija Sciberras, Claire L. Szostek, Kathryn M. Hughes, Nick Ellis, Adriaan D. Rijnsdorp, Robert . McConnaughey, Tessa Mazor, Ray Hilborn, Jeremy S. Collie, C. Roland Pitcher, Ricardo O. Amoroso, Ana M. Parma, Petri Suuronen, Michel J. Kaiser, 2017. Global analysis depletion recovery seabed biota bottom trawling disturbance. Proc. Nat. Aca. Sci, 114 (31) 8301-8306 https://doi.org/10.1073/pnas.161885811. Holstein j. (2018). worms: Retrieving Aphia Information World Register Marine Species. R package version 0.2.2. https://CRAN.R-project.org/package=worms ICES Technical Service, Greater North Sea Celtic Seas Ecoregions, 29 August 2018 sr.2018.14 Version 2: 22 January 2019 https://doi.org/10.17895/ices.pub.4508 OSPAR request production spatial data layers fishing intensity/pressure. C.R. Pitcher, J.G. Hiddink, S. Jennings, J. Collie, .M. Parma, R. Amoroso, T. Mazor, M. Sciberras, R.. McConnaughey, .D. Rijnsdorp, M.J. Kaiser, P. Suuronen, R. Hilborn, 2022. Trawl impacts relative status biotic communities seabed sedimentary habitats 24 regions worldwide. PNAS. https://doi.org/10.1073/pnas.2109449119 C.R. Pitcher, N. Ellis, S. Jennings, J.G. Hiddink, T. Mazor, M.J.Kaiser, M.. Kangas, R.. McConnaughey, .M. Parma, .D. Rijnsdorp, P. Suuronen, J.S. Collie, R. Amoroso, K.M. Hughes R. Hilborn, 2017. Estimating sustainability towed fishing-gearimpacts seabed habitats: simple quantitative riskassessment method applicable data-limited fisheries. Methods Ecology Evolution2017, 8, 472–480doi: 10.1111/2041-210X.12705 Queiros, . M., S. N. R. Birchenough, J Bremner, J.. Godbold, R.E. Parker, . Romero-Ramirez, H. Reiss, M. Solan, P. J. Somerfield, C. Van Colen, G. Van Hoey, S. Widdicombe, 2013. bioturbation classification European marine infaunal invertebrates. Ecology Evolution 3 (11), 3958-3985 R Core Team (2021). R: language environment statistical computing. R Foundation Statistical Computing, Vienna, Austria. URL https://www.R-project.org/. Soetaert Karline, Olivier Beauchard (2022). Btrait: Working Biological density, taxonomy, trait composition data. R package version 1.0.2. Soetaert Karline, Olivier Beauchard (2022). Bfiat: Bottom Fishing Impact Assessment Tool. R package version 0.0.1. Verhulst, Pierre-François (1845). “Recherches mathématiques sur la loi d’accroissement de la population” [Mathematical Researches Law Population Growth Increase]. Nouveaux Mémoires de l’Académie Royale des Sciences et Belles-Lettres de Bruxelles. 18: 8. Wrede, ., J.Beermann, J.Dannheim, L.Gutow, T.Brey, 2018. Organism functional traits ecosystem supporting services - novel approach predict bioirrigation. Ecological indicators, 91, 737-743.","code":""},{"path":"https://EMODnet.github.io/Bfiat/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Karline Soetaert. Author, maintainer. Olivier Beauchard. Author.","code":""},{"path":"https://EMODnet.github.io/Bfiat/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Karline Soetaert, Olivier Beauchard (2024). R-package Bfiat: Tools estimating impact bottom disturbance sediment ecosystems. Data product created European Marine Observation Data Network (EMODnet) Biology Phase V, NECCTON project (New Copernicus Capability Trophic Ocean Networks).","code":"@Manual{,   title = {R-package Bfiat: Tools for estimating the impact of bottom disturbance on sediment ecosystems.},   author = {Karline Soetaert and Olivier Beauchard},   organization = {Netherlands Institute of Sea Research},   note = {Data product created under the European Marine Observation Data Network (EMODnet) Biology Phase V, and under the NECCTON project (New Copernicus Capability for Trophic Ocean Networks).},   keywords = {trawling, density, traits, ecosystem functions}, }"},{"path":[]},{"path":"https://EMODnet.github.io/Bfiat/index.html","id":"introduction","dir":"","previous_headings":"","what":"Introduction","title":"An R package for bottom fishing assessment","text":"click go website  R-package Bfiat created framework EMODnet biology project, NECCTON (New Copernicus Capability Trophic Ocean Networks) project, cooperation ICES Working Group Fisheries Benthic Impact Trade-offs (WGFBIT).","code":"Bfiat (Bottom Fisheries Impact Assessment Tool) is an R-package that  estimates the impact of bottom trawling on sediment inhabiting organisms,  and on sediment ecosystem functions.  It contains data-driven mechanistic models that describe how species  density is being reduced by bottom trawling, and then recovers till  the next fishing event."},{"path":"https://EMODnet.github.io/Bfiat/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"An R package for bottom fishing assessment","text":"installing Bfiat package, need first install following R-packages dependencies: Btrait, work species data, trait databases (found github/EMODNET/btrait). deSolve, solve mechanistic model devtools, required seamless installation Bfiat Btrait packages github repository. deSolve devtools packages installed (CRAN), type following command R-console install Btrait Bfiat package: want install vignettes, may delete build_vignettes = TRUE part. , type require(Bfiat) R-console load package R. ’s ! step, able use package.","code":"devtools::install_github(\"EMODnet/Btrait\", depend=TRUE, build_vignettes=TRUE) devtools::install_github(\"EMODnet/Bfiat\", depend=TRUE, build_vignettes=TRUE)"},{"path":"https://EMODnet.github.io/Bfiat/index.html","id":"getting-help","dir":"","previous_headings":"","what":"Getting help","title":"An R package for bottom fishing assessment","text":"R-package, can get extra help entering ?Bfiat R console. vignette package, can triggered vignette(\"Btrait\") R console.","code":""},{"path":"https://EMODnet.github.io/Bfiat/index.html","id":"uninstall","dir":"","previous_headings":"","what":"Uninstall","title":"An R package for bottom fishing assessment","text":"uninstall Bfiat package, locate “Packages” tab Rstudio, click encircled “x” button (“Remove package”) right margin. uninstall package manually, type following command R-console (version library may differ, assume 4.1): Windows users: Linux users: transition version 0.01 version 1.0.0 names many functions changed. Also, function names package Btrait, used Bfiat, changed. means code uses old versions need adapted. First upload: 22/02/2024 Last major change: 29/01/2025","code":"remove.packages(\"Bfiat\", lib=\"~/R/win-library/4.1\") remove.packages(\"Bfiat\", lib=\"~/R/x86_64-pc-linux-gnu-library/4.1\")"},{"path":"https://EMODnet.github.io/Bfiat/reference/BFIAT_package.html","id":null,"dir":"Reference","previous_headings":"","what":"Bottom Fishing Impact Assessment Tools — Bfiat-package","title":"Bottom Fishing Impact Assessment Tools — Bfiat-package","text":"Functions estimate impact bottom disturbances sediment ecosystems.","code":""},{"path":"https://EMODnet.github.io/Bfiat/reference/BFIAT_package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Bottom Fishing Impact Assessment Tools — Bfiat-package","text":"Karline Soetaert, Olivier Beauchard","code":""},{"path":"https://EMODnet.github.io/Bfiat/reference/BFIAT_package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Bottom Fishing Impact Assessment Tools — Bfiat-package","text":"Beauchard, O., Murray S.. Thompson, Kari Elsa Ellingsen, Gerjan Piet, Pascal Laffargue, Karline Soetaert, 2023. Assessing sea floor functional diversity vulnerability. Marine Ecology Progress Serie v708, p21-43, https://www.int-res.com/abstracts/meps/v708/p21-43/ Data product created European Marine Observation Data Network (EMODnet) Biology Phase V.","code":""},{"path":"https://EMODnet.github.io/Bfiat/reference/BFIATdata.html","id":null,"dir":"Reference","previous_headings":"","what":"Biological data from a transect across the North sea for running the BFIAT tool. — Datasets for trawling assessment","title":"Biological data from a transect across the North sea for running the BFIAT tool. — Datasets for trawling assessment","text":"NIOZdata provides macrofauna data 4 sites running BFIAT model tools.","code":""},{"path":"https://EMODnet.github.io/Bfiat/reference/BFIATdata.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Biological data from a transect across the North sea for running the BFIAT tool. — Datasets for trawling assessment","text":"**NIOZdata** list 5 tables . density data.frame station names, taxon, density, biomass (wet weight) sampling date. stations data.frame station names, x y positions, depth number samples data based. taxonomy data.frame column names taxon, genus, family, order, class, phylum AphiaID. fishing data.frame species traits necessary estimating fishing parameters; columns taxon, 0, 0-5, 5-15, 15-30, >30, Age..maturity, r. contours list x, y, z values contours (use map_key  map_legend). abiotics data.frame abiotic conditions (depth, D50, silt percentage). sar data.frame fishing intensities stations, per metier per year; columns station, sandy, gear, year, sar, gpd, metier : TBB, OT: beam, otter trawl; DRB: dredge, SN: seine.","code":""},{"path":"https://EMODnet.github.io/Bfiat/reference/BFIATdata.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Biological data from a transect across the North sea for running the BFIAT tool. — Datasets for trawling assessment","text":"Karline Soetaert <karline.soetaert@nioz.nl>   Olivier Beauchard","code":""},{"path":"https://EMODnet.github.io/Bfiat/reference/BFIATdata.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Biological data from a transect across the North sea for running the BFIAT tool. — Datasets for trawling assessment","text":"Dataset Vlakte van de Raan: J. Tiano, J. Depestele, G. Van Hoey, J. Fernandes, P. van Rijswijk, K. Soetaert, 2022. Trawling effects biogeochemical processes mediated fauna high energy biogenic reef-inhabited coastal sediments. Biogeosciences, 19, 2583-2598, 2022 Dataset Frisian Front: Tiano, J. C., R. Witbaard, M.J.N. Bergman, P. van Rijswijk, . Tramper, D. van Oevelen, K. Soetaert, 2019. Acute impacts bottom trawl gears benthic metabolism nutrient cycling. ICES journal Marine Science, fsz060, https://doi.org/10.1093/icesjms/fsz060. Tiano, J., van der Reijden, K, O'Flynn, S, Beauchard, O, van der Ree, S,  van der Wees, J, Ysebaert, T, Soetaert, K., 2020. Experimental assessment bottom trawling finds significant effects epifauna juvenile infauna. Marine Environmental Research, 159, 11 p., 104964. https://doi.org/10.1016/j.marenvres.2020.104964 Dataset Dogger Bank Fladen Ground: Emil De Borger, Ulrike Braeckman, Karline Soetaert, 2021. Rapid organic matter cycling North Sea sediments. Continental shelf research, vol. 214, 2021, doi:10.1016/j.csr.2020.104327.","code":""},{"path":[]},{"path":"https://EMODnet.github.io/Bfiat/reference/BFIATdata.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Biological data from a transect across the North sea for running the BFIAT tool. — Datasets for trawling assessment","text":"Data four North Sea stations used NIOZdata. Vlakte_van_de_Raan sandy, high metabolism site uses averaged data 59 boxcores Vlakte van de Raan (Tiano et al., 2022). Faunal samples site processed Flanders Research Institute Agriculture, Fisheries Food (NIOZ). FrieseFront high metabolism, muddy site, uses information 25 boxcore samples Frisian Front (Tiano et al., 2019, 2020) faunal samples processed Netherlands Institute Sea Research (NIOZ) Fugro. DoggerbankData low metabolism sandy site collected three boxcore samples Dogger Bank (De Borger et al., 2021) processed NIOZ. FladenGround Data low metablism muddy sites collected three boxcore samples Fladen Grounds (De Borger et al., 2021) processed NIOZ.","code":""},{"path":"https://EMODnet.github.io/Bfiat/reference/BFIATdata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Biological data from a transect across the North sea for running the BFIAT tool. — Datasets for trawling assessment","text":"","code":"##----------------------------------------------------- ## Show contents of the NIOZ data sets ##-----------------------------------------------------  metadata(NIOZdata$density) #>         name                                description          units #> 1    station                               station name                #> 2       date                    sampling date, a string                #> 3      taxon taxon name, checked by worms, and adjusted                #> 4    density                      species total density individuals/m2 #> 5 biomass_ww                   species total wet weight       gAFDW/m2 head(NIOZdata$density) #>        station                taxon   density   biomass_ww      date #> 1 FladenGround      Ampelisca gibba  4.866667 8.066667e-03 2017-2019 #> 2 FladenGround  Amphictene auricoma  4.866667 1.375000e-01 2017-2019 #> 3 FladenGround Amphipholis squamata  9.700000 2.366667e-03 2017-2019 #> 4 FladenGround     Amphiura chiajei 33.966667 1.835667e+00 2017-2019 #> 5 FladenGround    Arctica islandica  9.733333 2.957744e+02 2017-2019 #> 6 FladenGround    Argissa hamatipes  4.866667 1.933333e-03 2017-2019  metadata(NIOZdata$fishing) #>              name                                               description #> 1               0                             proportion living ON sediment #> 2             0-5    proportion living in upper 5 cm of the sediment, [0,1] #> 3            5-15                   proportion living in 5-15cm depth slice #> 4           15-30                  proportion living in 15-30cm depth slice #> 5             >30                    proportion living in >30cm depth slice #> 6 Age.at.maturity                                           age at maturity #> 7               r rate of increase, estimated as 5.31*0.788/Age.at.maturity #>   units #> 1     - #> 2     - #> 3     - #> 4     - #> 5     - #> 6 years #> 7 /year head(NIOZdata$fishing) #>                   taxon    0    0-5   5-15 15-30 >30 Age.at.maturity        r #> 1 Abludomelita obtusata 0.50 0.5000 0.0000     0   0             0.5 8.330328 #> 2                  Abra 0.00 0.7500 0.2500     0   0             0.5 8.330328 #> 3             Abra alba 0.00 0.5000 0.5000     0   0             0.5 8.330328 #> 4           Abra nitida 0.00 1.0000 0.0000     0   0             0.5 8.330328 #> 5 Abyssoninoe hibernica 0.25 0.1875 0.5625     0   0             3.5 1.190047 #> 6   Acrocnida brachiata 0.00 0.0000 1.0000     0   0             4.0 1.041291  metadata(NIOZdata$sar) #>    name                                                description units #> 1 sandy              sandy sediment (based on Md grainsize) or not     - #> 2  year                                        year of the fishing     - #> 3  gear metier; TBB, OT: beam, otter trawl; DRB: dredge, SN: seine     - #> 4   sar           annual swept area ratios for the surface (0-2cm)   /yr #> 5   gpd                          estimated gear penetration depths    cm NIOZdata$sar #>               station sandy gear year         sar gpd #> 1          Doggerbank  TRUE   OT 2009 0.486488173 1.1 #> 2          Doggerbank  TRUE   SN 2009 0.547372942 1.1 #> 3          Doggerbank  TRUE  TBB 2009 0.240543916 1.9 #> 4         FrieseFront  TRUE   OT 2009 0.187068891 1.1 #> 5         FrieseFront  TRUE   SN 2009 0.001840929 1.1 #> 6         FrieseFront  TRUE  TBB 2009 0.888341978 1.9 #> 7  Vlakte_van_de_Raan  TRUE   OT 2009 1.474256306 1.1 #> 8  Vlakte_van_de_Raan  TRUE  TBB 2009 3.690922725 1.9 #> 9          Doggerbank  TRUE   OT 2010 0.434391462 1.1 #> 10         Doggerbank  TRUE   SN 2010 0.995565492 1.1 #> 11         Doggerbank  TRUE  TBB 2010 0.436246909 1.9 #> 12        FrieseFront  TRUE   OT 2010 0.031755774 1.1 #> 13        FrieseFront  TRUE  TBB 2010 1.364653823 1.9 #> 14 Vlakte_van_de_Raan  TRUE   OT 2010 1.797672553 1.1 #> 15 Vlakte_van_de_Raan  TRUE  TBB 2010 4.712480210 1.9 #> 16         Doggerbank  TRUE   OT 2011 0.818700043 1.1 #> 17         Doggerbank  TRUE   SN 2011 0.140292008 1.1 #> 18         Doggerbank  TRUE  TBB 2011 0.063568572 1.9 #> 19        FrieseFront  TRUE   OT 2011 0.042217804 1.1 #> 20        FrieseFront  TRUE   SN 2011 0.001584465 1.1 #> 21        FrieseFront  TRUE  TBB 2011 0.185835365 1.9 #> 22 Vlakte_van_de_Raan  TRUE   OT 2011 0.717074950 1.1 #> 23 Vlakte_van_de_Raan  TRUE  TBB 2011 3.431231733 1.9 #> 24         Doggerbank  TRUE   OT 2012 0.526947324 1.1 #> 25         Doggerbank  TRUE   SN 2012 0.474284890 1.1 #> 26         Doggerbank  TRUE  TBB 2012 0.503431328 1.9 #> 27        FrieseFront  TRUE   OT 2012 0.037232896 1.1 #> 28        FrieseFront  TRUE  TBB 2012 1.609863914 1.9 #> 29 Vlakte_van_de_Raan  TRUE   OT 2012 1.247629667 1.1 #> 30 Vlakte_van_de_Raan  TRUE  TBB 2012 5.894754041 1.9 #> 31         Doggerbank  TRUE   OT 2013 0.257876886 1.1 #> 32         Doggerbank  TRUE   SN 2013 0.562245241 1.1 #> 33         Doggerbank  TRUE  TBB 2013 0.670200749 1.9 #> 34        FrieseFront  TRUE   OT 2013 0.503014834 1.1 #> 35        FrieseFront  TRUE   SN 2013 0.009670976 1.1 #> 36        FrieseFront  TRUE  TBB 2013 1.024208144 1.9 #> 37 Vlakte_van_de_Raan  TRUE   OT 2013 0.719956749 1.1 #> 38 Vlakte_van_de_Raan  TRUE  TBB 2013 5.718325789 1.9 #> 39         Doggerbank  TRUE   OT 2014 1.685672337 1.1 #> 40         Doggerbank  TRUE   SN 2014 1.217272418 1.1 #> 41         Doggerbank  TRUE  TBB 2014 0.467368300 1.9 #> 42        FrieseFront  TRUE   OT 2014 0.467224344 1.1 #> 43        FrieseFront  TRUE   SN 2014 0.003162743 1.1 #> 44        FrieseFront  TRUE  TBB 2014 0.581182560 1.9 #> 45 Vlakte_van_de_Raan  TRUE   OT 2014 0.293471556 1.1 #> 46 Vlakte_van_de_Raan  TRUE  TBB 2014 4.723476517 1.9 #> 47         Doggerbank  TRUE   OT 2015 0.624384332 1.1 #> 48         Doggerbank  TRUE   SN 2015 0.912954313 1.1 #> 49         Doggerbank  TRUE  TBB 2015 1.039779153 1.9 #> 50        FrieseFront  TRUE   OT 2015 0.289381537 1.1 #> 51        FrieseFront  TRUE  TBB 2015 0.280611822 1.9 #> 52 Vlakte_van_de_Raan  TRUE   OT 2015 0.577732637 1.1 #> 53 Vlakte_van_de_Raan  TRUE  TBB 2015 5.662960904 1.9 #> 54         Doggerbank  TRUE   OT 2016 0.514820697 1.1 #> 55         Doggerbank  TRUE   SN 2016 0.064396165 1.1 #> 56         Doggerbank  TRUE  TBB 2016 0.480204930 1.9 #> 57        FrieseFront  TRUE   OT 2016 0.222905548 1.1 #> 58        FrieseFront  TRUE  TBB 2016 0.341281431 1.9 #> 59 Vlakte_van_de_Raan  TRUE   OT 2016 0.556322542 1.1 #> 60 Vlakte_van_de_Raan  TRUE  TBB 2016 8.777992048 1.9 #> 61         Doggerbank  TRUE   OT 2017 0.388396311 1.1 #> 62         Doggerbank  TRUE   SN 2017 0.130649499 1.1 #> 63         Doggerbank  TRUE  TBB 2017 0.172858813 1.9 #> 64        FrieseFront  TRUE   OT 2017 0.028675558 1.1 #> 65        FrieseFront  TRUE   SN 2017 0.080483066 1.1 #> 66        FrieseFront  TRUE  TBB 2017 0.072245080 1.9 #> 67 Vlakte_van_de_Raan  TRUE   OT 2017 0.097936917 1.1 #> 68 Vlakte_van_de_Raan  TRUE  TBB 2017 6.855648326 1.9 #> 69         Doggerbank  TRUE   OT 2018 0.875692993 1.1 #> 70         Doggerbank  TRUE   SN 2018 0.016549367 1.1 #> 71         Doggerbank  TRUE  TBB 2018 0.080756233 1.9 #> 72        FrieseFront  TRUE   OT 2018 0.060393842 1.1 #> 73        FrieseFront  TRUE   SN 2018 0.350010585 1.1 #> 74        FrieseFront  TRUE  TBB 2018 0.318602811 1.9 #> 75 Vlakte_van_de_Raan  TRUE   OT 2018 0.003069557 1.1 #> 76 Vlakte_van_de_Raan  TRUE  TBB 2018 4.918896515 1.9 #> 77         Doggerbank  TRUE   OT 2019 1.492480999 1.1 #> 78         Doggerbank  TRUE   SN 2019 0.078015624 1.1 #> 79         Doggerbank  TRUE  TBB 2019 0.026856502 1.9 #> 80        FrieseFront  TRUE   OT 2019 0.055471966 1.1 #> 81        FrieseFront  TRUE   SN 2019 0.077461767 1.1 #> 82        FrieseFront  TRUE  TBB 2019 0.128991817 1.9 #> 83 Vlakte_van_de_Raan  TRUE   OT 2019 0.019741463 1.1 #> 84 Vlakte_van_de_Raan  TRUE  TBB 2019 6.654184542 1.9 #> 85         Doggerbank  TRUE   OT 2020 0.350662800 1.1 #> 86         Doggerbank  TRUE   SN 2020 0.027000360 1.1 #> 87         Doggerbank  TRUE  TBB 2020 0.075288460 1.9 #> 88        FrieseFront  TRUE   OT 2020 0.206650225 1.1 #> 89        FrieseFront  TRUE   SN 2020 0.011735778 1.1 #> 90        FrieseFront  TRUE  TBB 2020 0.227015173 1.9 #> 91 Vlakte_van_de_Raan  TRUE  TBB 2020 6.975363901 1.9   ##----------------------------------------------------- ## SPECIES data ##-----------------------------------------------------  head(NIOZdata$density) #>        station                taxon   density   biomass_ww      date #> 1 FladenGround      Ampelisca gibba  4.866667 8.066667e-03 2017-2019 #> 2 FladenGround  Amphictene auricoma  4.866667 1.375000e-01 2017-2019 #> 3 FladenGround Amphipholis squamata  9.700000 2.366667e-03 2017-2019 #> 4 FladenGround     Amphiura chiajei 33.966667 1.835667e+00 2017-2019 #> 5 FladenGround    Arctica islandica  9.733333 2.957744e+02 2017-2019 #> 6 FladenGround    Argissa hamatipes  4.866667 1.933333e-03 2017-2019  # create summaries SUMM <- with(NIOZdata$density,    get_summary(descriptor = station,                 taxon      = taxon,                 value      = density))  SUMM$density   # The number of species per station #>           descriptor     value #> 1         Doggerbank  1519.200 #> 2       FladenGround  1169.767 #> 3        FrieseFront  1322.425 #> 4 Vlakte_van_de_Raan 20597.541  SUMM$taxa      # number of taxa #>           descriptor taxon #> 1         Doggerbank    61 #> 2       FladenGround    51 #> 3        FrieseFront    57 #> 4 Vlakte_van_de_Raan    81  # The number of times a species has been found Nocc <- tapply(X     = NIOZdata$density$station,                 INDEX = NIOZdata$density$taxon,                 FUN   = length)                                 # most often encountered taxa N_occ  <- SUMM$occurrence  tail(N_occ[order(N_occ[,2]), ]) #>                    taxon occurrence #> 65               Glycera          3 #> 82   Kurtiella bidentata          3 #> 136          Ophiuroidea          3 #> 181    Spiophanes bombyx          3 #> 186  Sthenelais limicola          3 #> 189 Tellimya ferruginosa          4   ##----------------------------------------------------- ## ABIOTICS data ##-----------------------------------------------------  summary(NIOZdata$abiotics) #>    station              depth             D50              silt        #>  Length:4           Min.   : 10.00   Min.   : 57.00   Min.   : 0.000   #>  Class :character   1st Qu.: 22.00   1st Qu.: 78.75   1st Qu.: 6.225   #>  Mode  :character   Median : 30.00   Median :148.00   Median :23.150   #>                     Mean   : 51.25   Mean   :142.50   Mean   :21.575   #>                     3rd Qu.: 59.25   3rd Qu.:211.75   3rd Qu.:38.500   #>                     Max.   :135.00   Max.   :217.00   Max.   :40.000   #>       sar            subsar            gpd        #>  Min.   :1.239   Min.   :0.3788   Min.   :1.550   #>  1st Qu.:1.744   1st Qu.:0.4845   1st Qu.:1.670   #>  Median :2.545   Median :0.6841   Median :1.941   #>  Mean   :3.159   Mean   :1.2416   Mean   :1.970   #>  3rd Qu.:3.961   3rd Qu.:1.4413   3rd Qu.:2.241   #>  Max.   :6.308   Max.   :3.2193   Max.   :2.449    NIOZabiot <- merge(NIOZdata$stations, NIOZdata$abiotics,                     by = \"station\")                     with(NIOZabiot,     map_key(x, y, colvar = silt,             contours = NIOZdata$contours, draw.levels = TRUE,             main = \"silt fraction\",            pch = 16))   # show the different abiotic data sets metadata(NIOZdata$abiotics) #>     name                                         description      units #> 1  depth                                         water depth          m #> 2    D50                                   Median grain size micrometer #> 3   silt                    silt fraction (0.002 to 0.075mm)          % #> 4    sar    annual swept area ratios for the surface (0-2cm)        /yr #> 5 subsar  annual swept area ratios for the subsurface (>2cm)        /yr #> 6    gpd                   estimated gear penetration depths         cm  ##----------------------------------------------------- ## From long format to wide format (stations x species) ##-----------------------------------------------------  NSwide <- with (NIOZdata$density,       l2w_density(descriptor  = station,                   taxon       = taxon,                   value       = density))  PP <- princomp(t(NSwide[,-1])) if (FALSE) { # \\dontrun{  biplot(PP) } # }  ##----------------------------------------------------- ## Community weighted mean score. ##-----------------------------------------------------  # Traits estimated for absences, by including taxonomy   NStrait.lab <- metadata(Traits_nioz)  trait.cwm <- get_trait_density (wide           = NSwide,                                 trait          = Traits_nioz,                                 taxonomy       = NIOZdata$taxonomy,                                trait_class    = NStrait.lab$trait,                                 trait_score    = NStrait.lab$score,                                 scalewithvalue = TRUE)  head(trait.cwm, n=c(4, 4))   #>           descriptor Age.at.maturity Annual.fecundity Biodeposition #> 1         Doggerbank       0.2004247        0.2706527     0.1343697 #> 2       FladenGround       0.3002824        0.2531072     0.1368066 #> 3        FrieseFront       0.6378947        0.4149532     0.2632602 #> 4 Vlakte_van_de_Raan       0.0884499        0.5374093     0.4180760  # add station information Stations.traits <- merge(NIOZdata$stations,  trait.cwm,                           by.x = \"station\",                           by.y = \"descriptor\")  ##----------------------------------------------------- ## Maps ##-----------------------------------------------------  par(mfrow=c(2,2))  with(Stations.traits,     map_key(x, y, colvar = Biodeposition,            contours = NIOZdata$contours,             main     = \"Biodeposition\",             pch = 16))            with(Stations.traits,     map_key(x, y, colvar = Biodiffusion,            contours = NIOZdata$contours,             main     = \"Biodiffusion\",             pch = 16))             with(Stations.traits,     map_key(x, y, colvar = Biostabilisation,            contours = NIOZdata$contours,             main     = \"Biostabilisation\",             pch = 16))             with(Stations.traits,     map_key(x, y, colvar = Burrow.width,            contours = NIOZdata$contours,             main     = \"Burrow width\",             pch = 16))   ##----------------------------------------------------- ## Show the depth contours ##-----------------------------------------------------  map_key(contours    = NIOZdata$contours,          draw.levels = TRUE,          key.levels  = TRUE,          col.levels  = jet.col(100))  # Use a different color scheme collev <- function(n)     c(\"black\", ramp.col(col = c(\"darkgreen\", \"darkblue\"),                         n   = 101))  map_key(contours    = NIOZdata$contours,         draw.levels = TRUE,         col.levels  = collev,        key.levels  = TRUE,         lwd         = 2)"},{"path":"https://EMODnet.github.io/Bfiat/reference/SARdata.html","id":null,"dir":"Reference","previous_headings":"","what":"Swept-area ratios in the Northsea, OSPAR data. — Fishing intensity data","title":"Swept-area ratios in the Northsea, OSPAR data. — Fishing intensity data","text":"SAR average swept area ratios (2009-2020) Northsea (long [-2, 8]; lat [50, 60]), resolution 0.05 dg, (source: OSPAR).","code":""},{"path":"https://EMODnet.github.io/Bfiat/reference/SARdata.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Swept-area ratios in the Northsea, OSPAR data. — Fishing intensity data","text":"**SAR** list 5 items. lon, x, vector (201 elements) longitudes (WGS84), dgE. lat, y, vector (201 elements) latitudes (WGS84), dgN. sar, matrix dimensions (201 x 201) annual swept area ratios surface (0-2cm). subsar, matrix dimensions (201 x 201) annual swept area ratios subsurface (>2cm). gpd, matrix dimensions (201 x 201) estimated gear penetration depths ([cm]). Data source: OSPAR (ICES, 2022)","code":""},{"path":"https://EMODnet.github.io/Bfiat/reference/SARdata.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Swept-area ratios in the Northsea, OSPAR data. — Fishing intensity data","text":"Karline Soetaert <karline.soetaert@nioz.nl>   Olivier Beauchard","code":""},{"path":[]},{"path":"https://EMODnet.github.io/Bfiat/reference/SARdata.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Swept-area ratios in the Northsea, OSPAR data. — Fishing intensity data","text":"Original data SAR compiled ICES upon request OSPAR. data based relevant VMS logbook data.  Several Quality Checks undertaken full VMS dataset produce overview QC report.  R scripts SQL code used access process VMS data available GitHub  (https://github.com/ices-eg/wg_WGSFD). full data set comprised sar, subsar data 2009 till 2020,  [-43.675, 43.7250 dg E] [36.02, 81.72 dg N]. data, yearly averages estimated, range restricted within  [-2, 8 dgE] & [50, 60 dg N]. Mean gear penetration depth estimated based metiers: metiers Aggregated beam trawl (TBB), dredge (DRB), demersal seine (SN), otter trawl (OT), based metier layers: OT_CRU, OT_DMF, OT_MIX, OT_MIX_CRU, OT_MIX_DMF_BEN, OT_MIX_DMF_PEL, OT_MIX_CRU_DMF, OT_SPF, TBB_CRU, TBB_DMF, TBB_MOL, DRB_MOL, SDN_DMF, SSC_DMF. gear penetration depths used mean values sand muddy sediments: sand: 3.5, 1.1, 1.1, 1.9 cm DRB, OT, SN, TBB respectively mud : 5.4, 2.0, 2.0, 3.2 cm DRB, OT, SN, TBB respectively average (used ): 4.45, 1.55, 1.55, 2.55 cm DRB, OT, SN, TBB respectively","code":""},{"path":"https://EMODnet.github.io/Bfiat/reference/SARdata.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Swept-area ratios in the Northsea, OSPAR data. — Fishing intensity data","text":"(older version:) ICES Technical Service, Greater North Sea Celtic Seas Ecoregions, 29 August 2018 sr.2018.14 Version 2: 22 January 2019 https://doi.org/10.17895/ices.pub.4508 OSPAR request production spatial data layers fishing intensity/pressure.","code":""},{"path":"https://EMODnet.github.io/Bfiat/reference/SARdata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Swept-area ratios in the Northsea, OSPAR data. — Fishing intensity data","text":"","code":"##----------------------------------------------------- ## Show contents of the fishing data set ##-----------------------------------------------------  metadata(SAR) #> $source #> [1] \"OSPAR, ICES\" #>  #> $data #>     name #> 1    lon #> 2    lat #> 3    sar #> 4 subsar #> 5    gpd #>                                                                    description #> 1                                                                    longitude #> 2                                                                     latitude #> 3 annual swept area ratio (2009-2020), sum of beam, otter trawl, dredge, seine #> 4               annual swept area ratio (2009-2020) for the subsurface (> 2cm) #> 5                                            estimated gear penetration depths #>   units #> 1   dgE #> 2   dgN #> 3   /yr #> 4   /yr #> 5    cm #>  head(SAR$sar) #>            [,1]       [,2]      [,3]      [,4]       [,5]       [,6]       [,7] #> [1,] 0.07355834 0.05672829 0.1497539 0.6018105 0.22252551 0.35871873 0.64379586 #> [2,] 0.03630100 0.06368219 0.1966831 0.4611358 0.13567970 0.17296712 0.16653411 #> [3,] 0.02569979 0.06158300 0.2104637 0.4053977 0.16444175 0.06257311 0.04984419 #> [4,] 0.05449316 0.07933812 0.2012643 0.3307130 0.12098146 0.06695588 0.05641331 #> [5,] 0.05543249 0.12613440 0.2759151 0.3164142 0.13037950 0.08929022 0.03571426 #> [6,] 0.02661347 0.08064582 0.2257001 0.3202876 0.08150474 0.02731249 0.01988160 #>            [,8]        [,9]       [,10]        [,11]        [,12]        [,13] #> [1,] 0.32105055 0.005446512 0.002812023 8.353587e-04           NA           NA #> [2,] 0.22738460 0.014554284          NA 2.831444e-05 7.363268e-05           NA #> [3,] 0.12487334 0.026673355 0.004770397 7.618951e-03 9.979359e-04 0.0002736907 #> [4,] 0.09652301 0.052986573 0.013579033 2.947101e-03 1.567850e-03 0.0007137046 #> [5,] 0.05735910 0.030358087 0.024841832 4.739914e-03 2.805902e-03 0.0011937296 #> [6,] 0.02804224 0.042199241 0.039153584 1.309945e-02 3.033610e-03 0.0012795559 #>             [,14]        [,15] [,16] [,17] [,18] [,19] [,20] [,21] [,22] [,23] #> [1,]           NA           NA    NA    NA    NA    NA    NA    NA    NA    NA #> [2,]           NA           NA    NA    NA    NA    NA    NA    NA    NA    NA #> [3,] 9.334784e-06           NA    NA    NA    NA    NA    NA    NA    NA    NA #> [4,] 9.334784e-06           NA    NA    NA    NA    NA    NA    NA    NA    NA #> [5,] 6.389477e-06           NA    NA    NA    NA    NA    NA    NA    NA    NA #> [6,] 3.700429e-06 1.684822e-06    NA    NA    NA    NA    NA    NA    NA    NA #>      [,24] [,25] [,26] [,27] [,28] [,29] [,30] [,31] [,32] [,33] [,34] [,35] #> [1,]    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA #> [2,]    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA #> [3,]    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA #> [4,]    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA #> [5,]    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA #> [6,]    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA #>      [,36] [,37] [,38] [,39] [,40] [,41] [,42] [,43] [,44] [,45] [,46] [,47] #> [1,]    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA #> [2,]    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA #> [3,]    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA #> [4,]    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA #> [5,]    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA #> [6,]    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA #>      [,48] [,49] [,50] [,51] [,52] [,53] [,54] [,55] [,56] [,57] [,58] [,59] #> [1,]    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA #> [2,]    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA #> [3,]    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA #> [4,]    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA #> [5,]    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA #> [6,]    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA #>      [,60] [,61] [,62] [,63] [,64] [,65] [,66] [,67] [,68] [,69] [,70] [,71] #> [1,]    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA #> [2,]    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA #> [3,]    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA #> [4,]    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA #> [5,]    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA #> [6,]    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA #>      [,72] [,73] [,74] [,75] [,76] [,77] [,78] [,79] [,80] [,81] [,82] [,83] #> [1,]    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA #> [2,]    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA #> [3,]    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA #> [4,]    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA #> [5,]    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA #> [6,]    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA #>      [,84] [,85] [,86] [,87] [,88] [,89] [,90] [,91] [,92] [,93] [,94] [,95] #> [1,]    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA #> [2,]    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA #> [3,]    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA #> [4,]    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA #> [5,]    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA #> [6,]    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA #>      [,96] [,97] [,98] [,99] [,100] [,101] [,102] [,103] [,104] [,105] #> [1,]    NA    NA    NA    NA     NA     NA     NA     NA     NA     NA #> [2,]    NA    NA    NA    NA     NA     NA     NA     NA     NA     NA #> [3,]    NA    NA    NA    NA     NA     NA     NA     NA     NA     NA #> [4,]    NA    NA    NA    NA     NA     NA     NA     NA     NA     NA #> [5,]    NA    NA    NA    NA     NA     NA     NA     NA     NA     NA #> [6,]    NA    NA    NA    NA     NA     NA     NA     NA     NA     NA #>           [,106]      [,107]      [,108]      [,109]      [,110]      [,111] #> [1,]          NA          NA          NA          NA          NA          NA #> [2,]          NA          NA          NA          NA          NA          NA #> [3,]          NA          NA          NA          NA          NA          NA #> [4,]          NA          NA          NA          NA          NA          NA #> [5,]          NA          NA          NA          NA          NA          NA #> [6,] 0.001395454 0.001395454 0.001395454 0.001395454 0.001395454 0.001480981 #>           [,112]       [,113]      [,114]     [,115]     [,116]      [,117] #> [1,]          NA           NA          NA         NA         NA 0.001617847 #> [2,]          NA           NA          NA         NA         NA 0.047768506 #> [3,]          NA 0.0002330433 0.001678845 0.02099453 0.15610526 0.079671756 #> [4,]          NA 0.0006400348 0.002344201 0.02282724 0.15546720 0.160453291 #> [5,]          NA 0.0011247206 0.003668732 0.01402367 0.03630049 0.193847084 #> [6,] 0.001495097 0.0028836160 0.008235741 0.02582399 0.06159364 0.040304478 #>          [,118]     [,119]     [,120]      [,121]      [,122]      [,123] #> [1,] 0.07304697 0.44021948 1.98434901 3.405527918 1.030526240 0.011922190 #> [2,] 1.27821036 0.38978120 1.07662488 1.279880402 0.295439636 0.002876324 #> [3,] 1.52540665 0.09378295 0.09001383 0.131445823 0.054195369 0.068659507 #> [4,] 0.45381618 0.01785700 0.02177349 0.111620474 0.118106275 0.124670321 #> [5,] 0.08486314 0.02998075 0.09236747 0.106241503 0.011702458 0.011685715 #> [6,] 0.02412992 0.02535896 0.06110640 0.007122626 0.006381908 0.004091756 #>          [,124]      [,125]    [,126]     [,127]     [,128]     [,129] #> [1,] 0.02828109 0.011392372 0.2248566 0.02410316 0.04677145 0.08534949 #> [2,] 0.04606827 0.004506055 0.1024898 0.08535430 0.68617273 0.63247236 #> [3,] 0.06376417 0.066428773 0.2278492 0.20889534 0.51448982 0.63385658 #> [4,] 0.16163564 0.280085237 0.1102745 0.11692688 0.24272525 0.24991360 #> [5,] 0.10275582 0.108441742 0.1039444 0.08547157 0.15705706 0.15013021 #> [6,] 0.09545881 0.081289727 0.1248917 0.04221988 0.35753236 0.41212237 #>         [,130]     [,131]    [,132]    [,133]    [,134]    [,135]    [,136] #> [1,] 0.3399883 0.66506740 1.4302590 2.0342487 1.1778633 0.4593690 0.3279271 #> [2,] 0.4884086 0.51365446 0.3195583 0.5047549 0.5291371 0.5358062 0.5574770 #> [3,] 0.1837254 0.19358479 0.1262645 0.4933666 0.5910319 0.5291639 0.6763279 #> [4,] 0.1183519 0.12626584 0.2528135 0.4576485 0.7282994 0.6313081 0.6620539 #> [5,] 0.1175555 0.07077433 0.2453625 0.3743953 0.5939699 0.3928658 0.5135145 #> [6,] 0.2367568 0.09415880 0.1531609 0.3688490 0.5486929 0.3761316 0.4130405 #>         [,137]    [,138]     [,139]     [,140]     [,141]     [,142]     [,143] #> [1,] 0.4084665 0.4988324 0.34842817 0.37613823 0.07569183 0.10410347 0.21888751 #> [2,] 0.3913539 0.2765731 0.10050446 0.07740681 0.07725576 0.16813780 0.09150634 #> [3,] 0.4618348 0.2909847 0.07870975 0.08665922 0.13812622 0.10187294 0.14615386 #> [4,] 0.6118645 0.5858445 0.18278052 0.04590163 0.17693480 0.06020461 0.04798960 #> [5,] 0.5780704 0.5543521 0.11144847 0.12533147 0.17657677 0.20791375 0.10387396 #> [6,] 0.5517691 0.5416135 0.16020831 0.15978346 0.16041183 0.11962563 0.15773328 #>          [,144]      [,145]      [,146]     [,147]     [,148]     [,149] #> [1,] 0.01982853 0.005520184 0.003595411         NA         NA         NA #> [2,] 0.17789184 0.072623066 0.046698590 0.01064459         NA         NA #> [3,] 0.12549595 0.219466580 0.249622367 0.04528605 0.10550789 0.04216278 #> [4,] 0.04994906 0.262073012 0.530900501 0.18699444 0.03851945 0.04597248 #> [5,] 0.09120993 0.264268456 0.949973102 0.67489747 0.11079241 0.03274443 #> [6,] 0.13177562 0.133900482 1.016936970 0.36163392 0.06103634 0.10963396 #>           [,150]      [,151]      [,152]      [,153]     [,154]     [,155] #> [1,]          NA          NA          NA          NA         NA         NA #> [2,]          NA          NA          NA          NA         NA         NA #> [3,] 0.006471524 0.001773478 0.002509765 0.006611868 0.02667068 0.04742406 #> [4,] 0.053110439 0.052822350 0.057968681 0.079299594 0.04929230 0.08501493 #> [5,] 0.034405680 0.040634169 0.128979538 0.151013895 0.04926767 0.15072577 #> [6,] 0.165735353 0.384165173 0.660269207 0.105657717 0.18837125 0.21005701 #>          [,156]    [,157]   [,158]    [,159]    [,160]    [,161]    [,162] #> [1,] 0.39999949 0.5992939 3.038794 1.0670114 1.0132200 0.8130582 2.3466077 #> [2,] 0.30104551 0.2285435 2.621566 0.6588534 0.5197008 0.5486655 1.5966809 #> [3,] 0.09066079 0.2405967 1.733216 0.6366253 0.3632092 0.3664714 1.2357486 #> [4,] 0.18525517 0.1533045 1.853631 0.3450448 0.6661862 1.1177300 1.4599925 #> [5,] 0.24586002 0.2324160 1.696697 0.4471415 1.4042690 2.4284836 1.5288962 #> [6,] 0.40411737 0.7152467 1.161685 0.6576639 0.2740280 0.3270256 0.2167671 #>         [,163]     [,164]    [,165]    [,166]   [,167]   [,168]    [,169] #> [1,] 0.5221290 0.21506483 0.3079500 0.3125794 2.334138 2.402774 1.8156848 #> [2,] 0.3433948 0.28315205 0.9273503 1.3144002 3.081724 1.276094 0.6881164 #> [3,] 0.2797028 0.32007018 0.7768220 1.6917669 4.325854 1.128580 0.9668248 #> [4,] 0.3092819 0.29125417 0.5147301 1.5857105 4.386220 2.506680 2.1987045 #> [5,] 1.0149546 0.26930531 0.9840226 2.5106678 4.968257 2.852783 2.9137669 #> [6,] 0.3967160 0.07090784 0.5135612 1.6492344 3.602709 2.139263 2.7320919 #>         [,170]   [,171]   [,172]   [,173]    [,174]    [,175]    [,176] #> [1,] 0.6148247 3.942466 4.516277 1.070486 0.7187071 0.4147135 0.1859261 #> [2,] 1.9612479 5.302816 2.432169 1.757003 1.6649427 2.1923957 0.3753196 #> [3,] 2.8120756 3.604290 2.438323 2.569170 1.2945678 3.9879742 0.5126684 #> [4,] 3.9777110 3.343434 1.680504 1.785998 3.0777081 3.6372544 0.4387463 #> [5,] 3.1838492 5.063573 3.535059 4.997079 4.5182558 3.2338218 0.7544276 #> [6,] 3.5510947 3.220385 2.848223 3.785357 6.3109653 2.2930969 0.6838632 #>         [,177]     [,178]    [,179]    [,180]   [,181]    [,182]    [,183] #> [1,] 0.2103824 0.07698863 0.6497138 1.4459323 1.989769 0.2035887 0.1766528 #> [2,] 0.1390448 0.18604250 0.4501682 1.6986952 3.016415 0.2712330 0.2504606 #> [3,] 0.1475360 0.08925753 0.4576098 4.2174294 7.148881 0.5552498 0.3507430 #> [4,] 0.2452317 0.23231092 0.6079510 2.4405742 3.806941 1.5524609 0.2407287 #> [5,] 0.1933412 0.43547296 0.4865997 1.5145205 2.321796 2.3970260 0.3883675 #> [6,] 0.3800396 0.18468391 0.3096804 0.6177013 1.497211 2.3580506 1.7710129 #>          [,184]    [,185]    [,186]    [,187]     [,188]     [,189]     [,190] #> [1,] 0.03996595 0.2647272 0.2439296 0.1808848 0.03104670 0.09392943 0.04945235 #> [2,] 0.16760855 0.4907478 0.3206280 0.3866034 0.09801153 0.47429832 0.49182088 #> [3,] 0.26122190 0.2831881 0.5349191 0.4758629 0.40308761 0.47122279 0.58066268 #> [4,] 0.63298755 0.2651117 0.4285452 0.3798058 0.33815410 0.05190307 0.11595668 #> [5,] 0.50136473 0.3508988 0.3144355 0.2261707 0.20815741 0.12581366 0.06843053 #> [6,] 0.41560089 0.3613185 0.3195144 0.2541692 0.26766056 0.27017139 0.04243351 #>          [,191]     [,192]     [,193]    [,194]    [,195]   [,196]   [,197] #> [1,] 0.11668879 0.39866047 0.96475855 0.4350706 1.1154212 2.315016 3.037812 #> [2,] 0.40685518 0.22832098 0.48337934 1.1429327 1.1350680 2.738489 2.044323 #> [3,] 0.21455533 0.21171826 0.21485333 0.4067487 1.6750749 2.412246 2.546477 #> [4,] 0.04067587 0.03958428 0.09365969 0.2482267 1.2809039 2.779279 3.668582 #> [5,] 0.04663228 0.01185431 0.33255401 0.3465936 0.7669678 2.683526 3.837631 #> [6,] 0.02294409 0.06205245 0.18143525 0.2741900 0.6511125 1.764170 2.788055 #>        [,198]   [,199]   [,200]    [,201] #> [1,] 3.412755 6.121109 3.916296  1.602067 #> [2,] 3.471101 5.132736 4.197838  2.050420 #> [3,] 4.003296 5.009741 4.358913  2.303894 #> [4,] 5.088443 3.157755 3.196467  4.526087 #> [5,] 3.490861 3.218464 2.605377  7.947936 #> [6,] 1.749728 1.351854 2.491624 13.625810  ##----------------------------------------------------- ## The fishing data - asp sets the good aspect ratio ##-----------------------------------------------------  # Aspect ratio of the graph asp <- 1/cos((mean(SAR$lat) * pi)/180)  par(mfrow=c(2,2)) with (SAR, image2D(x=lon, y=lat, z=sar,        xlab = expression(\"\"^o~E),        ylab = expression(\"\"^o~N),       clab = \"#/y\",        main = \"Swept Area Ratio (GPD: 0-2cm)\",        log=\"c\", clim=c(0.0001,50),        colkey=list(length=0.5, width=0.5),       asp=asp, las=1) )          with (SAR, image2D(x=lon, y=lat, z=subsar,        xlab = expression(\"\"^o~E),        ylab = expression(\"\"^o~N),        clab = \"#/y\",            main = \"Swept Area Ratio (GPD: >2cm)\",         log=\"c\", clim=c(0.0001,50),        colkey=list(length=0.5, width=0.5),         asp=asp, las=1)   )    with (SAR, image2D(x=lon, y=lat, z=gpd,        xlab = expression(\"\"^o~E),        ylab = expression(\"\"^o~N),       clab = \"cm\",       main = \"Gear penetration depth\",        colkey=list(length=0.5, width=0.5),       asp=asp, las=1) )          hist (log10(SAR$sar), n=100, axes=FALSE,        xlab = \"swept area ratio, /yr\",        main = \"histogram\") axis(side=1, at=-4:2, labels=10^(-4:2)) axis(side=2)"},{"path":"https://EMODnet.github.io/Bfiat/reference/critical.html","id":null,"dir":"Reference","previous_headings":"","what":"Critical values for fishing or taxon parameters. — critical values for fishing","title":"Critical values for fishing or taxon parameters. — critical values for fishing","text":"critical_sar critical_gpd estimates one taxa fishing intensity (sar) gear penetration depth (gpd), density/caryying capacity ratio decreases critical value (crit_DK). critical_r critical_d estimate combination fishing intensity (sar) gear penetration depth (gpd), critical intrinsic rate natural increase (r) depletion fraction (d) density, carrying capacity ratio reaches critical value (crit_DK).","code":""},{"path":"https://EMODnet.github.io/Bfiat/reference/critical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Critical values for fishing or taxon parameters. — critical values for fishing","text":"","code":"critical_sar (gpd = 1, fDepth = 1, uDepth = 0, d = NULL,               r = 0.1, crit_DK = 0, ...)     critical_gpd ( sar = 1, fDepth = 1, uDepth = 0, d = NULL,                r = 0.1, crit_DK = 0, ...)   critical_r (sar = 1, gpd = 1, fDepth = 1, uDepth = 0, d = NULL,              crit_DK = 0, ...)   critical_d (sar = 1, r = 0.1, crit_DK = 0, ...)"},{"path":"https://EMODnet.github.io/Bfiat/reference/critical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Critical values for fishing or taxon parameters. — critical values for fishing","text":"sar fishing intensity, estimated Swept Area Ratio, units e.g. [m2/m2/year].   One number vector. gpd gear penetration depth, units e.g. [cm].   One number vector. r intrinsic rate natural increase taxon, units e.g. [/year].   One number vector. d depletion fraction due fishing, one value vector. crit_DK steady-state density carrying capacity ratio taxon need matched. default value 0 indicates taxon extinct.  value 0.01 indicates actual density 1/100 potential density (carrying capacity). fDepth fractional occurrence species sediment layers, dimensionless.   vector length uDepth. sum fDepth equal 1. used estimate depletion fraction d. ignored d given value. uDepth depth upper position sediment layers, units e.g. [cm].   vector length equal number columns fDepth. ignored d given value. ... arguments passed par_d function","code":""},{"path":"https://EMODnet.github.io/Bfiat/reference/critical.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Critical values for fishing or taxon parameters. — critical values for fishing","text":"functions either return one number, vector matrix, depending input arguments","code":""},{"path":"https://EMODnet.github.io/Bfiat/reference/critical.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Critical values for fishing or taxon parameters. — critical values for fishing","text":"Karline Soetaert <karline.soetaert@nioz.nl>","code":""},{"path":[]},{"path":"https://EMODnet.github.io/Bfiat/reference/critical.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Critical values for fishing or taxon parameters. — critical values for fishing","text":"added","code":""},{"path":"https://EMODnet.github.io/Bfiat/reference/critical.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Critical values for fishing or taxon parameters. — critical values for fishing","text":"","code":"## ----------------------------------------------------------------------- ## Critical sar for beam trawling for all species from the MWTL dataset ## -----------------------------------------------------------------------  gpd_mud   <- 3.2 # beam trawl in muddy sediment gpd_sand  <- 1.9 #               sandy  head(MWTL$fishing) #>                   taxon  p0 p0_5cm p5_15cm p15_30cm p30cm Age.at.maturity     r #> 1 Abludomelita obtusata 0.5    0.5     0.0        0     0        0.500000 5.120 #> 2             Abra alba 0.0    0.5     0.5        0     0        0.500000 5.120 #> 3           Abra nitida 0.0    1.0     0.0        0     0        0.500000 5.120 #> 4       Abra prismatica 0.0    1.0     0.0        0     0        2.000000 1.280 #> 5           Abra tenuis 0.0    1.0     0.0        0     0        2.000000 1.280 #> 6 Abyssoninoe hibernica 0.0    0.5     0.5        0     0        3.333333 0.768 fDepth <- MWTL$fishing[,c(\"p0\", \"p0_5cm\", \"p5_15cm\", \"p15_30cm\", \"p30cm\")] uDepth <-               c( 0,    0,         5,        15,          30)  csar_sand <- critical_sar(gpd    = gpd_sand,                            fDepth = fDepth, uDepth = uDepth,                            r      = MWTL$fishing$r)  csar_mud  <- critical_sar(gpd    = gpd_mud,                            fDepth = fDepth, uDepth = uDepth,                            r      = MWTL$fishing$r)  csar <- data.frame(taxon     = MWTL$fishing$taxon,                     csar_sand = csar_sand,                     csar_mud  = csar_mud)                     summary(csar) #>     taxon             csar_sand          csar_mud       #>  Length:400         Min.   :  5.798   Min.   :  3.306   #>  Class :character   1st Qu.: 13.515   1st Qu.:  7.827   #>  Mode  :character   Median : 23.852   Median : 13.896   #>                     Mean   : 37.407   Mean   : 21.606   #>                     3rd Qu.: 46.388   3rd Qu.: 26.448   #>                     Max.   :438.392   Max.   :259.250   #>                     NA's   :26        NA's   :26          ## ----------------------------------------------------------------------- ## Critical gear penetration depth for species from the MWTL dataset ## -----------------------------------------------------------------------  fDepth <- MWTL$fishing[,c(\"p0\", \"p0_5cm\", \"p5_15cm\", \"p15_30cm\", \"p30cm\")] uDepth <-               c( 0,    0,         5,        15,          30)  cgpd_01   <- critical_gpd(sar   = 1,                           fDepth = fDepth, uDepth = uDepth,                            r      = MWTL$fishing$r) cgpd_10   <- critical_gpd(sar   = 10,                           fDepth = fDepth, uDepth = uDepth,                            r      = MWTL$fishing$r) cgpd_100  <- critical_gpd(sar   = 100,                           fDepth = fDepth, uDepth = uDepth,                            r      = MWTL$fishing$r) # sar of 100 and critical density = 10 percent cgpd_100b <- critical_gpd(sar     = 100,                           fDepth  = fDepth, uDepth = uDepth,                            r       = MWTL$fishing$r,                           crit_DK = 0.1)  cgpd <- data.frame(taxon     = MWTL$fishing$taxon,                     cgpd_01   = cgpd_01,                     cgpd_10   = cgpd_10,                    cgpd_100  = cgpd_100,                    cgpd_100b = cgpd_100b)  # a cgpd of 100 means: no limits                    summary(cgpd) #>     taxon              cgpd_01       cgpd_10          cgpd_100       #>  Length:400         Min.   :100   Min.   : 1.127   Min.   : 0.1160   #>  Class :character   1st Qu.:100   1st Qu.: 2.549   1st Qu.: 0.2698   #>  Mode  :character   Median :100   Median : 4.778   Median : 0.5319   #>                     Mean   :100   Mean   : 5.465   Mean   : 1.0229   #>                     3rd Qu.:100   3rd Qu.: 7.286   3rd Qu.: 0.9075   #>                     Max.   :100   Max.   :20.095   Max.   :15.3686   #>                     NA's   :8     NA's   :8        NA's   :8         #>    cgpd_100b       #>  Min.   : 0.1044   #>  1st Qu.: 0.2430   #>  Median : 0.4792   #>  Mean   : 0.9566   #>  3rd Qu.: 0.8188   #>  Max.   :15.3321   #>  NA's   :8"},{"path":"https://EMODnet.github.io/Bfiat/reference/density.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimates density at specific times for the logistic and perturbation model. density_metier allows to specify different metiers. — density ","title":"Estimates density at specific times for the logistic and perturbation model. density_metier allows to specify different metiers. — density ","text":"density_perturb, density_metier, density_logistic calculates density specific times perturbation (one metier, several metiers) continuous model respectively. Fishing implemented swept area ratios.","code":""},{"path":"https://EMODnet.github.io/Bfiat/reference/density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimates density at specific times for the logistic and perturbation model. density_metier allows to specify different metiers. — density ","text":"","code":"density_perturb (K = 1, r = 1, d = 0.1,                  parms = data.frame(K = K, r = r, d = d),                 sar = 1, taxon_names = parms[[\"taxon\"]],                  D0 = parms[[\"K\"]], times = 1,                  tstart_perturb = min(times) + 0.5/sar,                  tend_perturb = max(times),                  as.deSolve = TRUE)  density_metier (K = 1, r = 1, parms = data.frame(K = K, r = r),                 d = data.frame(0.1, 0.1), sar = data.frame(1, 2),                    taxon_names = parms[[\"taxon\"]],                  D0 = parms[[\"K\"]], times = 1,                  tstart_perturb = min(times) + 0.5/sar,                  tend_perturb = max(times),                  as.deSolve = TRUE)  density_logistic(K = 1, r = 1, m = 0.1,                  parms = data.frame(K = K, r = r, m = m),                 taxon_names = parms[[\"taxon\"]],                  D0 = parms[[\"K\"]], times = 1,                 tstart_perturb = min(times), tend_perturb = max(times),                  as.deSolve = TRUE)"},{"path":"https://EMODnet.github.io/Bfiat/reference/density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimates density at specific times for the logistic and perturbation model. density_metier allows to specify different metiers. — density ","text":"sar fishing intensity, estimated Swept Area Ratio, units e.g. [m2/m2/year]. density_perturb: one number; ignored column named \"sar\" present parms. density_metier, data.frame one value per metier. r rate increase taxon, units e.g. [/year]. One number, vector (one value per taxon). d depletion fraction due fishing. density_perturb: one number, vector length r.  density_metier, data.frame nrows = length(r), ncols = number metiers, containing one number per metier per taxon. m mortality rate. One number, vector length r. K carrying capacity. One number, vector length r. parms data.frame parameters. also includes column labeled \"times\" \"sar\", argument(s) name ignored. taxon_names vector names taxa whose characteristics present parms. length (number rows ) parms. present NULL, parms vector row.names, taxa output labeled \"tax_1\", \"tax_2\", etc. D0 initial density. One number, vector length = nrow(parms). times time estimate density. One number, vector. Ignored parms contains column labeled \"times\". tstart_perturb, tend_perturb time perturbation starts stops - tsart_perturb tend_perturb, events occur (density_perturb, density_metier) mortality parameter set = 0 (density_logistic. .deSolve TRUE, return object class deSolve, first column time; FALSE, first columns contain parameters, values times make remaining columns.","code":""},{"path":"https://EMODnet.github.io/Bfiat/reference/density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimates density at specific times for the logistic and perturbation model. density_metier allows to specify different metiers. — density ","text":".deSolve FALSE, times part argument parms,  returns data.frame, following columns:  density_logistic:  K, r, m: model parameters, D0: initial condition, times, times argument times, density, requested density times. density_perturb:  K, r, d: model parameters, sar: swept area ratio, D0: initial condition, times, times argument times, density, requested density times. .deSolve FALSE, times vector:  returns data.frame, following columns:  density_logistic:  K, r, m: model parameters, D0: initial condition, Dt_.., columns density value argument times density_perturb:  K, r, d: model parameters, sar: swept area ratio, D0: initial condition, Dt_.., columns density value argument times .deSolve TRUE, returns object class deSolve:  time: time argument times .., columns density row argument parms","code":""},{"path":"https://EMODnet.github.io/Bfiat/reference/density.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Estimates density at specific times for the logistic and perturbation model. density_metier allows to specify different metiers. — density ","text":"Karline Soetaert <karline.soetaert@nioz.nl>","code":""},{"path":[]},{"path":"https://EMODnet.github.io/Bfiat/reference/density.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimates density at specific times for the logistic and perturbation model. density_metier allows to specify different metiers. — density ","text":"Hiddink, JG, Jennings, S, Sciberras, M, et al., 2019. Assessing bottom trawling impacts based longevity benthic invertebrates. J Appl Ecol 56: 1075-1084. https://doi.org/10.1111/1365-2664.13278 Hiddink, Jan Geert, Simon Jennings, Marija Sciberras, Claire L. Szostek, Kathryn M. Hughes, Nick Ellis, Adriaan D. Rijnsdorp, Robert . McConnaughey, Tessa Mazor, Ray Hilborn, Jeremy S. Collie, C. Roland Pitcher, Ricardo O. Amoroso, Ana M. Parma, Petri Suuronen, Michel J. Kaiser, 2017.  Global analysis depletion recovery seabed biota bottom trawling disturbance. Proc. Nat. Aca. Sci, 114 (31) 8301-8306. https://doi.org/10.1073/pnas.161885811. C.R. Pitcher, N. Ellis, S. Jennings, J.G. Hiddink, T. Mazor, M.J.Kaiser, M.. Kangas, R.. McConnaughey, .M. Parma, .D. Rijnsdorp, P. Suuronen, J.S. Collie, R. Amoroso, K.M. Hughes R. Hilborn, 2017. Estimating sustainability towed fishing-gearimpacts seabed habitats: simple quantitative riskassessment method applicable data-limited fisheries. Methods Ecology Evolution,8,472-480doi: 10.1111/2041-210X.12705","code":""},{"path":"https://EMODnet.github.io/Bfiat/reference/density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimates density at specific times for the logistic and perturbation model. density_metier allows to specify different metiers. — density ","text":"","code":"## ==================================================== ## Simple runs ## ====================================================  times <- seq(0, 11, by = 0.01) T1 <- density_perturb (K = 100, D0 = 50,                        tstart_perturb = 2,                        tend_perturb   = 8,                        times = times)        T2 <- density_metier (K = 100, D0 = 50, sar = data.frame(1, 2),                        tstart_perturb = 1,                        tend_perturb   = 8,                        times = times)        T3 <- density_logistic (K = 100, r = 1, m = 0.7, D0 = 50,                         tstart_perturb = 2,                         tend_perturb   = 8,                        times = times)        plot(T1, T2, T3, lty = 1, lwd = 2)   ## ==================================================== ## Compare density_perturb with dynamic run_perturb ## ====================================================  times <- c(0, 0.5, 1.5, 2.5, 8.5)  T1 <- density_perturb (K     = 100,                         tstart_perturb = 0,                        times = times)       T1 #>   times        1 #> 1   0.0 90.00000 #> 2   0.5 93.68627 #> 3   1.5 91.32927 #> 4   2.5 90.39963 #> 5   8.5 89.77085  # dynamic run  rP <- run_perturb(parms = list(K = 100, r = 1, d = 0.1),                   sar   = 1,                   times = seq(0, 11, by = 0.01))  # compare  plot(rP, ylim = c(80, 100), las = 1,       main = \"comparison density_perturb and run_perturb\")       points(T1,         pch = 16, cex = 2)  legend(\"topright\",          legend = c(\"run_perturb\",                     \"density_perturb\"),         lty = c(1, NA), pch = c(NA, 16))                 ## ==================================================== ## Compare density_logistic with dynamic run_logistic ## ====================================================  times <- c(0, 0.5, 1.5, 2.5, 8.5)  T2 <- density_logistic(K     = 100,                         times = times) T2 #>   times         1 #> 1   0.0 100.00000 #> 2   0.5  96.12949 #> 3   1.5  92.39526 #> 4   2.5  90.95870 #> 5   8.5  90.00428  # dynamic run  rL <- run_logistic(parms = list(K = 100, r = 1, m = 0.1),                    times = seq(0, 11, by = 0.01))  # compare  plot(rL, ylim = c(80, 100), las = 1,       main = \"comparison density_logistic and run_logistic\")       points(T2,           pch = 18, cex = 2)  legend(\"topright\",          legend = c(\"run_logistic\",                     \"density_logistic\"),         lty = c(1, NA), pch = c(NA, 18))          ## ==================================================== ## Several metiers, one taxon ## ====================================================  times <- seq(0, 10, length.out = 1000)  sar = data.frame(1, 2) # 2 metiers  M1 <- density_metier (times = times,                       K   = 1, r = 1,                        d   = data.frame(0.1, 0.1),                        sar = sar,                        as.deSolve = TRUE)  # Compare with one metier run,                        P1 <- density_perturb(times = times,                        K = 1, r = 1, d = 0.1,                        sar = sum(sar),  # sum of sar                       as.deSolve = TRUE)  plot(P1, M1, lty = 1, main = \"one or two metiers\",       las = 1, lwd = 2) legend(\"topright\", col = 1:2, lty = 1, lwd = 2,         legend = c(\"sar = 3\", \"sar = (1, 2)\"))   ## ==================================================== ## Several metiers, multiple taxa ## ====================================================  times <- seq(0, 10, length.out = 1000)  # 4 taxa, 3 metiers d <- data.frame(sar1 = c(0.1, 0.2, 0.15, 0.2),                  sar2 = c(0.2, 0.3, 0.25, 0.1),                 sar3 = c(0.1, 0.3, 0.01, 0.1))                  K <- c(2,  1,   3, 10) r <- c(1,  2, 1.5,  2)      sar <- data.frame(1, 2.5, 1.3) M1 <- density_metier (times = times,                       K = K, r = r,                       d   = d,                        sar = sar,                        as.deSolve = TRUE)  # compare with the single metier model  # average depletion d1 <- (d[,1]*sar[[1]] + d[,2]*sar[[2]] + d[,3]*sar[[3]])/sum(sar)                        P1 <- density_perturb(times = times,                        K = K, r = r,                        d = d1,                       sar = sum(sar),                       as.deSolve = TRUE)  plot(P1, M1, lty = 1,       las = 1, lwd = 2) legend(\"topright\", col = 1:2, lty = 1, lwd = 2,         legend = c(\"sar = 4.3\", \"sar = (1, 2, 1.3)\")) mtext(side = 3, line = -2, \"one or multiple metiers\", outer = TRUE)"},{"path":"https://EMODnet.github.io/Bfiat/reference/getDbModel.html","id":null,"dir":"Reference","previous_headings":"","what":"From model output (time x taxon density) to time x bioturbation or time x bioirrigation potentials. — Bioturbation and bioirrigation indices from Model output","title":"From model output (time x taxon density) to time x bioturbation or time x bioirrigation potentials. — Bioturbation and bioirrigation indices from Model output","text":"get_Db_model get_irr_model combine output biological model describes taxa evolve time trait database obtain bioturbation bioirrigation potentials evolve time.  estimate bioturbation potential index (BPc) sensu Querios et al., 2013 Solan et al., 2004, bioirrigation potential index (IPc) sensu Wrede et al., 2018, respectively.","code":""},{"path":"https://EMODnet.github.io/Bfiat/reference/getDbModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"From model output (time x taxon density) to time x bioturbation or time x bioirrigation potentials. — Bioturbation and bioirrigation indices from Model output","text":"","code":"get_Db_model(model, trait = Btrait::Traits_Db,               taxon_names = colnames(model)[-1], taxonomy = NULL,                weight, verbose = FALSE, na.rm = FALSE)    get_irr_model(model, trait = Btrait::Traits_irr,                taxon_names = colnames(model)[-1], taxonomy = NULL,                 weight, verbose = FALSE, na.rm = FALSE)"},{"path":"https://EMODnet.github.io/Bfiat/reference/getDbModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"From model output (time x taxon density) to time x bioturbation or time x bioirrigation potentials. — Bioturbation and bioirrigation indices from Model output","text":"model dynamic model output describes taxa change time. matrix (time x taxon) information, generated function run_perturb density+perturb. first column contain time, columns taxon density trajectories time, column names taxon names, taxon.name. (see note taxon names) taxon_names names taxa, one column model, except first column. vector length = ncol(model) - 1. names matched trait database, optionally weight two-columned matrix/data.frame. trait (taxon x trait) data. get_Db_model, traits contain columns Ri Mi (reworking mobility traits). use get_irr_model, traits contain columns BT FT, ID, burrowing type, feeding type, injection depth respectively. trait matrix names taxa first column. good choice trait database estimating bioturbation potentials Traits_Db; good choice estimating bioirrigation potentials Traits_irr. verbose TRUE, write warnings screen. na.rm TRUE, remove species trait estimated (present trait database). taxonomy taxonomic information; first column matched taxon, regardless name. weight either vector value trajectory model (length = ncol(model) - 1), data.frame taxon (first column) versus weight (2nd column) characteristics taxon model.","code":""},{"path":"https://EMODnet.github.io/Bfiat/reference/getDbModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"From model output (time x taxon density) to time x bioturbation or time x bioirrigation potentials. — Bioturbation and bioirrigation indices from Model output","text":"get_Db_model returns time x Db-index matrix class deSolve. bioturbation index taxon (\"BPC_taxon..\"), summed index returned (\"BPc\"). get_irr_model returns time x Irr-index density matrix class deSolve. irrigation index taxon (\"IPC_taxon..\"), summed index returned (\"IPc\"). result attributes vector called \"Factor\", constant factor model output multiplied; get_Db_model, estimated sqrt(weight)*Mi*Ri; get_irr_model, estimated (weight)^0.75*FT*BT*ID.","code":""},{"path":"https://EMODnet.github.io/Bfiat/reference/getDbModel.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"From model output (time x taxon density) to time x bioturbation or time x bioirrigation potentials. — Bioturbation and bioirrigation indices from Model output","text":"Karline Soetaert <karline.soetaert@nioz.nl>","code":""},{"path":"https://EMODnet.github.io/Bfiat/reference/getDbModel.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"From model output (time x taxon density) to time x bioturbation or time x bioirrigation potentials. — Bioturbation and bioirrigation indices from Model output","text":"*** taxon names **** names columns model taxon names, also found trait database. can create problem model output data.frame taxon names contain blancs. case, names \".\" rather \" \". can solved either (1) making names trait database consistent model output (use R-function make.names() convert names spaces good names, used data.frames), (2) specifying true names argument taxon_names actual taxon names (order columns). *** Formulae **** get_Db_model: formula estimating bioturbation Index taxon (Querios et al., 2013) : BPc_i = sqrt(Wi) * density_i * Ri*Wi get_irr_model: formula estimating bioirrigation Index taxon (Wrede et al., 2018) : IPc_i = (Wi)^(0.75) * density_i * BTi*FTi*IDi stations Index sum species indices.","code":""},{"path":[]},{"path":"https://EMODnet.github.io/Bfiat/reference/getDbModel.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"From model output (time x taxon density) to time x bioturbation or time x bioirrigation potentials. — Bioturbation and bioirrigation indices from Model output","text":"Queiros, Ana M., Silvana N. R. Birchenough, Julie Bremner, Jasmin . Godbold, Ruth E. Parker, Alicia Romero-Ramirez, Henning Reiss, Martin Solan, Paul J. Somerfield, Carl Van Colen, Gert Van Hoey, Stephen Widdicombe, 2013. bioturbation classification European marine infaunal invertebrates. Ecology Evolution 3 (11), 3958-3985 Solan M, Cardinale BJ, Downing AL, Engelhardt KAM, Ruesink JL, Srivastava DS. 2004. Extinction ecosystem function marine benthos. Science 306:1177-80. . Wrede, J.Beermann, J.Dannheim, L.Gutow, T.Brey, 2018. Organism functional traits ecosystem supporting services - novel approach predict bioirrigation. Ecological indicators, 91, 737-743.","code":""},{"path":"https://EMODnet.github.io/Bfiat/reference/getDbModel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"From model output (time x taxon density) to time x bioturbation or time x bioirrigation potentials. — Bioturbation and bioirrigation indices from Model output","text":"","code":"## ==================================================== ## A small model ## ====================================================   Trawl.pars <- data.frame(     taxon = c(\"sp.1\",\"sp.2\",\"sp.3\",\"sp.4\"),  # name of taxa     r     = c(   3,      1,    20,    0.1),  # rate of increase (/year)     K     = c(   1,     10,   0.5,    10 ),  # carrying capacity (density or biomass)     d     = c( 0.1,    0.1,   0.5,   0.8))  # instantaneous depletion  # run the model for 5 years   times   <- seq(0, 5, by=1/365)             # time in years (consistent with pars)  # trawling frequency once / twice per year  trawl1  <- seq(from=1/4, by=1,   to=5)   trawl2  <- seq(from=1/4, by=0.5, to=5)  # run the model  trawl1run <- run_perturb (parms  = Trawl.pars,                             times  = times,                             events = trawl1)        trawl2run <- run_perturb (parms  = Trawl.pars,                             times  = times,                             events = trawl2)        plot(trawl1run, trawl2run)    ##----------------------------------------------------- ## Small dataset: taxonomy ##-----------------------------------------------------  Btaxonomy <- data.frame(   species = c(\"sp.1\",\"sp.2\",\"sp.3\",\"sp.4\",\"sp.5\",\"sp.6\"),   genus   = c( \"g.1\", \"g.2\", \"g.2\", \"g.2\", \"g.3\", \"g.4\"),   family  = c( \"f.1\", \"f.1\", \"f.1\", \"f.1\", \"f.2\", \"f.3\"),   order   = c( \"o.1\", \"o.1\", \"o.1\", \"o.1\", \"o.2\", \"o.2\"),   class   = c( \"c.1\", \"c.1\", \"c.1\", \"c.1\", \"c.1\", \"c.1\")   )  ##----------------------------------------------------- ## Db and Irr traits ##-----------------------------------------------------  # Note: no data for \"sp.4\" DbTraits <- data.frame(   taxon   = c(\"sp.1\",\"sp.2\",\"sp.3\",\"sp.5\",\"sp.6\"),   Ri      = c(1     , 1    ,   3  ,   2  ,     4),   Mi      = c(1     , 2    ,   2  ,   3  ,     3) )  IrrTraits <- data.frame(   taxon   = c(\"sp.1\",\"sp.2\",\"sp.3\",\"sp.5\",\"sp.6\"),   BT      = c(1     , 1    ,   3  ,   2  ,     3),   FT      = c(3     , 2.5  ,   2  ,   3  ,     2),   ID      = c(1     , 2    ,   1  ,   3  ,     2) )  # Weight of the species - it is assumed this does not change over time Weight <- data.frame(taxon=c(\"sp.1\",\"sp.2\",\"sp.3\",\"sp.4\",\"sp.5\",\"sp.6\"),                      weight =c(0.1,   0.2,     3,  0.04,   0.5,     6))                       DbRun  <- get_Db_model (model       = trawl1run,                           trait       = DbTraits,                          weight      = Weight)                        head(DbRun)   # contains NA for sp.4 that is not in DbTraits #>             time  BPc_sp.1 BPc_sp.2 BPc_sp.3 BPc_sp.4      BPc #> [1,] 0.000000000 0.3162278 8.944272 5.196152       NA 14.45665 #> [2,] 0.002739726 0.3162278 8.944272 5.196152       NA 14.45665 #> [3,] 0.005479452 0.3162278 8.944272 5.196152       NA 14.45665 #> [4,] 0.008219178 0.3162278 8.944272 5.196152       NA 14.45665 #> [5,] 0.010958904 0.3162278 8.944272 5.196152       NA 14.45665 #> [6,] 0.013698630 0.3162278 8.944272 5.196152       NA 14.45665 attributes(DbRun)$notrait #> [1] \"sp.4\"  # use taxonomy to also estimate Db for sp.4 DbRun1 <- get_Db_model (model       = trawl1run,                           trait       = DbTraits,                          weight      = Weight,                         taxonomy    = Btaxonomy) head(DbRun1)  # sp.4 estimated based on taxonomic closeness #>             time  BPc_sp.1 BPc_sp.2 BPc_sp.3 BPc_sp.4      BPc #> [1,] 0.000000000 0.3162278 8.944272 5.196152        8 22.45665 #> [2,] 0.002739726 0.3162278 8.944272 5.196152        8 22.45665 #> [3,] 0.005479452 0.3162278 8.944272 5.196152        8 22.45665 #> [4,] 0.008219178 0.3162278 8.944272 5.196152        8 22.45665 #> [5,] 0.010958904 0.3162278 8.944272 5.196152        8 22.45665 #> [6,] 0.013698630 0.3162278 8.944272 5.196152        8 22.45665   # Show results - note: no sp4 for DbRun, so only one line plot(DbRun1, DbRun)  # Irrigation potential index IrrRun1 <- get_irr_model (model       = trawl1run,                             trait       = IrrTraits,                            weight      = Weight,                           taxonomy    = Btaxonomy)  plot(IrrRun1)"},{"path":"https://EMODnet.github.io/Bfiat/reference/getTraitModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to obtain (time x trait) data by combining model output (time x taxon) with trait (taxon x trait) data. — Combining Model output and Trait data","title":"Function to obtain (time x trait) data by combining model output (time x taxon) with trait (taxon x trait) data. — Combining Model output and Trait data","text":"get_trait_model combines (1) output fisheries model describes taxa densities evolve time, (2) trait database taxa, obtain traits evolve time.","code":""},{"path":"https://EMODnet.github.io/Bfiat/reference/getTraitModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to obtain (time x trait) data by combining model output (time x taxon) with trait (taxon x trait) data. — Combining Model output and Trait data","text":"","code":"get_trait_model(model, trait, trait_class = NULL, trait_score = NULL,                  taxon_names = colnames(model)[-1],                  taxonomy = NULL, taxon_column = 1,                  scalewithvalue = TRUE, verbose = FALSE)"},{"path":"https://EMODnet.github.io/Bfiat/reference/getTraitModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to obtain (time x trait) data by combining model output (time x taxon) with trait (taxon x trait) data. — Combining Model output and Trait data","text":"model dynamic model output describes taxa change time. matrix (time x taxon) information, generated function run_perturb. first column contain time, columns taxon density time, column names actual taxon names. (see note consequences .) taxon_names names taxa, one column model, except first column. vector length = ncol(model) - 1. names matched trait database, optionally weight two-columned matrix/data.frame. trait (taxon x trait) data (descriptor x trait) data, *WIDE* format, containing numerical values . Traits can fuzzy coded. trait matrix name taxon first column (taxon_column=1); also allowed taxon names row.names (taxon_column=0). trait_class vector indices trait levels modality matrix trait. length vector equal number columns trait minus value taxon_column. present, -together trait_score- used convert trait matrix fuzzy crisp format. trait_score trait values scores modality, vector. length trait_class scalewithvalue TRUE, standardize respect total density, average trait value obtained (summed value). verbose TRUE, write warnings screen. taxonomy taxonomic information; first column matched taxon, regardless name. present, unknown traits estimated based taxonomic closeness taxon. taxon_column position(s) name(s) column(s) hold taxa (data.frame trait). default first column holding taxa. NULL, 0, separate column names, row.names dataset used taxon names.","code":""},{"path":"https://EMODnet.github.io/Bfiat/reference/getTraitModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to obtain (time x trait) data by combining model output (time x taxon) with trait (taxon x trait) data. — Combining Model output and Trait data","text":"get_trait_model returns time x trait density matrix class deSolve (see ode), contains, output time (rows), traits defined trait.","code":""},{"path":"https://EMODnet.github.io/Bfiat/reference/getTraitModel.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Function to obtain (time x trait) data by combining model output (time x taxon) with trait (taxon x trait) data. — Combining Model output and Trait data","text":"Karline Soetaert <karline.soetaert@nioz.nl>","code":""},{"path":"https://EMODnet.github.io/Bfiat/reference/getTraitModel.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Function to obtain (time x trait) data by combining model output (time x taxon) with trait (taxon x trait) data. — Combining Model output and Trait data","text":"get_trait_model based Btrait function get_trait_density. returns object class deSolve matrix (rather dataframe). make use deSolve plotting facilities. names columns model taxon names, also found trait database. can create problem model output data.frame taxon names contain blancs. case, names \".\" rather \" \". can solved either (1) making names trait database consistent model output (use R-function make.names() convert names spaces good names, used data.frames), (2) adding, object model attribute called taxon.names actual taxon names (order columns); (attributes(model)$taxon.names  <- taxon.names).","code":""},{"path":[]},{"path":"https://EMODnet.github.io/Bfiat/reference/getTraitModel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to obtain (time x trait) data by combining model output (time x taxon) with trait (taxon x trait) data. — Combining Model output and Trait data","text":"","code":"## ==================================================== ## A small model - units per day ## ====================================================  # parameters  Trawl.pars <- data.frame(     taxon = c(\"sp.1\",\"sp.2\",\"sp.3\",\"sp.4\"), # name of taxa     r     = c(0.01,  0.005,  0.05, 0.001),  # rate of increase (/day)     K     = c(   1,     10,   0.5,    10),  # carrying capacity (density or biomass)     d     = c( 0.1,    0.1,   0.5,   0.8))  # instantaneous depletion  # run the model for 5 years, output every day   times   <- 0:1825                          # time in days (consistent with pars)  # trawling frequency once / twice per year  trawl1  <- seq(from=92, by=  365, to=365*5)  trawl2  <- seq(from=92, by=182.5, to=365*5)  # run both models  trawl1run <- run_perturb (parms  = Trawl.pars,                             times  = times,                             events = trawl1)        trawl2run <- run_perturb (parms  = Trawl.pars,                             times  = times,                             events = trawl2)        plot(trawl1run, trawl2run, lty=1)   ##----------------------------------------------------- ## Fuzzy-coded traits ##-----------------------------------------------------  # Note: no data for \"sp.4\"  Btraits <- data.frame(   taxon   = c(\"sp.1\",\"sp.2\",\"sp.3\",\"sp.5\", \"sp.6\"),   T1_M1   = c(0     , 0    ,   0  , 0.2  ,     1),   T1_M2   = c(1     , 0    , 0.5  , 0.3  ,     0),   T1_M3   = c(0     , 1    , 0.5  , 0.5  ,     0),   T2_M1   = c(0     , 0    ,   1  , 0.5  ,     1),   T2_M2   = c(1     , 1    ,   0  , 0.5  ,     0) )  # The metadata for these traits (meaining of Btraits columns) Btraits.lab <- data.frame(   colname  =c(\"T1_M1\",\"T1_M2\",\"T1_M3\",\"T2_M1\",\"T2_M2\"),   trait    =c(\"T1\"   ,\"T1\"   ,\"T1\"   ,\"T2\"   ,\"T2\"),   modality =c(\"M1\"   ,\"M2\"   ,\"M3\"   ,\"M1\"   ,\"M2\"),    score    =c(0      , 0.5   , 1     , 0.2   , 2) )  ##----------------------------------------------------- ## Small dataset: taxonomy ##-----------------------------------------------------  Btaxonomy <- data.frame(   species = c(\"sp.1\",\"sp.2\",\"sp.3\",\"sp.4\",\"sp.5\",\"sp.6\"),   genus   = c( \"g.1\", \"g.2\", \"g.2\", \"g.2\", \"g.3\", \"g.4\"),   family  = c( \"f.1\", \"f.1\", \"f.1\", \"f.1\", \"f.2\", \"f.3\"),   order   = c( \"o.1\", \"o.1\", \"o.1\", \"o.1\", \"o.2\", \"o.2\"),   class   = c( \"c.1\", \"c.1\", \"c.1\", \"c.1\", \"c.1\", \"c.1\")   )  ##----------------------------------------------------- ## Trait changes for runs -  average for each trait (crisp format) ##-----------------------------------------------------  # if verbose=TRUE, a warning will be given, as there is no trait information # for sp4 - this affects the trait density for station \"b\"  TraitRun1 <- get_trait_model (                         model       = trawl1run,                           trait       = Btraits,                          trait_class = Btraits.lab$trait,                          trait_score = Btraits.lab$score,                          verbose     = FALSE)                          TraitRun2 <- get_trait_model (                         model       = trawl2run,                           trait       = Btraits,                          trait_class = Btraits.lab$trait,                          trait_score = Btraits.lab$score,                          verbose     = FALSE)                          attributes(TraitRun1)$notrait   # species that was ignored #> [1] \"sp.4\"  plot(TraitRun1, TraitRun2)   ##----------------------------------------------------- ## Trait changes - keeping fuzzy scores ##-----------------------------------------------------  TraitRun1b <- get_trait_model (                         model       = trawl1run,                           trait       = Btraits)  attributes(TraitRun1b)$notrait #> [1] \"sp.4\"  ##----------------------------------------------------- ## Trait changes - keeping fuzzy scores -  ## use taxonomic info to create unknown traits ##-----------------------------------------------------  TraitRun1c <- get_trait_model (                         model       = trawl1run,                           trait       = Btraits,                          taxonomy    = Btaxonomy) attributes(TraitRun1c)$notrait #> [1] NA  plot(TraitRun1b, TraitRun1c)"},{"path":"https://EMODnet.github.io/Bfiat/reference/sensitivity.html","id":null,"dir":"Reference","previous_headings":"","what":"Sensitivity of an area or taxon to fishing parameters — taxon and area sensitivity to fishing","title":"Sensitivity of an area or taxon to fishing parameters — taxon and area sensitivity to fishing","text":"sensitivity_taxon estimates one taxon density decrease combinations sar gpd;   also estimates critical (sar x gpd) values taxon. sensitivity_area estimates one set sar gpd values density decrease combinations r (rate natural increase) d (depletion);   also estimates critical (r x d) combinations area.","code":""},{"path":"https://EMODnet.github.io/Bfiat/reference/sensitivity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sensitivity of an area or taxon to fishing parameters — taxon and area sensitivity to fishing","text":"","code":"sensitivity_taxon (fDepth = 1, uDepth = 0, r = 0.1,               sar.seq = seq(0,    10, length.out = 200),              gpd.seq = seq(0,     5, length.out = 200),              ...)  sensitivity_area (sar = 1, gpd = 1,              r.seq = seq(1e-1,  5, length.out = 200),              d.seq = seq(0,   0.5, length.out = 200))"},{"path":"https://EMODnet.github.io/Bfiat/reference/sensitivity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sensitivity of an area or taxon to fishing parameters — taxon and area sensitivity to fishing","text":"sar, sar.seq fishing intensity, estimated Swept Area Ratio, units e.g. [m2/m2/year].   One number defining area (sensitivity_area), vector (sensitivity_taxon) sensitivity needs estimated. gpd, gpd.seq gear penetration depth, units e.g. [cm].   One number defining area (sensitivity_area), vector (sensitivity_taxon) sensitivity needs estimated. r, r.seq rate increase taxon, units e.g. [/year].   One number defining taxon (sensitivity_taxon), vector (sensitivity_area) sensitivity needs estimated. d.seq depletion fraction due fishing, vector (sensitivity_area) sensitivity needs estimated. fDepth fractional occurrence species sediment layers, dimensionless.   vector length uDepth. sum fDepth equal 1. used estimate depletion fraction d. uDepth depth upper position sediment layers, units e.g. [cm].   vector length equal number columns fDepth. ... arguments passed par_d function","code":""},{"path":"https://EMODnet.github.io/Bfiat/reference/sensitivity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sensitivity of an area or taxon to fishing parameters — taxon and area sensitivity to fishing","text":"function sensitivity_taxon returns list : sar, sequence swept area ratios corresponding DK, [/year] gpd, sequence gear penetration depths corresponding DK, [cm] DK, density/carrying capacity ratio, matrix, corresponding sar (rows) gpd (column), [-] critical_sar,  critical value sar gpd, taxon extinct,  [/yr] critical_gpd, critical value gpd sar, taxon extinct, [cm] r, intrinsic rate natural increase taxon, [/yr] Depth_mean, mean living depth taxon (sum(fDepth*uDepth)),  [cm] d_mean, mean depletion fraction (gpd), [-] function sensitivity_area returns list : r, sequence intrinsic rate natural increase, corresponding DK, [/year] d, sequence d, depletion fractions, corresponding DK, [cm] DK, density/carrying capacity ratio, matrix, corresponding r (rows) d (column), [-] critical_r,  critical value r d, taxon extinct,  [/yr] critical_d, critical value d r, taxon extinct, [-] sar, swept area ratio area, [/yr] gpd, gear penetration depth area, [cm]","code":""},{"path":"https://EMODnet.github.io/Bfiat/reference/sensitivity.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Sensitivity of an area or taxon to fishing parameters — taxon and area sensitivity to fishing","text":"Karline Soetaert <karline.soetaert@nioz.nl>","code":""},{"path":[]},{"path":"https://EMODnet.github.io/Bfiat/reference/sensitivity.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Sensitivity of an area or taxon to fishing parameters — taxon and area sensitivity to fishing","text":"added","code":""},{"path":"https://EMODnet.github.io/Bfiat/reference/sensitivity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sensitivity of an area or taxon to fishing parameters — taxon and area sensitivity to fishing","text":"","code":"## ----------------------------------------------------------------------- ## sensitivity for two species in the Dutch part of the Northsea ## -----------------------------------------------------------------------  par(mfrow = c(2,2), las = 1)  # parameters for A. filiformis and for Arctica islandica  subset(MWTL$fishing,         subset = (taxon == \"Amphiura filiformis\")) #>                  taxon p0 p0_5cm p5_15cm p15_30cm p30cm Age.at.maturity    r #> 25 Amphiura filiformis  0   0.75    0.25        0     0               4 0.64  S_af <- sensitivity_taxon(r      = 0.64,                            fDepth = c(0.75, 0.25),                           uDepth = c(0,      5))  subset(MWTL$fishing,         subset = (taxon == \"Arctica islandica\")) #>                taxon p0 p0_5cm p5_15cm p15_30cm p30cm Age.at.maturity    r #> 38 Arctica islandica  0    0.6     0.4        0     0               4 0.64  S_ai <- sensitivity_taxon(r      = 0.64,                            fDepth = c(0.6,  0.4),                           uDepth = c(0,     5))  # image, black = extinct image2D(x = S_af$sar, y = S_af$gpd, z = S_af$DK,          xlab = \"sar, /yr\", ylab = \"gpd, cm\",          main = c(\"Species sensitivity\",                   \"Amphiura filiformis\"),         col = jet2.col(100), clab = \"D/K\") lines(S_af$sar, S_af$critical_gpd, lwd = 2)          # add the stations in the MWTL data (from Btrait) points(MWTL$abiotics$sar, MWTL$abiotics$gpd,         pch = 18, col = \"grey\")  # image, blue = extinct image2D(x = S_ai$sar, y = S_ai$gpd, z = S_ai$DK,          xlab = \"sar, /yr\", ylab = \"gpd, cm\",          main = c(\"Species sensitivity\",                   \"Arctica islandica\"),         col = jet2.col(100), clab = \"D/K\") lines(S_ai$sar, S_ai$critical_gpd, lwd = 2)  # add the stations in the MWTL data (from Btrait) points(MWTL$abiotics$sar, MWTL$abiotics$gpd,         pch = 18, col = \"grey\")  matplot(S_af$gpd, cbind(S_af$critical_sar, S_ai$critical_sar),         xlab = \"gpd, cm\", ylab = \"critical sar, /yr\",         type = \"l\", lty = 1, lwd = 2) matplot(S_af$sar, cbind(S_af$critical_gpd, S_ai$critical_gpd),         xlab = \"sar, /yr\", ylab = \"critical gpd, cm\",         type = \"l\", lty = 1, lwd = 2) legend(\"topright\", col = 1:2, lty = 1, lwd = 2,        legend = c(\"Amphiura filiformis\", \"Arctica islandica\"))   ## ----------------------------------------------------------------------- ## sensitivity for two stations in the Dutch part of the Northsea ## -----------------------------------------------------------------------  par(mfrow = c(2, 2), las = 1)  # parameters for stations WADDKT04, FRIESFT15  subset(MWTL$abiotics,         subset = (station== \"WADDKT04\"),        select = c(station, sar, gpd)) #>     station      sar      gpd #> 97 WADDKT04 11.81742 1.898136  S_W <- sensitivity_area(sar      = 11.817,                          gpd      = 1.90,                         r.seq    = seq(0,  11, length.out = 200),                         d.seq    = seq(0, 0.2, length.out = 200))  subset(MWTL$abiotics,         subset = (station == \"FRIESFT15\"),        select = c(station, sar, gpd)) #>      station       sar     gpd #> 48 FRIESFT15 0.1466945 1.52917  S_F <- sensitivity_area(sar      = 0.15,                          gpd      = 1.53,                         r.seq    = seq(0,  11, length.out = 200),                         d.seq    = seq(0, 0.2, length.out = 200))  # The species in the MWTL data (from Btrait) Fish    <- MWTL$fishing  # depletion for all MWTL species in station WADDKT04 Fish$dW <- par_d(         gpd    = 1.90,          fDepth = Fish[, c(\"p0\", \"p0_5cm\", \"p5_15cm\", \"p15_30cm\", \"p30cm\")],         uDepth =        c(  0,    0,        5,         15,         30))  # depletion for all MWTL species in station FRIESFT15 Fish$dF <- par_d(         gpd = 1.53,          fDepth = Fish[, c(\"p0\", \"p0_5cm\", \"p5_15cm\", \"p15_30cm\", \"p30cm\")],         uDepth =        c(  0,    0,        5,         15,         30))  # image of station sensitivity, white = extinct (D/K = NA) image2D(x = S_W$r, y = S_W$d, z=S_W$DK,          xlab = \"r, /yr\", ylab = \"d, -\",          main = c(\"Area sensitivity\",                   \"WADDKT04\"),         col = jet2.col(100), clab = \"D/K\") lines(S_W$r, S_W$critical_d, lwd = 2)  points(Fish$r, Fish$dW,         pch = 18, col = \"grey\")  # image, white = extinct (D/K = NA) image2D(x = S_F$r, y = S_F$d, z=S_F$DK,          xlab = \"r, /yr\", ylab = \"d, -\",          main = c(\"Area sensitivity\",                   \"FRIESFT15\"),         col = jet2.col(100), clab = \"D/K\") lines(S_F$r, S_F$critical_d, lwd = 2) points(Fish$r, Fish$dF,         pch = 18, col = \"grey\")  matplot(S_W$d, cbind(S_W$critical_r, S_F$critical_r),         xlab = \"d, -\", ylab = \"critical r, /yr\",         type = \"l\", lty = 1, lwd = 2) matplot(S_W$r, cbind(S_W$critical_d, S_F$critical_d),         xlab = \"r, /yr\", ylab = \"critical d, -\",         type = \"l\", lty = 1, lwd = 2) legend(\"topright\", col = 1:2,         legend = c(\"WADDKT04\", \"FRIESFT15\"))    ## ----------------------- ## sensitivity_taxon ## -----------------------  par(las = 1, mfrow = c(2,2))  S_sp1 <- sensitivity_taxon(r = 0.5)  image2D(x = S_sp1$sar, y = S_sp1$gpd, z=S_sp1$DK,          xlab = \"sar, yr^-1\", ylab = \"gpd, cm\",          main = c(\"Species sensitivity\",                   paste0(\"r = \", S_sp1$r,                          \" , depth = \", S_sp1$Depth_mean)),         col = jet2.col(100)) lines(S_sp1$sar, S_sp1$critical_gpd, lwd = 2)  S_sp2 <- sensitivity_taxon(r = 1, uDepth = 1)  image2D(x = S_sp2$sar, y = S_sp2$gpd, z=S_sp2$DK,          col = jet2.col(100),          xlab = \"sar\", ylab = \"gpd\",          main = c(\"Species sensitivity\",                   paste0(\"r = \", S_sp2$r,                          \" , depth = \", S_sp2$Depth_mean)))  lines(S_sp2$sar, S_sp2$critical_gpd, lwd = 2)  ## ----------------------- ## sensitivity_area ## -----------------------  AA <- sensitivity_area(sar = 1, gpd = 1)  image2D(x = AA$r, y = AA$d, z=AA$DK, col = jet2.col(100),          xlab = \"rate of increase, r\", ylab = \"depletion, d\",          main = c(\"Area sensitivity\",                   paste0(\"sar = \", AA$sar, \" , gpd = \", AA$gpd)))  lines(AA$r, AA$critical_d, lwd = 2)  A2 <- sensitivity_area(sar = 5, gpd = 2)  image2D(x = A2$r, y = A2$d, z=A2$DK,          col = jet2.col(100),          xlab = \"rate of increase, r\", ylab = \"depletion, d\",          main = c(\"Area sensitivity\",                   paste0(\"sar = \", A2$sar, \" , gpd = \", A2$gpd))) lines(A2$r, A2$critical_d, lwd = 2)"},{"path":"https://EMODnet.github.io/Bfiat/reference/steadydensity.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate steady-state density for logistic and perturbation model for one and more metiers. — steady-state density ","title":"Estimate steady-state density for logistic and perturbation model for one and more metiers. — steady-state density ","text":"steady_perturb  steady_logistic calculate steady-state density taxa, based carrying capacity K, fishing intensity (swept area ratio, sar mortality m), species-specific parameters r d (rate increase depletion fraction).","code":""},{"path":"https://EMODnet.github.io/Bfiat/reference/steadydensity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate steady-state density for logistic and perturbation model for one and more metiers. — steady-state density ","text":"","code":"steady_perturb  (K = 1, r = 1, d = 0.1,                  parms = data.frame(K = K, r = r, d = d),                  sar = 1, D0 = parms[[\"K\"]], tol = 1e-06)  steady_metier  (K = 1, r = 1,                   parms = data.frame(K = K, r = r),                  d = data.frame(0.1, 0.1), sar = data.frame(1, 2),                  D0 = parms[[\"K\"]], tol = 1e-06)  steady_logistic (K = 1, r = 1, m = 0.1,                  parms = data.frame(K = K, r = r, m = m),                  D0 = parms[[\"K\"]], tol = 1e-06)"},{"path":"https://EMODnet.github.io/Bfiat/reference/steadydensity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate steady-state density for logistic and perturbation model for one and more metiers. — steady-state density ","text":"sar fishing intensity, estimated Swept Area Ratio, units e.g. [m2/m2/year]. One number, , (steady_perturb) vector length density. r rate increase taxon, units e.g. [/year]. One number, (steady_perturb steady_logistic) vector. d depletion fraction due fishing. One number, (steady_perturb) vector length r. K carrying capacity. One number, (steady_perturb steady_logistic) vector length r. m mortality rate continous model; NA, estimated sar, r, d K; vector length r. parms data.frame parameters. D0 initial density. One number, vector length = nrow(parms). tol tolerance steady-state solution needs estimated. Steady-state assumed reached, successive values 1/sar, Di Di+1 differ less atol + tol*Di+1, atol taken 1e-10 (changed)","code":""},{"path":"https://EMODnet.github.io/Bfiat/reference/steadydensity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate steady-state density for logistic and perturbation model for one and more metiers. — steady-state density ","text":"steady_perturb: returns data.frame k, r, d, sar, D0, input parameters, density_before, density_after, density trawling steady-state, density, estimated densities, averaged trawling interval steady-state, ntrawl, number trawls attained, time, time steady-state reached (within tol). steady_logistic: returns data.frame k, r, m, D0, input parameters, density, estimated densities steady-state, time, time steady-state reached (within tol).","code":""},{"path":"https://EMODnet.github.io/Bfiat/reference/steadydensity.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Estimate steady-state density for logistic and perturbation model for one and more metiers. — steady-state density ","text":"Karline Soetaert <karline.soetaert@nioz.nl>","code":""},{"path":[]},{"path":"https://EMODnet.github.io/Bfiat/reference/steadydensity.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimate steady-state density for logistic and perturbation model for one and more metiers. — steady-state density ","text":"Hiddink, JG, Jennings, S, Sciberras, M, et al., 2019. Assessing bottom trawling impacts based longevity benthic invertebrates. J Appl Ecol 56: 1075-1084. https://doi.org/10.1111/1365-2664.13278 Hiddink, Jan Geert, Simon Jennings, Marija Sciberras, Claire L. Szostek, Kathryn M. Hughes, Nick Ellis, Adriaan D. Rijnsdorp, Robert . McConnaughey, Tessa Mazor, Ray Hilborn, Jeremy S. Collie, C. Roland Pitcher, Ricardo O. Amoroso, Ana M. Parma, Petri Suuronen, Michel J. Kaiser, 2017.  Global analysis depletion recovery seabed biota bottom trawling disturbance. Proc. Nat. Aca. Sci, 114 (31) 8301-8306. https://doi.org/10.1073/pnas.161885811. C.R. Pitcher, N. Ellis, S. Jennings, J.G. Hiddink, T. Mazor, M.J.Kaiser, M.. Kangas, R.. McConnaughey, .M. Parma, .D. Rijnsdorp, P. Suuronen, J.S. Collie, R. Amoroso, K.M. Hughes R. Hilborn, 2017. Estimating sustainability towed fishing-gearimpacts seabed habitats: simple quantitative riskassessment method applicable data-limited fisheries. Methods Ecology Evolution,8,472-480doi: 10.1111/2041-210X.12705","code":""},{"path":"https://EMODnet.github.io/Bfiat/reference/steadydensity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate steady-state density for logistic and perturbation model for one and more metiers. — steady-state density ","text":"","code":"## ==================================================== ## Several inputs logistic model ## ====================================================  SL  <- steady_logistic(r   = 1,                         K   = 1,                         m = seq(0.01, 0.5, length.out = 100),                         tol = 1e-9)  ## ==================================================== ## Several inputs perturbation model ## ====================================================  S1  <- steady_perturb(r   = 0.5,                        d   = 0.2,                        K   = 1,                        sar = seq(0.1, 4, length.out = 100),                        tol = 1e-9)  ## - compare with analytic formula  # Steady-state density can also be estimated using this formula # (from Pritchard, 2017): D = 1+ sar/r * log(1-d)  S1$DD <- with (S1, 1 + sar/r * log(1-d))  # The min and max density is also estimated with steady_perturb with(S1, plot (sar, density)) with(S1, lines (sar, density_before, lty = 2)) with(S1, lines (sar, density_after, lty = 2)) with(S1, lines (sar, DD, col = 2))       legend(\"topright\", pch = c(1, NA, NA, NA), lty = c(NA, 1, 2, 2),          col = c(1, 1, 1, 2),        legend = c(\"mean in interval\", \"before trawling\",                    \"after trawling\", \"1+sar/r*log(1-d)\"))        # random combinations n <- 1000 S2  <- steady_perturb(r   = runif(min = 0.5,  max = 2,   n = n),                        d   = runif(min = 0.01, max = 0.5, n = n),                        K   = runif(min = 0.1,  max = 500, n = n),                        sar = runif(min = 0,    max = 4,   n = n),                        tol = 1e-9)  # Steady-state density can also be estimated using this formula # (from Pritchard, 2017): D* = 1+ sar/r * log(1-d) S2$DD <- with (S2, K*(1 + sar/r * log(1-d)))  with(S2, plot (density, pmax(0, DD),                xlab = \"numeric\",                 ylab = \"analytic formula (Pritchard 2017)\",                 main = \"mean steady-state density\"))   ## ==================================================== ## Compare steady-state solution with dynamic run ## ====================================================  # discrete parameter values and dynamic run  parms  <- c(r = 0.5, d = 0.2, K = 1) sar    <- 0.5  times  <- seq(from = 0,      to = 20, length.out = 1000) events <- seq(from = 10/365, to = 20, by = 1/sar)  run.discrete   <- run_perturb(parms  = parms,                                times  = times,                                events = events)  # continuous simulation   # Estimate continous mortality equivalent with event fishing m              <- par_m(sar = sar,                          r   = parms[\"r\"],                          d   = parms[\"d\"],                          K   = parms[\"K\"])  # new parameter vector with mortality                      parms.c        <- c(parms[c(\"r\", \"K\")],                      m = m)  run.continuous <- run_logistic(parms = parms.c,                                 times = times)  # show both simulations in one figure  plot(run.discrete, run.continuous)  # use steady_perturb to estimate the steady-state condition  std <- steady_perturb(r   = 0.5,                        d   = 0.2,                        K   = 1,                        sar = sar) abline(h = std$density, lty = 2, col = \"green\")"},{"path":"https://EMODnet.github.io/Bfiat/reference/trawlingdensity.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimates density before and after a trawling event, or the average density between trawls. — density during trawling events","title":"Estimates density before and after a trawling event, or the average density between trawls. — density during trawling events","text":"trawl_perturb trawl_metier calculates density taxa immediately start end n-th trawling event, mean density inbetween trawling events, one metier multiple metiers respectively.","code":""},{"path":"https://EMODnet.github.io/Bfiat/reference/trawlingdensity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimates density before and after a trawling event, or the average density between trawls. — density during trawling events","text":"","code":"trawl_perturb   (K = 1, r = 1, d = 0.1,                  parms = data.frame(K = K, r = r, d = d),                  sar = 1, D0 = parms[[\"K\"]], n = 1)   trawl_metier    (K = 1, r = 1,                   parms = data.frame(K = K, r = r),                   d = data.frame(0.1, 0.1),                   sar = data.frame(1, 2),                   D0 = parms[[\"K\"]], n = 1)"},{"path":"https://EMODnet.github.io/Bfiat/reference/trawlingdensity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimates density before and after a trawling event, or the average density between trawls. — density during trawling events","text":"sar fishing intensity, estimated Swept Area Ratio, units e.g. [m2/m2/year]. trawl_perturb: one number. trawl_metier, data.frame one value per metier. r rate increase taxon, units e.g. [/year]. One number, vector. d depletion fraction due fishing. trawl_perturb: one number, vector length r.  trawl_metier, data.frame nrows = length(r), ncols = number metiers, containing one number per metier per taxon. K carrying capacity. One number, vector length r. parms data.frame parameters. D0 initial density. One number, vector length = nrow(parms). n number fishing events. One number, vector.","code":""},{"path":"https://EMODnet.github.io/Bfiat/reference/trawlingdensity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimates density before and after a trawling event, or the average density between trawls. — density during trawling events","text":"Returns data.frame, following columns:  K, r, d, D0: model parameters, times, start time trawling events argument n, times_end, end time trawling events argument n, ntrawl_from, number trawl start trawling interval (n), ntrawl_to, number trawl end trawling interval (n+1), density, density averaged trawling interval, density_start, density trawling n-th trawling interval, density_end, density end n-th trawling interval, next trawling.","code":""},{"path":"https://EMODnet.github.io/Bfiat/reference/trawlingdensity.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Estimates density before and after a trawling event, or the average density between trawls. — density during trawling events","text":"Karline Soetaert <karline.soetaert@nioz.nl>","code":""},{"path":[]},{"path":"https://EMODnet.github.io/Bfiat/reference/trawlingdensity.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimates density before and after a trawling event, or the average density between trawls. — density during trawling events","text":"Hiddink, JG, Jennings, S, Sciberras, M, et al., 2019. Assessing bottom trawling impacts based longevity benthic invertebrates. J Appl Ecol 56: 1075-1084. https://doi.org/10.1111/1365-2664.13278 Hiddink, Jan Geert, Simon Jennings, Marija Sciberras, Claire L. Szostek, Kathryn M. Hughes, Nick Ellis, Adriaan D. Rijnsdorp, Robert . McConnaughey, Tessa Mazor, Ray Hilborn, Jeremy S. Collie, C. Roland Pitcher, Ricardo O. Amoroso, Ana M. Parma, Petri Suuronen, Michel J. Kaiser, 2017.  Global analysis depletion recovery seabed biota bottom trawling disturbance. Proc. Nat. Aca. Sci, 114 (31) 8301-8306. https://doi.org/10.1073/pnas.161885811. C.R. Pitcher, N. Ellis, S. Jennings, J.G. Hiddink, T. Mazor, M.J.Kaiser, M.. Kangas, R.. McConnaughey, .M. Parma, .D. Rijnsdorp, P. Suuronen, J.S. Collie, R. Amoroso, K.M. Hughes R. Hilborn, 2017. Estimating sustainability towed fishing-gearimpacts seabed habitats: simple quantitative riskassessment method applicable data-limited fisheries. Methods Ecology Evolution,8,472-480doi: 10.1111/2041-210X.12705","code":""},{"path":"https://EMODnet.github.io/Bfiat/reference/trawlingdensity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimates density before and after a trawling event, or the average density between trawls. — density during trawling events","text":"","code":"## ==================================================== ## Density for one fishing events ## ====================================================  D1 <- trawl_perturb(n = 1,                       K = 100)    D1 #>     K r   d sar  D0 times times_end ntrawl_from ntrawl_to  density #> 1 100 1 0.1   1 100     0         1           1         2 93.47017 #>   density_start density_end #> 1            90    96.07297               ## ==================================================== ## Density for a sequence of fishing events ## ====================================================  D2 <- trawl_perturb(n = 1:10,                      K = 100)  D2 #>      K r   d sar  D0 times times_end ntrawl_from ntrawl_to  density #> 1  100 1 0.1   1 100     0         1           1         2 93.47017 #> 2  100 1 0.1   1 100     1         2           2         3 91.05639 #> 3  100 1 0.1   1 100     2         3           3         4 90.10764 #> 4  100 1 0.1   1 100     3         4           4         5 89.72587 #> 5  100 1 0.1   1 100     4         5           5         6 89.57081 #> 6  100 1 0.1   1 100     5         6           6         7 89.50760 #> 7  100 1 0.1   1 100     6         7           7         8 89.48178 #> 8  100 1 0.1   1 100     7         8           8         9 89.47124 #> 9  100 1 0.1   1 100     8         9           9        10 89.46693 #> 10 100 1 0.1   1 100     9        10          10        11 89.46517 #>    density_start density_end #> 1       90.00000    96.07297 #> 2       86.46567    94.55518 #> 3       85.09966    93.94849 #> 4       84.55364    93.70274 #> 5       84.33247    93.60266 #> 6       84.24239    93.56181 #> 7       84.20563    93.54512 #> 8       84.19061    93.53831 #> 9       84.18448    93.53552 #> 10      84.18197    93.53438  ## ==================================================== ## Density for a sequence of fishing events  ## and multiple parameters ## ====================================================  D3 <- trawl_perturb(n = 1:5,                      K = c(10, 20)) D3 #>     K r   d sar D0 times times_end ntrawl_from ntrawl_to   density #> 1  10 1 0.1   1 10     0         1           1         2  9.347017 #> 2  10 1 0.1   1 10     1         2           2         3  9.105639 #> 3  10 1 0.1   1 10     2         3           3         4  9.010764 #> 4  10 1 0.1   1 10     3         4           4         5  8.972587 #> 5  10 1 0.1   1 10     4         5           5         6  8.957081 #> 6  20 1 0.1   1 20     0         1           1         2 18.694033 #> 7  20 1 0.1   1 20     1         2           2         3 18.211279 #> 8  20 1 0.1   1 20     2         3           3         4 18.021527 #> 9  20 1 0.1   1 20     3         4           4         5 17.945174 #> 10 20 1 0.1   1 20     4         5           5         6 17.914163 #>    density_start density_end #> 1       9.000000    9.607297 #> 2       8.646567    9.455518 #> 3       8.509966    9.394849 #> 4       8.455364    9.370274 #> 5       8.433247    9.360266 #> 6      18.000000   19.214594 #> 7      17.293135   18.911035 #> 8      17.019932   18.789698 #> 9      16.910728   18.740548 #> 10     16.866493   18.720532  ## ==================================================== ## compare trawl_perturb with the dynamic model solution ## ====================================================  S      <- 1    # swept area ratio tend   <- 20     fishD  <- trawl_perturb(n   = 1:tend,                          d   = c(0.2, 0.1),                         K   = c(40, 100),                         sar = S)  head(fishD) #>    K r   d sar D0 times times_end ntrawl_from ntrawl_to  density density_start #> 1 40 1 0.2   1 40     0         1           1         2 34.59359      32.00000 #> 2 40 1 0.2   1 40     1         2           2         3 32.59422      29.30484 #> 3 40 1 0.2   1 40     2         3           3         4 31.75429      28.21217 #> 4 40 1 0.2   1 40     3         4           4         5 31.38313      27.73660 #> 5 40 1 0.2   1 40     4         5           5         6 31.21550      27.52325 #> 6 40 1 0.2   1 40     5         6           6         7 31.13904      27.42624 #>   density_end #> 1    36.63105 #> 2    35.26522 #> 3    34.67075 #> 4    34.40406 #> 5    34.28280 #> 6    34.22732  # dynamic run  times  <- seq(from = 0, to = tend, length.out = 1000)  parms  <- list(r = c(1,     1),                 K = c(40,  100),                 d = c(0.2, 0.1) )  Dens <- run_perturb(parms = parms,                      times = times,                      sar   = S)  # can only have one number for sar  # compare  matplot.0D(Dens,             lty = 1, legend = FALSE,             ylab = \"density\",             main = \"comparison trawl_perturb and run_perturb\")             with (fishD,    points(times, fishD$density_start ,             col = factor(K), pch = 15))  with (fishD,    points(times_end, density_end ,             col = factor(K), pch = 1))  with (fishD,    points(x = 0.5*(times+times_end), y = density ,             col = factor(K), pch = 22))   legend(\"left\", lty = c(1, NA, NA, NA), pch = c(NA, 15, 1, 22),        legend=c(\"run_perturb\", \"after perturbation\",        \"before perturbation\", \"interval average\"))   ## ==================================================== ## compare trawl_metier with the dynamic model solution ## ====================================================  S      <- data.frame(1, 3)    # swept area ratio   d   = data.frame(rbind(c(0.2, 0.1),                        c(0.4, 0.2)))  tend   <- 20     fishD  <- trawl_metier (n   = 1:tend,                          d   = d,                         K   = c(40, 100),                         sar = S)  head(fishD) #>    K r D0     times times_end ntrawl_from ntrawl_to  density density_start #> 1 40 1 40 0.0000000 0.5000000           1         2 36.78864      36.00000 #> 2 40 1 40 0.5000000 0.8333333           2         3 28.38467      26.98165 #> 3 40 1 40 0.8333333 1.1666667           3         4 28.16887      26.75150 #> 4 40 1 40 1.1666667 1.5000000           4         5 27.99941      26.57107 #> 5 40 1 40 1.5000000 1.8333333           5         6 22.78654      21.14332 #> 6 40 1 40 1.8333333 2.1666667           6         7 23.58950      21.96409 #>   density_end #> 1    37.47451 #> 2    29.72389 #> 3    29.52341 #> 4    29.36572 #> 5    24.40454 #> 6    25.18284  # dynamic run  times  <- seq(from = 0, to = 7, length.out = 100)  Dens <- density_metier(d   = d,                        K   = c(40, 100),                        sar = S,                        times = times,                        as.deSolve = TRUE)   # compare  matplot.0D(Dens,             lty = 1, legend = FALSE,             ylab = \"density\",             main = \"comparison trawl_metier and density_metier\")             with (fishD,    points(times, fishD$density_start ,             col = factor(K), pch = 15))  with (fishD,    points(times_end, density_end ,             col = factor(K), pch = 1))  with (fishD,    points(x = 0.5*(times+times_end), y = density ,             col = factor(K), pch = 22))   legend(\"left\", lty = c(1, NA, NA, NA), pch = c(NA, 15, 1, 22),        legend=c(\"density_metier\", \"after perturbation\",        \"before perturbation\", \"interval average\"))"},{"path":"https://EMODnet.github.io/Bfiat/reference/trawlingfun.html","id":null,"dir":"Reference","previous_headings":"","what":"Functions to estimate the impact of bottom disturbances on benthic taxa. Allows for non-regularly spaced events. — Impact of bottom disturbance","title":"Functions to estimate the impact of bottom disturbances on benthic taxa. Allows for non-regularly spaced events. — Impact of bottom disturbance","text":"run_perturb applies logistic model estimate depletion recovery benthic taxa (sequence ) bottom disturbing (e.g. trawling) events.  Fishing can implemented specifiying perturbation events. run_logistic applies logistic model constant mortality.","code":""},{"path":"https://EMODnet.github.io/Bfiat/reference/trawlingfun.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Functions to estimate the impact of bottom disturbances on benthic taxa. Allows for non-regularly spaced events. — Impact of bottom disturbance","text":"","code":"run_perturb (parms, times, sar = 1,               tstart_perturb = min(times) + 0.5/sar, tend_perturb = max(times),              events = NULL, taxon_names = parms[[\"taxon\"]],               D0 = parms[[\"K\"]], addsum = FALSE, verbose = FALSE)     run_logistic(parms, times,               tstart_perturb = min(times), tend_perturb=max(times),               taxon_names = parms[[\"taxon\"]],               D0 = parms[[\"K\"]], addsum = FALSE, verbose = FALSE)"},{"path":"https://EMODnet.github.io/Bfiat/reference/trawlingfun.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Functions to estimate the impact of bottom disturbances on benthic taxa. Allows for non-regularly spaced events. — Impact of bottom disturbance","text":"parms vector, list, data.frame logistic parameters: function run_perturb, parameters r (rate increase), K (carrying capacity), d, depletion factor event. function run_logistic, contain either parameters r, K m, constant mortality rate, parameters K, r, sar, d, latter case, parameter m estimated based sar, d. taxon_names vector names taxa whose characteristics present parms. length (number rows ) parms. present NULL, taxa output labeled \"tax_1\", \"tax_2\", etc. sar fishing intensity, estimated Swept Area Ratio, units e.g. [m2/m2/year], one number. used events NULL. times vector output times model (sorted). units times consistent unit parameter r; .e. r expressed per year (1/y), time unit years. tstart_perturb, tend_perturb time perturbation starts stops -                     tstart_perturb tend_perturb, events occur (run_perturb) mortality parameter set = 0 (run_logistic. events NULL, vector times disturbing event occurs. Event times fall within times ignored. NULL, events estimated times, sar, tend_perturb :  seq(= times[1], = 1/sar, = tend_perturb) D0 initial conditions. D0 given, set equal carrying capacity (= parms[\"K\"]. addsum TRUE extra column summed densities added. verbose TRUE write warnings screen.","code":""},{"path":"https://EMODnet.github.io/Bfiat/reference/trawlingfun.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Functions to estimate the impact of bottom disturbances on benthic taxa. Allows for non-regularly spaced events. — Impact of bottom disturbance","text":"run_perturb run_logistic return object (matrix) class deSolve (see ode), contains, output time (rows), density species (columns). addsum=TRUE, last column summed density. run_perturb instantaneous depletion values attribute depletion.","code":""},{"path":"https://EMODnet.github.io/Bfiat/reference/trawlingfun.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Functions to estimate the impact of bottom disturbances on benthic taxa. Allows for non-regularly spaced events. — Impact of bottom disturbance","text":"Karline Soetaert <karline.soetaert@nioz.nl>","code":""},{"path":"https://EMODnet.github.io/Bfiat/reference/trawlingfun.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Functions to estimate the impact of bottom disturbances on benthic taxa. Allows for non-regularly spaced events. — Impact of bottom disturbance","text":"function run_perturb implements logistic function describe density biomass evolution benthic taxa inbetween disturbance events. disturbance event creates instantaneous density reduction () taxa (defined parameter d). Inbetween disturbances, differential equation describing change C time (t) : dC/dt = r * C * (1-C/K) r intrinsic rate increase (units [/time]), K carrying capacity (units C). differential equation analytical solution: C(t)=(C0*K) / (C0 + (K-C0) * exp(-r* t)) C0 initial condition, t time. disturbance time T, density biomass C instantaneously reduced factor d: C{T+} = C{T-} * (1-d) (T-) (T+) time immediately (-) (+) disturbance. reduced density used initial condition dynamics next section time next disturbance event.","code":""},{"path":[]},{"path":"https://EMODnet.github.io/Bfiat/reference/trawlingfun.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Functions to estimate the impact of bottom disturbances on benthic taxa. Allows for non-regularly spaced events. — Impact of bottom disturbance","text":"","code":"## ==================================================== ## A small model - units in days ## ====================================================  # model parameters  Trawl.pars <- data.frame(    taxon = c(\"sp1\", \"sp2\", \"sp3\", \"sp4\"),  # name of taxa    r     = c(0.01,  0.005,  0.05, 0.001),  # rate of increase (/day)    K     = c(   1,     10,   0.5,    10),  # carrying capacity (density or biomass)    d     = c( 0.1,    0.1,   0.5,   0.8))  # instantaneous depletion fraction  # run the model for 5 years   times   <- 0:1825                          # time in days (consistent with pars)  # trawling frequency once or twice per year  trawl1  <- seq(from=92, by=  365, to=365*5)  trawl2  <- seq(from=92, by=182.5, to=365*5)   T1 <- run_perturb (parms  = Trawl.pars,                      times  = times,                      events = trawl1)        T2 <- run_perturb (parms  = Trawl.pars,                      times  = times,                      events = trawl2)                       # show results  plot(T1, T2, lty=1)    head(T1) #>      time sp1 sp2 sp3 sp4 #> [1,]    0   1  10 0.5  10 #> [2,]    1   1  10 0.5  10 #> [3,]    2   1  10 0.5  10 #> [4,]    3   1  10 0.5  10 #> [5,]    4   1  10 0.5  10 #> [6,]    5   1  10 0.5  10  # Depletion for each species at each trawling event  attributes(T1)$depletion #>      times        sp1       sp2  sp3        sp4 #> [1,]    92 0.10000000 1.0000000 0.25 8.00000000 #> [2,]   457 0.09971204 0.9824022 0.25 2.11820281 #> [3,]   822 0.09970375 0.9793151 0.25 0.59634887 #> [4,]  1187 0.09970351 0.9787641 0.25 0.17068878 #> [5,]  1552 0.09970350 0.9786655 0.25 0.04908365  ## ---------------------------------------------------- ## Randomly placed trawling events  ## ----------------------------------------------------   trawl1r <- runif(n= 5, min=0, max=365*5)  trawl2r <- runif(n=10, min=0, max=365*5)   T1r <- run_perturb (parms  = Trawl.pars,                       times  = times,                       events = trawl1r)        T2r <- run_perturb (parms  = Trawl.pars,                       times  = times,                       events = trawl2r)        plot(T1r, T2r, lty=1)   plot(T1 , T1r, lty=1)    attributes(T1)$trawl #> NULL  ## ---------------------------------------------------- ## Merging the small dataset with traits ## ----------------------------------------------------  # Note: no trait data for \"sp.4\" # fuzzy-coded traits   Btraits <- data.frame(    taxon   = c(\"sp1\",\"sp2\",\"sp3\",\"sp5\",\"sp6\"),    T1_M1   = c(0    , 0   ,   0 , 0.2 ,    1),    T1_M2   = c(1    , 0   , 0.5 , 0.3 ,    0),    T1_M3   = c(0    , 1   , 0.5 , 0.5 ,    0),    T2_M1   = c(0    , 0   ,   1 , 0.5 ,    1),    T2_M2   = c(1    , 1   ,   0 , 0.5 ,    0) )  # trait metadata (meaning of column names T1_M1 etc...)  Btraits.lab <- data.frame(    colname  = c(\"T1_M1\",\"T1_M2\",\"T1_M3\",\"T2_M1\",\"T2_M2\"),    trait    = c(\"T1\"   ,\"T1\"   ,\"T1\"   ,\"T2\"   ,\"T2\"),    modality = c(\"M1\"   ,\"M2\"   ,\"M3\"   ,\"M1\"   ,\"M2\"),     score    = c(0      , 0.5   , 1     , 0.2   , 2) )  # merge run with fuzzy traits, keep fuzzy code  Trun <- get_trait_model(model = T1,                           trait = Btraits)  plot(Trun)  # expand the run with crisp trait information # (by passing trait_class and trait_score)  Trun.crisp <- get_trait_model(model       = T1,                                 trait       = Btraits,                                 trait_class = Btraits.lab$trait,                                 trait_score = Btraits.lab$score,                                 scalewithvalue = FALSE,  # to have total numbers                                verbose     = FALSE                             )  plot(Trun.crisp)    # categorical traits need to be converted to fuzyy (wide) format first   Bcategory <- data.frame(    taxon   = c(\"sp1\",\"sp2\",\"sp3\",\"sp4\"),    C1      = c(  \"A\",  \"B\",  \"A\",  \"C\")  )    Bcat.fuzzy <- crisp2fuzzy(Bcategory)   Trun.cat <- get_trait_model(model = T1,                               trait = Bcat.fuzzy)   plot(Trun.cat)  ## ==================================================== ## Continuous mortality ## ====================================================   Cont.pars <- data.frame(    taxon = c(\"sp1\",  \"sp2\",  \"sp3\",  \"sp4\"),  # name of taxa    r     = c(0.01,   0.005,   0.05,  0.001),  # rate of increase (/day)    K     = c(   1,      10,    0.5,     10),  # carrying capacity (density or biomass)    m     = c( 0.005, 0.001,  0.025, 0.0004))  # daily mortality rate (/day)  # run the model for 5 years   times   <- 0:1825                          # time in days (consistent with pars)  # One run with fishing all times  T1 <- run_logistic (parms  = Cont.pars,                       times  = times)  # Run where fishing tops after 3 years  T2 <- run_logistic(parms        = Cont.pars,                     tend_perturb = 3*365,                     times        = times)                 # show results  plot(T1, T2, lty=1)     tail(T1) #>         time       sp1      sp2  sp3      sp4 #> [1821,] 1820 0.5000279 8.001103 0.25 6.930150 #> [1822,] 1821 0.5000278 8.001098 0.25 6.929506 #> [1823,] 1822 0.5000276 8.001094 0.25 6.928862 #> [1824,] 1823 0.5000275 8.001090 0.25 6.928219 #> [1825,] 1824 0.5000274 8.001085 0.25 6.927576 #> [1826,] 1825 0.5000272 8.001081 0.25 6.926933  ## ==================================================== ## Trawling in Dutch part of the Northsea -  ## note: units are in years here! ## ====================================================  # ---------------------------------------------------- # 1. Select the data for one station;  # ---------------------------------------------------- # use density data, averaged over all years.   spB02 <- get_density(                 data        = MWTL$density,                subset      = (station == \"BREEVTN02\"),                 averageOver = year,                 descriptor  = station,                 taxon       = taxon,                value       = density)  # ---------------------------------------------------- # 2. find corresponding parameter values # ----------------------------------------------------  # Select the traits that we will use to generate parameter values # Generate unknown traits based on taxonomic closeness    spTrait <- get_trait(taxon    = spB02$taxon,                         trait    = Traits_nioz,                         taxonomy = Taxonomy)    Traits.ext <- na.omit(spTrait)   # remove the unknown traits    Traits.lab <- attributes(Traits_nioz)$description  # The proportion of species occurrence shallower than 5 cm # is used to estimate the depletion factor \"d\"    head (Traits.lab)  # \"ET1.M1\" and ET1.M2: < 5cm DEEP #>   colname                         trait modality indic value score units #> 1  ET1.M1 Substratum depth distribution        0     1   0.0  1.00    cm #> 2  ET1.M2 Substratum depth distribution      0-5     1   2.5  0.75    cm #> 3  ET1.M3 Substratum depth distribution     5-15     1  10.0  0.50    cm #> 4  ET1.M4 Substratum depth distribution    15-30     1  22.5  0.25    cm #> 5  ET1.M5 Substratum depth distribution      >30     1  30.0  0.00    cm #> 6  ET2.M1                  Biodiffusion     Null     2   0.0  0.00     -   prop5cm <- rowSums(Traits.ext[, c(\"ET1.M1\", \"ET1.M2\")])  # convert traits to crisp values, to estimate mean lifespan   sp.Trait.crisp   <- fuzzy2crisp(trait       = Traits.ext,                                    trait_class = Traits.lab$trait,                                    trait_score = Traits.lab$value)   Life.span <- sp.Trait.crisp$Life.span  # Parameters r and d:   MWTLparms <- data.frame(taxon = Traits.ext$taxon,                            d     = 0.8 * prop5cm,                           r     = 5.31/Life.span)  # /year  # merge with sp, to add the carrying capacity (taken as the mean density)    MWTLparms <- merge(MWTLparms, spB02,                       by = \"taxon\")                          colnames(MWTLparms)[which(colnames(MWTLparms)==\"density\")] <- \"K\"  # ---------------------------------------------------- # 3. run the disturbance, trawling 1 and 2 x per year # ----------------------------------------------------    times   <- seq(0, 5, by=1/365)                          # time in years   trawl1r <- runif(n=5,  min=0, max=5)   trawl2r <- runif(n=10, min=0, max=5)     T1r <- run_perturb (parms  = MWTLparms,                        times  = times,                        events = trawl1r,                       addsum = TRUE)      # to have \"sum\"      T2r <- run_perturb (parms  = MWTLparms,                        times  = times,                        events = trawl2r,                       addsum = TRUE)                              plot(T1r, T2r, lty=1, which=\"Abra alba\")    plot(T1r, T2r, lty=1, which=\"sum\")   # ---------------------------------------------------- # 4. The evolution of feeding types due to trawling # ---------------------------------------------------- # from Traits.lab we see: #   RT6.M1       Feeding type     Deposit feeder #   RT6.M2       Feeding type     Suspension feeder #   RT6.M3       Feeding type     Herbivore/Grazer #   RT6.M4       Feeding type     Carnivore/Scavenger  # use this to select only the traits related to feeding type  FT <- Traits.ext[, c(\"taxon\", \"RT6.M1\", \"RT6.M2\", \"RT6.M3\", \"RT6.M4\")] colnames(FT)[-1] <- c(\"Deposit\", \"Suspension\", \"Herbivore\", \"Carnivore\")  head(FT) #>                   taxon   Deposit Suspension  Herbivore Carnivore #> 1             Abra alba 0.5000000  0.5000000 0.00000000 0.0000000 #> 2           Abra nitida 0.5000000  0.5000000 0.00000000 0.0000000 #> 3 Ampelisca brevicornis 0.5000000  0.5000000 0.00000000 0.0000000 #> 4   Amphiura filiformis 0.5000000  0.5000000 0.00000000 0.0000000 #> 5              Anthozoa 0.5006149  0.1971501 0.04192083 0.2603142 #> 6                Atylus 0.3076923  0.6923077 0.00000000 0.0000000  # merge perturbation output with the FT traits; use absolute numbers  FTrun <- get_trait_model(model          = T1r,                           trait          = FT,                           scalewithvalue = FALSE)  # keep absolute values head(FTrun) #>          time  Deposit Suspension Herbivore Carnivore #> 1 0.000000000 679.2092   359.1758 0.3322577  152.8082 #> 2 0.002739726 679.2092   359.1758 0.3322577  152.8082 #> 3 0.005479452 679.2092   359.1758 0.3322577  152.8082 #> 4 0.008219178 679.2092   359.1758 0.3322577  152.8082 #> 5 0.010958904 679.2092   359.1758 0.3322577  152.8082 #> 6 0.013698630 679.2092   359.1758 0.3322577  152.8082  with(as.data.frame(FTrun),     matplot(x=times, y=cbind(Deposit, Suspension, Herbivore, Carnivore),             main=\"FEEDING TYPES station BREEVTN02\", ylab=\"ind/m2\",             xlab=\"time, years\", type=\"l\", lty=1, lwd=2))  legend(\"top\", col=1:4, lty=1, lwd=2,    legend = c(\"Deposit\", \"Suspension\", \"Herbivore\", \"carnivore\"))"},{"path":"https://EMODnet.github.io/Bfiat/reference/trawlingpars.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate model parameters for use in the fishing impact model. — trawling parameters","title":"Estimate model parameters for use in the fishing impact model. — trawling parameters","text":"par_r calculates intrinsic rate natural increase (r) benthic taxa, based longevity. par_d calculates depletion rate (d) benthic taxa, based depth occurrence sediment. par_K calculates carrying capacity (K) benthic taxa, based (average) density, swept area ratio (fishing intensity), species-specific parameters r d (rate increase depletion fraction). par_m calculates mortality rate continuous model, compatible discrete (event-driven) model, based swept area ratio (fishing intensity), species-specific parameters r d (rate increase depletion fraction).","code":""},{"path":"https://EMODnet.github.io/Bfiat/reference/trawlingpars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate model parameters for use in the fishing impact model. — trawling parameters","text":"","code":"par_r (age_at_maturity = NULL, longevity = NULL)    par_d (gpd = 1, m_d = 0.055, m_max = 0.42,         fDepth, uDepth) par_K (density, sar, r, d, t_density = NULL)        par_m (sar, r, K, d, refD = K)"},{"path":"https://EMODnet.github.io/Bfiat/reference/trawlingpars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate model parameters for use in the fishing impact model. — trawling parameters","text":"density vector number observed abundance biomass taxon. t_density time onset fishing density/biomass estimated.   NULL, infinite time fishing intensity = sar assumed. case, inputted density assumed steady-state respect sar. sar fishing intensity, estimated Swept Area Ratio, units e.g. [m2/m2/year]. One number, vector length parameters. r rate increase taxon, units e.g. [/year]. One number, vector length parameters. d depletion fraction due fishing. One number, vector length parameters. K carrying capacity. One number, vector length parameters. refD reference density mortality estimated. One number vector, vector length r. longevity, age_at_maturity mean lifetime age maturity species, years. age_at_maturity gives better estimates rate increase longevity. least one two arguments needs specified; given value gpd gear penetration depth, units e.g. [cm]. One number vector. m_d mortality (depletion) parameter expressing increase mortality increasing penetration depth, units e.g. [/cm]. One number, vector length gpd. m_max maximum mortality fraction layer, dimensionless. One number, vector length gpd. fDepth fractional occurrence species sediment layers, dimensionless.   vector length uDepth (one taxon) , multiple taxa,   data.frame matrix number columns = length uDepth. sum fDepth equal 1. uDepth vector depth upper position sediment layers, units e.g. [cm]. vector length equal number columns fDepth.","code":""},{"path":"https://EMODnet.github.io/Bfiat/reference/trawlingpars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate model parameters for use in the fishing impact model. — trawling parameters","text":"return parameter values, vector.","code":""},{"path":"https://EMODnet.github.io/Bfiat/reference/trawlingpars.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Estimate model parameters for use in the fishing impact model. — trawling parameters","text":"Karline Soetaert <karline.soetaert@nioz.nl>","code":""},{"path":"https://EMODnet.github.io/Bfiat/reference/trawlingpars.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimate model parameters for use in the fishing impact model. — trawling parameters","text":"parameters d, K, r used logistic population density model: dC/dt = r * C * (1-C/K) r intrinsic rate increase (units [/time]), K carrying capacity (units C). fishing disturbance time T, density biomass C instantaneously reduced factor d: C{T+} = C{T-} * (1-d) (T-) (T+) time immediately disturbance. formulae estimating parameters species : d  estimated : d[] = min(m_max, sum(m_d * max(0, gpd-uDepth[,])*fDepth[,])) uDepth[,] fDepth[,] parameters layers species , summation sediment layers. parameters m_d m_max estimated fitting station-wide depletion rates depletion values Hiddink et al. (2017). See examples. r estimated r[] = 2.56/age_at_maturity[]: r[] = 5.31/longevity[], Hiddink et al. (2019). K estimated : K[] = (density[]*r[])/(r[]-sar * d[]), derived Pitcher et al., 2017.","code":""},{"path":[]},{"path":"https://EMODnet.github.io/Bfiat/reference/trawlingpars.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimate model parameters for use in the fishing impact model. — trawling parameters","text":"Hiddink, JG, Jennings, S, Sciberras, M, et al., 2019. Assessing bottom trawling impacts based longevity benthic invertebrates. J Appl Ecol 56: 1075-1084. https://doi.org/10.1111/1365-2664.13278 Hiddink, Jan Geert, Simon Jennings, Marija Sciberras, Claire L. Szostek, Kathryn M. Hughes, Nick Ellis, Adriaan D. Rijnsdorp, Robert . McConnaughey, Tessa Mazor, Ray Hilborn, Jeremy S. Collie, C. Roland Pitcher, Ricardo O. Amoroso, Ana M. Parma, Petri Suuronen, Michel J. Kaiser, 2017.  Global analysis depletion recovery seabed biota bottom trawling disturbance. Proc. Nat. Aca. Sci, 114 (31) 8301-8306. https://doi.org/10.1073/pnas.161885811. C.R. Pitcher, N. Ellis, S. Jennings, J.G. Hiddink, T. Mazor, M.J.Kaiser, M.. Kangas, R.. McConnaughey, .M. Parma, .D. Rijnsdorp, P. Suuronen, J.S. Collie, R. Amoroso, K.M. Hughes R. Hilborn, 2017. Estimating sustainability towed fishing-gearimpacts seabed habitats: simple quantitative riskassessment method applicable data-limited fisheries. Methods Ecology Evolution,8,472-480doi: 10.1111/2041-210X.12705","code":""},{"path":"https://EMODnet.github.io/Bfiat/reference/trawlingpars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate model parameters for use in the fishing impact model. — trawling parameters","text":"","code":"## ======================================================= ## Simple example: ## =======================================================  # ------------------------------------- # Depletion rate for one organism # -------------------------------------  # depletion for one organism, living in [0-5], [5-10], [10-15] and >15 cm  par_d (gpd=12, fDepth = c(0.1, 0.3, 0.5, 0.2),  # fractional occurrence                uDepth = c(0,     5,  10,  15))  # upper depth #> [1] 0.2365  # ------------------------------------- # Depletion rate for several organisms # -------------------------------------  # depth penetration for three organisms: # 2 sediment layers (0-10 and 10-20 cm) # sp1: in upper sediment layer, sp2: equally distributed, sp3: deep-dwelling    fDepth <- data.frame(D0_10  = c(1, 0.5, 0),   #upper depth=0                       D10_20 = c(0, 0.5, 1))   #upper depth=10    uDepth <- c(0, 10)                                # estimate depletion, using default parameter settings  # gpd=1 -> does not penetrate in depth layer 2    par_d (gpd=1, fDepth=fDepth, uDepth=uDepth) #> [1] 0.0550 0.0275 0.0000    # gpd=12 cm -> maximal depletion in layer 1; also mortality in layer 2   par_d (gpd=12, fDepth=fDepth, uDepth=uDepth) #> [1] 0.420 0.385 0.110    # higher mortality coefficient:   par_d (gpd=12, fDepth=fDepth, uDepth=uDepth, m_d=0.1) #> [1] 0.42 0.42 0.20    # depletion for one species and a range of gear penetration depths  GPD.seq <- 1:20    plot(GPD.seq,        par_d (fDepth = c(0.5, 0.4, 0.1),               uDepth = c(0, 10, 20),               gpd    = GPD.seq),       xlab=\"gear penetration depth, cm\",              ylab=\"depletion\")   # ------------------------------------- # rate of increase # -------------------------------------   Longevity <- seq(from=0, to=10, length.out=100)  plot(Longevity, par_r(Longevity), xlab=\"longevity, year\",        ylab=\"r, /year\")   # ------------------------------------- # Carrying capacity  # -------------------------------------  # estimated assuming current density is in steady-state with fishing # this returns a NA -> the steady state of the density at the sar = 0  par_K (density=1, sar=1, r=0.1, d=0.3) #> [1] NA  # Assuming that the density was estimated after 50 years of fishing  par_K (density=1, sar=1, r=0.1, d=0.3, t_density=50) #> [1] 916816.4  # estimated average mortality rate is larger than the rate of increase, r  par_m (sar=1, r=0.1, d=0.3, K=1) #> [1] 0.3553768  # this returns a value -> the species is able to persist under the current sar  par_K (density=1, sar=1, r=0.1, d=0.075) #> [1] 4.537522  par_m (sar=1, r=0.1, d=0.3, K=10)  # smaller than 0.1 #> [1] 0.3553768  # estimated for a sequence of fishing intensities  sar.seq <- seq(from=0.05, to=2, by=0.05)  K.seq   <- par_K(density = 1,                   sar     = sar.seq,                   r       = 0.5,                   d       = 0.2)  plot(sar.seq, K.seq,             xlab=\"Swept area ratio, /yr\",        ylab = \"carrying capacity\")               ## ======================================================= ## Fishing parameters for species in Traits_nioz database ## =======================================================  # ----------------------------- # Depletion rate # -----------------------------  # column names with depth occurrence of species in trait database  DepthTraits <- subset(metadata(Traits_nioz),                          subset = trait==\"Substratum depth distribution\")      DepthTraits #>   colname                         trait modality indic value score units #> 1  ET1.M1 Substratum depth distribution        0     1   0.0  1.00    cm #> 2  ET1.M2 Substratum depth distribution      0-5     1   2.5  0.75    cm #> 3  ET1.M3 Substratum depth distribution     5-15     1  10.0  0.50    cm #> 4  ET1.M4 Substratum depth distribution    15-30     1  22.5  0.25    cm #> 5  ET1.M5 Substratum depth distribution      >30     1  30.0  0.00    cm    toselect     <- DepthTraits$colname   # select depth occurrence traits in trait database  Traits_depth <- Traits_nioz[, c(\"taxon\", toselect)]  head(Traits_depth) #>                   taxon ET1.M1 ET1.M2 ET1.M3 ET1.M4 ET1.M5 #> 1          Abludomelita    0.5    0.5    0.0      0      0 #> 2 Abludomelita obtusata    0.5    0.5    0.0      0      0 #> 3             Abra alba    0.0    0.5    0.5      0      0 #> 4           Abra nitida    0.0    1.0    0.0      0      0 #> 5       Abra prismatica    0.0    1.0    0.0      0      0 #> 6           Abra tenuis    0.0    1.0    0.0      0      0   # give suitable names to the columns   cn           <- c(\"x0\", \"x0-5\", \"x5-15\", \"x15-30\", \"x>30\")  colnames(Traits_depth)[-1] <- cn  head(Traits_depth) #>                   taxon  x0 x0-5 x5-15 x15-30 x>30 #> 1          Abludomelita 0.5  0.5   0.0      0    0 #> 2 Abludomelita obtusata 0.5  0.5   0.0      0    0 #> 3             Abra alba 0.0  0.5   0.5      0    0 #> 4           Abra nitida 0.0  1.0   0.0      0    0 #> 5       Abra prismatica 0.0  1.0   0.0      0    0 #> 6           Abra tenuis 0.0  1.0   0.0      0    0  # vector with corresponding depth of upper boundary   uDepth <- c(0, 0, 5, 15, 30)     # depletion for all species and 1 cm gear penetration depth  d_1cm <- par_d( fDepth = Traits_depth[,-1],                   uDepth = uDepth,                   gpd    = 1)    summary(d_1cm) #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #> 0.00000 0.02750 0.05500 0.04183 0.05500 0.05500    # depletion for Abra alba and range of penetration depths  GPD.seq <- seq(0, 20, length.out=50)  A.alba  <- subset(Traits_depth, subset=taxon==\"Abra alba\")  A.alba #>       taxon x0 x0-5 x5-15 x15-30 x>30 #> 3 Abra alba  0  0.5   0.5      0    0    d.seq   <- par_d(fDepth = A.alba[-1],                    uDepth = uDepth,                    gpd    = GPD.seq)                     plot(GPD.seq, d.seq,        xlab = \"gear penetration depth, cm\", ylab = \"depletion\",       main = \"depletion for Abra alba\")   # depletion rate for all species and different penetration depths  ALL_d <- outer(X   = 1:nrow(Traits_depth),   # combine all x-values                 Y   = GPD.seq,                # with these y-values                                  FUN = function(i, gpd)                            par_d(fDepth = Traits_depth[i, -1], # depth of species i                          uDepth = uDepth,                           gpd    = gpd))   matplot(GPD.seq, t(ALL_d),           xlab = \"gear penetration depth, cm\", ylab = \"depletion\",          main = \"Depletion for Northsea species\",           type = \"l\", lty=1)   # ----------------------------- # Carrying capacity  # -----------------------------  # assume gear penetration depth = 3 cm  # 1. estimate depletion rate  d_3cm <- data.frame(               taxon = Traits_depth$taxon,               d     = par_d(fDepth = Traits_depth[,-1],                              uDepth = uDepth,                              gpd    = 3))   Dens <- get_density(                   data        = MWTL$density,                   descriptor  = list(station=station),                    taxon       = taxon,                    value       = list(density=density),                    averageOver = year)    FishStat <- merge(Dens    ,                     MWTL$abiotics[,c(\"station\", \"sar\")],                     by = \"station\")                      FishStat <- merge(FishStat,                     MWTL$fishing [,c(\"taxon\",\"r\")],                     by = \"taxon\")                      FishStat <- merge(FishStat,                     d_3cm,                     by = \"taxon\")    KE <- with(FishStat,              par_K (density = density,                     sar     = sar,                     r       = r,                     d       = d))  FishStat$KE <- KE   # Note: some species do not have a value for the carrying capacity # based on the assumption that the density is at steady state with the  # current fishing intensity.  length(which(is.na(KE)))/length(KE) # Fraction that cannot be there #> [1] 0.009615385  # Carrying capacity, assuming that fishing has been going on only for 50 years  FishStat$KE50 <- with(FishStat,              par_K (density   = density,                     t_density = 50,                      sar       = sar,                     r         = r,                     d         = d))     # total carrying capacity and total density per station:   Kstat <- with(FishStat,            tapply(KE,                   INDEX = station,                   FUN   = sum))   # summed carrying capacity    Dstat <- with(FishStat,            tapply(density,                   INDEX = station,                   FUN = sum))     # summed density             Kstat <- list(station=names(Kstat), K=Kstat)  Kstat <- merge(MWTL$stations, Kstat)  Kstat$D <- Dstat   head(Kstat) #>     station    x     y         K         D #> 1 BREEVTN02 3.31 53.52 1178.7365 1087.1328 #> 2 BREEVTN03 4.44 53.19  650.9417  640.3413 #> 3 BREEVTN04 4.31 53.10 1504.1525 1434.8697 #> 4 BREEVTN05 4.01 53.02 1990.5265 1853.5392 #> 5 BREEVTN06 4.23 52.82 1200.3763 1144.2236 #> 6 BREEVTN07 3.84 52.76 1177.7428 1125.9104     with(Kstat, map_key(x, y,                      contours=MWTL$contours,                     colvar = K/D-1, # color variable                     clim   = c(1e-2,1),                     main   = \"K/D-1 for 3 cm trawling\",                      pch = 18, cex = 2, log = \"c\"))       ## ==================================================== ## Mortality parameter and steady-state ## ====================================================  # discrete parameter values parms  <- c(r=0.5, d=0.2, K=1) sar    <- 2 tend   <- 20  # output times and event times times  <- seq(from=0,       to=tend, length.out=1000) events <- seq(from=0.5/sar, to=tend, by=1/sar)  # model run with events run.discrete   <- run_perturb(parms  = parms,                                times  = times,                                events = events)  # corresponding mortality paramter m              <- par_m(sar = sar,                          r   = parms[\"r\"],                          d   = parms[\"d\"], K = parms[\"K\"])  # put all in parameter vector (for continuous mortality) parms.c        <- c(parms[c(\"r\", \"K\")], m=m)  # model run with continuous mortality run.continuous <- run_logistic(parms = parms.c,                                 times = times)  # compare both (it is not perfect) plot(run.continuous, run.discrete)"}]
